{"version":3,"sources":["webpack:///./node_modules/@agm/js-marker-clusterer/fesm2015/agm-js-marker-clusterer.js","webpack:///./node_modules/@globile/branch-locator/fesm2015/globile-branch-locator.js","webpack:///./node_modules/js-marker-clusterer/src/markerclusterer.js","webpack:///./src/app/modules/branch-locator/branch-locator-wrapper.component.html","webpack:///./src/app/modules/branch-locator/branch-locator-wrapper.component.ts","webpack:///./src/app/modules/branch-locator/branch-locator-wrapper.module.ts","webpack:///./src/app/modules/branch-locator/branch-locator-wrapper.routing.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACsD;AACH;AAChE;AACL;;AAE7B,kDAAkD,uDAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,+CAAU;AACzB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,8DAAoB,EAAE;AAClC,KAAK,OAAO,oDAAM;AAClB;AACA,iBAAiB,wDAAU;AAC3B,IAAI,gEAAU;AACd,IAAI,wDAAU,uBAAuB,8DAAoB,EAAE,oDAAM;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,mBAAmB,wDAAU;AAC7B,IAAI,+DAAS;AACb;AACA;AACA;AACA,aAAa,UAAU,uDAAa,+BAA+B;AACnE,YAAY,2DAAiB;AAC7B;AACA,KAAK;AACL,IAAI,wDAAU;AACd;;AAEA;AACA;AACA,6BAA6B,wDAAU;AACvC,IAAI,8DAAQ;AACZ,kBAAkB,uDAAa;AAC/B;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;;AAEwE;AACxE;;;;;;;;;;;;;ACzTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACa;AAC0B;AAC/B;AACe;AACK;AAC2C;AAC3D;AACmC;AAC3C;AACyC;AACxC;AACiB;AACuK;AAClG;AACtD;;AAE/E;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,8BAA8B,6CAAO;AACrC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gCAAgC,2DAAW;AAC3C,sCAAsC,2DAAW;AACjD,8BAA8B,2DAAW;AACzC,kCAAkC,2DAAW;AAC7C,kCAAkC,2DAAW;AAC7C,uCAAuC,2DAAW;AAClD,0CAA0C,2DAAW;AACrD,yCAAyC,2DAAW;AACpD,yCAAyC,2DAAW;AACpD,oCAAoC,2DAAW;AAC/C,6CAA6C,2DAAW;AACxD,0CAA0C,2DAAW;AACrD,wCAAwC,2DAAW;AACnD,iBAAiB;AACjB;AACA,2CAA2C,2DAAW;AACtD,6BAA6B,2DAAW;AACxC,iBAAiB;AACjB;AACA,wCAAwC,2DAAW;AACnD,gCAAgC,2DAAW;AAC3C,kCAAkC,2DAAW;AAC7C,sCAAsC,2DAAW;AACjD,kCAAkC,2DAAW;AAC7C,kCAAkC,2DAAW;AAC7C,mCAAmC,2DAAW;AAC9C,8BAA8B,2DAAW;AACzC,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gBAAgB,qDAAQ;AACxB,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,qDAAQ;AACvC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gBAAgB,qDAAQ;AACxB,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,gBAAgB;AAChB;AACA;AACA;AACA,KAAK,OAAO,yDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,2DAAW;AACvB;AACA,mDAAmD,uEAAgB,EAAE,4CAA4C,0BAA0B,6DAAM,CAAC,2DAAW,GAAG,EAAE,4CAA4C;;AAE9M;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,8BAA8B,6CAAO;AACrC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,6CAA6C,YAAY,WAAW,GAAG,WAAW,EAAE;AACpF,yBAAyB,SAAS,oBAAoB,UAAU;AAChE,kBAAkB,0DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,EAAE;AACrC,mBAAmB,EAAE;AACrB,8CAA8C,YAAY,uBAAuB,GAAG,uBAAuB,EAAE;AAC7G,mBAAmB,EAAE;AACrB,iDAAiD,cAAc,GAAG,cAAc,aAAa,cAAc,GAAG,cAAc;AAC5H,yBAAyB,SAAS,oBAAoB,WAAW,GAAG,UAAU,IAAI,SAAS;AAC3F,kBAAkB,0DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,8CAA8C,0DAAG;AACjD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,gEAAgE,oCAAoC;AACpG;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,yDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,qDAAM,SAAS,mEAAU,IAAI,GAAG;AAC5E,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK;AACL;AACA,4DAA4D,uEAAgB,EAAE,qDAAqD,mCAAmC,6DAAM,CAAC,mEAAU,GAAG,6DAAM,CAAC,+DAAU,GAAG,6DAAM,iBAAiB,EAAE,qDAAqD;;AAE5R;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gDAAM,EAAE;AACpB,KAAK,OAAO,8DAAoB;AAChC;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,8BAA8B,6CAAO;AACrC,8BAA8B,6CAAO;AACrC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT,mDAAmD,4DAAK;AACxD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT,mDAAmD,4DAAK;AACxD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iCAAiC,gDAAE,SAAS,gDAAU;AACtD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,mBAAmB,uBAAuB,YAAY,EAAE;AACxD,SAAS,QAAQ,4DAAK;AACtB;AACA;AACA;AACA,KAAK,OAAO,yDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAa,EAAE;AAC3B,KAAK,gCAAgC,OAAO,qDAAM,qBAAqB;AACvE;AACA,wDAAwD,uEAAgB,EAAE,iDAAiD,+BAA+B,6DAAM,CAAC,uDAAa,GAAG,6DAAM,YAAY,EAAE,iDAAiD;;AAEtP;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAAY;AAC3C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,oUAAoU,+CAA+C,kDAAkD,0GAA0G,oBAAoB,uDAAuD,kIAAkI,6CAA6C,mOAAmO,8CAA8C,gMAAgM,+CAA+C,wLAAwL,4CAA4C,8NAA8N,gDAAgD,4LAA4L,gDAAgD,iMAAiM,oDAAoD,oMAAoM,+CAA+C,qOAAqO,8CAA8C,qOAAqO,8CAA8C,gOAAgO,iDAAiD,yOAAyO,mDAAmD,sOAAsO,uDAAuD,oOAAoO,qDAAqD,uMAAuM,0CAA0C,4aAA4a,gDAAgD,gLAAgL,sDAAsD,2OAA2O,sDAAsD,0LAA0L,8CAA8C,8NAA8N,+CAA+C,kOAAkO,mDAAmD,8NAA8N,+CAA+C,8NAA8N,gDAAgD,+NAA+N,6CAA6C,0NAA0N,4CAA4C,kOAAkO,mDAAmD;AACx3O,gCAAgC,uDAAuD,YAAY,yBAAyB,kBAAkB,MAAM,OAAO,QAAQ,SAAS,WAAW,kBAAkB,cAAc,uCAAuC,cAAc,gBAAgB,gBAAgB,yBAAyB,oBAAoB,aAAa,4BAA4B,6BAA6B,sBAAsB,iBAAiB,YAAY,wBAAwB,oBAAoB,aAAa,8BAA8B,6BAA6B,mBAAmB,yBAAyB,8BAA8B,mBAAmB,6DAA6D,2CAA2C,iBAAiB,sDAAsD,gBAAgB,sBAAsB,+BAA+B,yDAAyD,kDAAkD,6BAA6B,SAAS,aAAa,8BAA8B,2BAA2B,sBAAsB,gBAAgB,iBAAiB,gBAAgB,cAAc,WAAW,yBAAyB,mBAAmB,OAAO,gBAAgB,kBAAkB,gCAAgC,kBAAkB,oBAAoB,qBAAqB,yDAAyD,oCAAoC,kBAAkB,sCAAsC,qBAAqB,iDAAiD,oBAAoB,wBAAwB,iDAAiD,sDAAsD,WAAW,oBAAoB,aAAa,mBAAmB,OAAO,+BAA+B,iBAAiB,WAAW;AAC72D,aAAa;AACb;AACA;AACA;AACA,KAAK,sBAAsB;AAC3B,KAAK,OAAO,wDAAS,EAAE;AACvB,KAAK,OAAO,yDAAU;AACtB;AACA;AACA,mBAAmB,OAAO,qDAAM,EAAE;AAClC;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,kBAAkB,0DAAG;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,yDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,qDAAM,qBAAqB;AACvE;AACA,8CAA8C,uEAAgB,EAAE,uCAAuC,qBAAqB,6DAAM,YAAY,EAAE,uCAAuC;;AAEvL;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,2DAAY;AACjD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,iCAAiC,wDAAwD,GAAG,0BAA0B,EAAE,QAAQ;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,8BAA8B;AAC/D;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,sDAAsD,yCAAyC,KAAK,8BAA8B;AAClI;AACA;AACA;AACA;AACA,qCAAqC,8BAA8B;AACnE;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,+MAA+M,iDAAiD,kHAAkH,KAAK,8CAA8C,2DAA2D,gFAAgF,+BAA+B,wIAAwI,mBAAmB,yBAAyB,qFAAqF,sCAAsC,iLAAiL,6CAA6C,uBAAuB,6CAA6C,IAAI,YAAY,8CAA8C,kCAAkC,6GAA6G,0CAA0C,uBAAuB,+CAA+C,iMAAiM,sCAAsC,kaAAka,kCAAkC,8CAA8C,kCAAkC,kUAAkU,+CAA+C,8DAA8D,gCAAgC,sKAAsK,qDAAqD,+SAA+S,gDAAgD,+MAA+M,eAAe,6IAA6I,aAAa,o8BAAo8B,gDAAgD,yIAAyI,yDAAyD,8GAA8G,MAAM,yLAAyL,2DAA2D,4GAA4G,MAAM,oTAAoT,qDAAqD,4CAA4C,4DAA4D,ofAAof,0CAA0C,gDAAgD,0CAA0C,mWAAmW,+CAA+C,gEAAgE,uCAAuC,mLAAmL,qDAAqD,8UAA8U,gDAAgD,4NAA4N,eAAe,mJAAmJ,aAAa,ogCAAogC,gDAAgD,kJAAkJ,yDAAyD,qHAAqH,MAAM,oMAAoM,2DAA2D,uHAAuH,MAAM,uUAAuU,qDAAqD,8CAA8C,4DAA4D;AACx/T,0CAA0C,oBAAoB,aAAa,4BAA4B,6BAA6B,sBAAsB,YAAY,wBAAwB,aAAa,2BAA2B,eAAe,gBAAgB,sCAAsC,6CAA6C,qDAAqD,gBAAgB,gDAAgD,UAAU,qDAAqD,eAAe,oBAAoB,gDAAgD,yCAAyC,oBAAoB,aAAa,WAAW,8BAA8B,6BAA6B,mBAAmB,yDAAyD,gBAAgB,eAAe,gDAAgD,mBAAmB,YAAY,mEAAmE,4CAA4C,sCAAsC,kBAAkB,mBAAmB,YAAY,YAAY,gBAAgB,cAAc,gBAAgB,yCAAyC,eAAe,uCAAuC,oBAAoB,aAAa,WAAW,8BAA8B,6BAA6B,mBAAmB,yBAAyB,8BAA8B,qIAAqI,gBAAgB,oDAAoD,iBAAiB,gEAAgE,gBAAgB,mBAAmB,gBAAgB,YAAY,iEAAiE,aAAa,qBAAqB,aAAa,gBAAgB,oCAAoC,qBAAqB,4CAA4C,eAAe,iDAAiD,2CAA2C,6CAA6C,kBAAkB,mBAAmB,YAAY,YAAY,gBAAgB,cAAc,wDAAwD,gBAAgB,mDAAmD,oBAAoB,aAAa,8BAA8B,6BAA6B,mBAAmB,uBAAuB,2BAA2B,2DAA2D,WAAW,YAAY,mBAAmB,oDAAoD,4BAA4B,gEAAgE,uBAAuB,kEAAkE,6BAA6B,mDAAmD,oBAAoB,aAAa,8BAA8B,6BAA6B,mBAAmB,yBAAyB,8BAA8B,uDAAuD,UAAU,2DAA2D,gBAAgB,2CAA2C,uCAAuC,gBAAgB,gBAAgB,iBAAiB,eAAe,mBAAmB,wCAAwC,eAAe,mBAAmB,sDAAsD,gDAAgD,kBAAkB,2CAA2C,UAAU,SAAS,iDAAiD,kBAAkB;AAC9rH,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,oEAAgB;AAC5B;AACA;AACA,uBAAuB,OAAO,oDAAK,EAAE;AACrC,cAAc,OAAO,oDAAK,EAAE;AAC5B,yBAAyB,OAAO,qDAAM,EAAE;AACxC;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,iBAAiB,mEAAO;AACxB,QAAQ,iEAAK,eAAe,iEAAK;AACjC;AACA,SAAS;AACT,QAAQ,iEAAK,eAAe,iEAAK;AACjC;AACA,SAAS;AACT,QAAQ,sEAAU,2BAA2B,mEAAO;AACpD,QAAQ,sEAAU,2BAA2B,mEAAO;AACpD;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,6BAA6B,2DAAY;AACzC,+BAA+B,2DAAY;AAC3C,gCAAgC,2DAAY;AAC5C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,+qBAA+qB,kBAAkB,yHAAyH,iBAAiB;AAC30B;AACA,gCAAgC,cAAc,aAAa,YAAY,kBAAkB,MAAM,UAAU,UAAU,SAAS,OAAO,gCAAgC,wBAAwB,wDAAwD,gCAAgC,wBAAwB,0DAA0D,kDAAkD,sBAAsB,qBAAqB,UAAU,YAAY,mCAAmC,mBAAmB,kBAAkB,YAAY,WAAW,YAAY,4CAA4C,qBAAqB,oBAAoB,aAAa,4BAA4B,6BAA6B,sBAAsB,YAAY,4BAA4B,YAAY,YAAY,mEAAmE,gBAAgB,8BAA8B,sDAAsD,mBAAmB,OAAO,gBAAgB,oBAAoB,sDAAsD,mBAAmB,OAAO,gBAAgB,+CAA+C,YAAY,eAAe,QAAQ,wEAAwE,eAAe,oFAAoF,gBAAgB,cAAc,aAAa;AACj6C,aAAa;AACb;AACA;AACA,iBAAiB,OAAO,qDAAM,EAAE;AAChC,YAAY,OAAO,2DAAY,kCAAkC;AACjE,mBAAmB,OAAO,qDAAM,EAAE;AAClC,oBAAoB,OAAO,qDAAM,EAAE;AACnC;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,kCAAkC,2DAAY;AAC9C,6BAA6B,2DAAY;AACzC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kBAAkB,4DAAK;AACvB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA,kCAAkC,+DAA+D;AACjG;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,0DAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,QAAQ,kDAAI,iCAAiC,gEAAS;AACtD,oBAAoB;AACpB;AACA,cAAc,kDAAI;AAClB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ,kDAAI;AACZ;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,+BAA+B;AAC/B,uBAAuB,EAAE;AACzB,+BAA+B;AAC/B,iCAAiC,uBAAuB;AACxD;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,gDAAE;AACrB;AACA;AACA;AACA,sBAAsB,0DAAG;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,+MAA+M,yCAAyC,g8BAAg8B,+BAA+B,0rCAA0rC,0CAA0C,y6EAAy6E,+BAA+B;AACn4J,gCAAgC,kBAAkB,MAAM,OAAO,WAAW,YAAY,wBAAwB,YAAY,uBAAuB,YAAY,uCAAuC,kBAAkB,YAAY,UAAU,8CAA8C,iDAAiD,oBAAoB,iEAAiE,SAAS,iBAAiB,YAAY,WAAW,UAAU,gEAAgE,cAAc,cAAc,kEAAkE,cAAc,2BAA2B,YAAY,gBAAgB,gBAAgB,sBAAsB,kBAAkB,SAAS,OAAO,QAAQ,cAAc,gDAAgD,kBAAkB,SAAS,aAAa,gBAAgB,8BAA8B,kBAAkB,YAAY,kEAAkE,sCAAsC,8CAA8C,SAAS,iBAAiB,4BAA4B,iDAAiD,yBAAyB,sBAAsB,qBAAqB,iBAAiB,mBAAmB,kBAAkB;AACvzC,aAAa;AACb;AACA;AACA;AACA,KAAK,2BAA2B;AAChC,KAAK,+BAA+B;AACpC,KAAK;AACL;AACA;AACA,sBAAsB,OAAO,qDAAM,EAAE;AACrC,iBAAiB,OAAO,qDAAM,EAAE;AAChC,WAAW,OAAO,wDAAS,2BAA2B;AACtD,wBAAwB,OAAO,2DAAY,SAAS,mDAAS,IAAI;AACjE,kBAAkB,OAAO,wDAAS,4BAA4B;AAC9D,qBAAqB,OAAO,wDAAS,0BAA0B;AAC/D;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,gCAAgC,mDAAS;AACzC;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAa;AACzB;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,4BAA4B,2DAAY;AACxC,+BAA+B,2DAAY;AAC3C,8BAA8B,2DAAY;AAC1C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,2CAA2C,WAAW;AACtD;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,whCAAwhC,sDAAsD,oSAAoS,eAAe;AACj4C,6CAA6C,iBAAiB,gBAAgB,iBAAiB,yCAAyC,iBAAiB,mBAAmB,+DAA+D,iBAAiB,mBAAmB,yCAAyC,iBAAiB,oBAAoB,iBAAiB,gBAAgB,iBAAiB,yCAAyC,iBAAiB,oBAAoB,+DAA+D,iBAAiB,oBAAoB,yCAAyC,iBAAiB,mBAAmB,iBAAiB,gBAAgB,iBAAiB,yCAAyC,iBAAiB,gBAAgB,+DAA+D,iBAAiB,gBAAgB,yCAAyC,iBAAiB,gBAAgB,oBAAoB,gBAAgB,iBAAiB,yCAAyC,oBAAoB,oBAAoB,+DAA+D,oBAAoB,oBAAoB,yCAAyC,oBAAoB,gBAAgB,oBAAoB,gBAAgB,iBAAiB,yCAAyC,oBAAoB,mBAAmB,+DAA+D,oBAAoB,kBAAkB,oBAAoB,gBAAgB,oBAAoB,gBAAgB,iBAAiB,yCAAyC,oBAAoB,gBAAgB,yCAAyC,oBAAoB,eAAe,oBAAoB,mBAAmB,oBAAoB,gBAAgB,iBAAiB,yCAAyC,oBAAoB,mBAAmB,+DAA+D,oBAAoB,kBAAkB,oBAAoB,kBAAkB,oBAAoB,gBAAgB,iBAAiB,yCAAyC,oBAAoB,kBAAkB,yCAAyC,oBAAoB,iBAAiB,oBAAoB,mBAAmB,oBAAoB,gBAAgB,iBAAiB,yCAAyC,oBAAoB,mBAAmB,+DAA+D,oBAAoB,kBAAkB,iBAAiB,oBAAoB,iBAAiB,gBAAgB,iBAAiB,yCAAyC,iBAAiB,oBAAoB,yCAAyC,oBAAoB,mBAAmB,iBAAiB,gBAAgB,kBAAkB,eAAe,gBAAgB,iBAAiB,yCAAyC,kBAAkB,gBAAgB,+DAA+D,kBAAkB,eAAe,iBAAiB,mBAAmB,iBAAiB,gBAAgB,iBAAiB,yCAAyC,mCAAmC,mBAAmB,kBAAkB,gBAAgB,iBAAiB,yCAAyC,iBAAiB,kBAAkB,kBAAkB,kBAAkB,+DAA+D,kBAAkB,kBAAkB,yCAAyC,kBAAkB,mBAAmB,YAAY,oBAAoB,aAAa,iDAAiD,kBAAkB,iEAAiE,iBAAiB,kBAAkB,WAAW,YAAY,iBAAiB,8BAA8B,cAAc,gCAAgC,eAAe,sBAAsB,kCAAkC,mBAAmB,OAAO,oBAAoB,aAAa,8BAA8B,6BAA6B,mBAAmB,iBAAiB,yBAAyB,mBAAmB,uDAAuD,mBAAmB,OAAO,YAAY,8DAA8D,YAAY,cAAc,UAAU,kFAAkF,6CAA6C,sDAAsD,gBAAgB,iBAAiB,mBAAmB,OAAO,yEAAyE,8BAA8B,YAAY,wBAAwB,cAAc,gBAAgB,gBAAgB,eAAe,mBAAmB,YAAY,UAAU,SAAS,WAAW,mBAAmB,eAAe,eAAe,UAAU,6BAA6B,yBAAyB,YAAY,oFAAoF,aAAa,QAAQ,SAAS,qFAAqF,aAAa,QAAQ,SAAS,+ZAA+Z,aAAa,8DAA8D,mBAAmB,OAAO,YAAY,qEAAqE,YAAY,cAAc,UAAU,iBAAiB,yFAAyF,6CAA6C,qCAAqC,mBAAmB,OAAO,WAAW,0DAA0D,mBAAmB,OAAO,iBAAiB,gDAAgD,UAAU,YAAY,iFAAiF,oBAAoB,aAAa,8BAA8B,6BAA6B,mBAAmB,iBAAiB,yBAAyB,mBAAmB,sGAAsG,iBAAiB,gEAAgE,qGAAqG,gBAAgB,iIAAiI,qBAAqB,qKAAqK,kBAAkB,wDAAwD,YAAY,WAAW,sCAAsC,kBAAkB;AAC7lO,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAa,EAAE;AAC3B,KAAK,gCAAgC,OAAO,qDAAM,qBAAqB,GAAG;AAC1E,KAAK,gCAAgC,OAAO,qDAAM,SAAS,mEAAU,IAAI;AACzE;AACA;AACA,oBAAoB,OAAO,oDAAK,EAAE;AAClC,gBAAgB,OAAO,qDAAM,EAAE;AAC/B,mBAAmB,OAAO,qDAAM,EAAE;AAClC,kBAAkB,OAAO,qDAAM,EAAE;AACjC,mBAAmB,OAAO,oDAAK,EAAE;AACjC,uBAAuB,OAAO,wDAAS,iBAAiB;AACxD;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,yDAAU;AAC9B,oBAAoB,mEAAe;AACnC;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,2DAAY;AAChC,oBAAoB,6DAAc;AAClC,oBAAoB,yDAAU;AAC9B,oBAAoB,mEAAmB;AACvC,oBAAoB,mEAAe;AACnC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,uCAAuC,8EAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2DAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAAY;AAC3C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,6BAA6B,UAAU,gFAAqB,sCAAsC;AAClG,gCAAgC,kBAAkB,WAAW,YAAY,MAAM,oBAAoB,mCAAmC,2BAA2B,sBAAsB,4BAA4B,6BAA6B,6BAA6B,kBAAkB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,yBAAyB,YAAY,wCAAwC,kBAAkB,OAAO,MAAM,YAAY,WAAW,eAAe,kBAAkB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,iDAAiD,kBAAkB,yBAAyB,QAAQ,SAAS,WAAW,WAAW,kBAAkB,yCAAyC,mBAAmB,gBAAgB;AAC90B,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAU,EAAE;AACxB,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,sBAAsB,OAAO,wDAAS,sBAAsB;AAC5D,oBAAoB,OAAO,oDAAK,EAAE;AAClC,oBAAoB,OAAO,oDAAK,EAAE;AAClC,mBAAmB,OAAO,oDAAK,EAAE;AACjC,mBAAmB,OAAO,oDAAK,EAAE;AACjC,kBAAkB,OAAO,oDAAK,EAAE;AAChC,aAAa,OAAO,oDAAK,EAAE;AAC3B,qBAAqB,OAAO,oDAAK,EAAE;AACnC,mBAAmB,OAAO,qDAAM,EAAE;AAClC,iBAAiB,OAAO,2DAAY,8BAA8B;AAClE,sBAAsB,OAAO,2DAAY,mCAAmC;AAC5E,oBAAoB,OAAO,2DAAY,iCAAiC;AACxE;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA;AACA;AACA,oBAAoB,6DAAY;AAChC;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,kCAAkC,2DAAY;AAC9C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,8WAA8W,8CAA8C,2DAA2D,kEAAkE,6BAA6B,oFAAoF,4CAA4C;AACtrB,uDAAuD,WAAW,mCAAmC,gBAAgB,6CAA6C,eAAe,gBAAgB,qBAAqB,sCAAsC,eAAe,kBAAkB,gBAAgB,gDAAgD,uCAAuC,eAAe,gBAAgB,gDAAgD;AACnd,aAAa;AACb;AACA;AACA,oBAAoB,OAAO,oDAAK,EAAE;AAClC,iBAAiB,OAAO,oDAAK,EAAE;AAC/B,sBAAsB,OAAO,qDAAM,EAAE;AACrC;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,mCAAmC,6CAAO;AAC1C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uCAAuC,wCAAwC;AAC/E;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,gCAAgC,mBAAmB,YAAY;AAC/D,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAU,EAAE;AACxB,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,aAAa,OAAO,oDAAK,EAAE;AAC3B;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,+BAA+B,2DAAY;AAC3C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,+BAA+B,4EAA4E;AAC3G;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,6GAA6G,uDAAuD,MAAM;AAC1K,gCAAgC,oBAAoB,aAAa,4BAA4B,6BAA6B,wBAAwB,YAAY,mBAAmB,mBAAmB,YAAY,kBAAkB,sBAAsB,qBAAqB,wBAAwB,qBAAqB,uBAAuB,mBAAmB,wBAAwB,uBAAuB,oBAAoB,aAAa,uBAAuB,2BAA2B,gBAAgB,cAAc,yCAAyC,aAAa,yBAAyB,mBAAmB,cAAc,YAAY,4BAA4B,eAAe,kBAAkB,kBAAkB,gBAAgB,mBAAmB,gBAAgB,uBAAuB,sCAAsC,kBAAkB,oCAAoC,yBAAyB,gBAAgB,yBAAyB,WAAW,kBAAkB,OAAO,SAAS,qBAAqB,mBAAmB,2BAA2B,wBAAwB,4BAA4B,sBAAsB;AACjnC,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa,OAAO,8DAAe,2BAA2B;AAC9D,kBAAkB,OAAO,oDAAK,EAAE;AAChC,mBAAmB,OAAO,oDAAK,EAAE;AACjC,mBAAmB,OAAO,qDAAM,EAAE;AAClC;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,yDAAU;AAC9B;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,8EAAmB;AAClC;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,mEAAmB;AACvC,oBAAoB,uDAAa;AACjC,oBAAoB,mFAA0B;AAC9C,oBAAoB,+DAAgB;AACpC,oBAAoB,yDAAU;AAC9B,oBAAoB,2DAAY;AAChC;AACA;AACA,oBAAoB,+DAAgB;AACpC,oBAAoB,mEAAe;AACnC;AACA,qCAAqC,mEAAe;AACpD;AACA,mCAAmC,+DAAU,EAAE,mEAAU;AACzD;AACA,qBAAqB;AACrB;AACA;AACA,oBAAoB,4DAAa;AACjC,oBAAoB,2DAAY;AAChC;AACA;AACA,oBAAoB,oEAAgB;AACpC;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAE6gB;;AAE7gB,kD;;;;;;;;;;;AChuEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,4BAA4B;AACvC;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,aAAa,2BAA2B;AACxC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,2BAA2B;AACvC,YAAY,OAAO;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,wBAAwB;AACpC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,SAAS;AACpB;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,SAAS;AACpB;AACA;AACA;;AAEA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,YAAY,yBAAyB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,yBAAyB;AACpC,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA,0BAA0B,6BAA6B;AACvD;AACA;;AAEA;AACA,yBAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,0BAA0B;AACtD;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,0BAA0B,6BAA6B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,2BAA2B;AACvC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,YAAY,OAAO;AACnB;AACA;AACA;AACA,sDAAsD;AACtD;AACA,6DAA6D;;AAE7D;AACA;AACA;AACA;AACA,cAAc,uCAAuC;AACrD,KAAK;AACL;AACA,gDAAgD;AAChD,cAAc;AACd,KAAK;AACL,gDAAgD;AAChD,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc,wCAAwC;AACtD,KAAK;AACL,8CAA8C,mBAAmB;AACjE;AACA,GAAG;AACH,8CAA8C;AAC9C,2BAA2B,6BAA6B,mBAAmB;AAC3E;;AAEA;AACA;;AAEA,6BAA6B,qBAAqB;AAClD,kBAAkB,wBAAwB,mBAAmB;AAC7D,oBAAoB,8BAA8B;AAClD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACrxCA,0D;;;;;;;;;;;;;;;;;ACA0C;AAQ1C,IAAa,6BAA6B,GAA1C,MAAa,6BAA6B;CAEzC;AAFY,6BAA6B;IAJzC,+DAAS,CAAC;QACT,QAAQ,EAAE,2BAA2B;QACrC,sJAAsD;KACvD,CAAC;GACW,6BAA6B,CAEzC;AAFyC;;;;;;;;;;;;;;;;;;;;;;ACRD;AACM;AACiB;AAEmB;AACE;AAgBrF,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;CAAG;AAAtB,mBAAmB;IAX/B,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,+FAA6B;SAC9B;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,6EAAqB;YACrB,iGAA0B;SAC3B;KACF,CAAC;GAEW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;ACrBS;AACc;AAC4B;AAKnF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+FAA6B;QAClD,IAAI,EAAE;YACJ,MAAM,EAAE;gBACN,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,EAAC;gBACzC,KAAK,EAAE,EAAC,KAAK,EAAE,gBAAgB,EAAC;aACjC;YACD,MAAM,EAAE;gBACJ,OAAO,EAAE,KAAK;aACjB;YACD,WAAW,EAAE,KAAK;SACnB;KACF;IACD,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE;CAEhC,CAAC;AAMF,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;CAAG;AAA7B,0BAA0B;IAJtC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,0BAA0B,CAAG;AAAH","file":"0.js","sourcesContent":["import { __decorate, __metadata } from 'tslib';\nimport { NgZone, Injectable, EventEmitter, Input, Output, Directive, NgModule } from '@angular/core';\nimport { MarkerManager, GoogleMapsAPIWrapper, InfoWindowManager, AgmCoreModule } from '@agm/core';\nimport { Observable } from 'rxjs';\nimport 'js-marker-clusterer';\n\nlet ClusterManager = class ClusterManager extends MarkerManager {\n    constructor(_mapsWrapper, _zone) {\n        super(_mapsWrapper, _zone);\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._clustererInstance = new Promise((resolver) => {\n            this._resolver = resolver;\n        });\n    }\n    init(options) {\n        this._mapsWrapper.getNativeMap().then(map => {\n            const clusterer = new MarkerClusterer(map, [], options);\n            this._resolver(clusterer);\n        });\n    }\n    getClustererInstance() {\n        return this._clustererInstance;\n    }\n    addMarker(marker) {\n        const clusterPromise = this.getClustererInstance();\n        const markerPromise = this._mapsWrapper\n            .createMarker({\n            position: {\n                lat: marker.latitude,\n                lng: marker.longitude,\n            },\n            label: marker.label,\n            draggable: marker.draggable,\n            icon: marker.iconUrl,\n            opacity: marker.opacity,\n            visible: marker.visible,\n            zIndex: marker.zIndex,\n            title: marker.title,\n            clickable: marker.clickable,\n        }, false);\n        Promise\n            .all([clusterPromise, markerPromise])\n            .then(([cluster, marker]) => {\n            return cluster.addMarker(marker);\n        });\n        this._markers.set(marker, markerPromise);\n    }\n    deleteMarker(marker) {\n        const m = this._markers.get(marker);\n        if (m == null) {\n            // marker already deleted\n            return Promise.resolve();\n        }\n        return m.then((m) => {\n            this._zone.run(() => {\n                m.setMap(null);\n                this.getClustererInstance().then(cluster => {\n                    cluster.removeMarker(m);\n                    this._markers.delete(marker);\n                });\n            });\n        });\n    }\n    clearMarkers() {\n        return this.getClustererInstance().then(cluster => {\n            cluster.clearMarkers();\n        });\n    }\n    setGridSize(c) {\n        this.getClustererInstance().then(cluster => {\n            cluster.setGridSize(c.gridSize);\n        });\n    }\n    setMaxZoom(c) {\n        this.getClustererInstance().then(cluster => {\n            cluster.setMaxZoom(c.maxZoom);\n        });\n    }\n    setStyles(c) {\n        this.getClustererInstance().then(cluster => {\n            cluster.setStyles(c.styles);\n        });\n    }\n    setZoomOnClick(c) {\n        this.getClustererInstance().then(cluster => {\n            if (c.zoomOnClick !== undefined) {\n                cluster.zoomOnClick_ = c.zoomOnClick;\n            }\n        });\n    }\n    setAverageCenter(c) {\n        this.getClustererInstance().then(cluster => {\n            if (c.averageCenter !== undefined) {\n                cluster.averageCenter_ = c.averageCenter;\n            }\n        });\n    }\n    setImagePath(c) {\n        this.getClustererInstance().then(cluster => {\n            if (c.imagePath !== undefined) {\n                cluster.imagePath_ = c.imagePath;\n            }\n        });\n    }\n    setMinimumClusterSize(c) {\n        this.getClustererInstance().then(cluster => {\n            if (c.minimumClusterSize !== undefined) {\n                cluster.minimumClusterSize_ = c.minimumClusterSize;\n            }\n        });\n    }\n    setImageExtension(c) {\n        this.getClustererInstance().then(cluster => {\n            if (c.imageExtension !== undefined) {\n                cluster.imageExtension_ = c.imageExtension;\n            }\n        });\n    }\n    createClusterEventObservable(eventName) {\n        return Observable.create((observer) => {\n            this._zone.runOutsideAngular(() => {\n                this._clustererInstance.then((m) => {\n                    m.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n                });\n            });\n        });\n    }\n    setCalculator(c) {\n        this.getClustererInstance().then(cluster => {\n            if (typeof c.calculator === 'function') {\n                cluster.setCalculator(c.calculator);\n            }\n        });\n    }\n};\nClusterManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nClusterManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], ClusterManager);\n\n/**\n * AgmMarkerCluster clusters map marker if they are near together\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker-cluster>\n *        <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        </agm-marker>\n *        <agm-marker [latitude]=\"lat2\" [longitude]=\"lng2\" [label]=\"'N'\">\n *        </agm-marker>\n *      </agm-marker-cluster>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmMarkerCluster = class AgmMarkerCluster {\n    constructor(_clusterManager) {\n        this._clusterManager = _clusterManager;\n        this.clusterClick = new EventEmitter();\n        this._observableSubscriptions = [];\n    }\n    /** @internal */\n    ngOnDestroy() {\n        this._clusterManager.clearMarkers();\n        this._observableSubscriptions.forEach((s) => s.unsubscribe());\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (changes['gridSize']) {\n            this._clusterManager.setGridSize(this);\n        }\n        if (changes['maxZoom']) {\n            this._clusterManager.setMaxZoom(this);\n        }\n        if (changes['zoomOnClick']) {\n            this._clusterManager.setZoomOnClick(this);\n        }\n        if (changes['averageCenter']) {\n            this._clusterManager.setAverageCenter(this);\n        }\n        if (changes['minimumClusterSize']) {\n            this._clusterManager.setMinimumClusterSize(this);\n        }\n        if (changes['imagePath']) {\n            this._clusterManager.setImagePath(this);\n        }\n        if (changes['imageExtension']) {\n            this._clusterManager.setImageExtension(this);\n        }\n        if (changes['calculator']) {\n            this._clusterManager.setCalculator(this);\n        }\n        if (changes['styles']) {\n            this._clusterManager.setStyles(this);\n        }\n    }\n    _addEventListeners() {\n        const handlers = [\n            {\n                name: 'clusterclick',\n                handler: () => this.clusterClick.emit(),\n            },\n        ];\n        handlers.forEach((obj) => {\n            const os = this._clusterManager.createClusterEventObservable(obj.name).subscribe(obj.handler);\n            this._observableSubscriptions.push(os);\n        });\n    }\n    /** @internal */\n    ngOnInit() {\n        this._addEventListeners();\n        this._clusterManager.init({\n            gridSize: this.gridSize,\n            maxZoom: this.maxZoom,\n            zoomOnClick: this.zoomOnClick,\n            averageCenter: this.averageCenter,\n            minimumClusterSize: this.minimumClusterSize,\n            styles: this.styles,\n            imagePath: this.imagePath,\n            imageExtension: this.imageExtension,\n            calculator: this.calculator,\n        });\n    }\n};\nAgmMarkerCluster.ctorParameters = () => [\n    { type: ClusterManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMarkerCluster.prototype, \"gridSize\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMarkerCluster.prototype, \"maxZoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmMarkerCluster.prototype, \"zoomOnClick\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmMarkerCluster.prototype, \"averageCenter\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMarkerCluster.prototype, \"minimumClusterSize\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array)\n], AgmMarkerCluster.prototype, \"styles\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Function)\n], AgmMarkerCluster.prototype, \"calculator\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarkerCluster.prototype, \"imagePath\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarkerCluster.prototype, \"imageExtension\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarkerCluster.prototype, \"clusterClick\", void 0);\nAgmMarkerCluster = __decorate([\n    Directive({\n        selector: 'agm-marker-cluster',\n        providers: [\n            ClusterManager,\n            { provide: MarkerManager, useExisting: ClusterManager },\n            InfoWindowManager,\n        ],\n    }),\n    __metadata(\"design:paramtypes\", [ClusterManager])\n], AgmMarkerCluster);\n\nlet AgmJsMarkerClustererModule = class AgmJsMarkerClustererModule {\n};\nAgmJsMarkerClustererModule = __decorate([\n    NgModule({\n        imports: [AgmCoreModule],\n        declarations: [AgmMarkerCluster],\n        exports: [AgmMarkerCluster],\n    })\n], AgmJsMarkerClustererModule);\n\n// main modules\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AgmJsMarkerClustererModule, AgmMarkerCluster, ClusterManager };\n//# sourceMappingURL=agm-js-marker-clusterer.js.map\n","import { isObject, isNumber } from 'util';\nimport { map, first, switchMap } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { AgmJsMarkerClustererModule } from '@agm/js-marker-clusterer';\nimport { AgmMap, GoogleMapsAPIWrapper, MapsAPILoader, AgmMarker, MarkerManager, AgmCoreModule } from '@agm/core';\nimport { ENV_CONFIG } from '@globile/mobile-services';\nimport { TranslateService, TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { DIRECTION_VERTICAL } from 'hammerjs';\nimport { HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { Subject, Observable, of, fromEvent, from } from 'rxjs';\nimport { Injectable, Component, Input, Output, EventEmitter, NgModule, ContentChild, ElementRef, Renderer2, Directive, Inject, ContentChildren, ViewChild, ViewChildren, HostListener, defineInjectable, inject } from '@angular/core';\nimport { DrawerState, IconModule, ButtonModule, CheckboxModule, OptionListModule, LoadingModule, LoaderModule } from 'sn-common-lib';\nimport { FormBuilder, FormControl, ReactiveFormsModule } from '@angular/forms';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/filter/filter.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FilterService {\n    /**\n     * @param {?} fb\n     */\n    constructor(fb) {\n        this.fb = fb;\n        this._filterCount = 0;\n        this._observer$ = new Subject();\n    }\n    /**\n     * Initializes filter form and returns the form;\n     * @return {?}\n     */\n    initForm() {\n        if (!this.form) {\n            this.form = this.fb.group({\n                BRANCH: this.fb.group({\n                    SELECT: new FormControl(),\n                    BANCAPRIVADA: new FormControl(),\n                    PYME: new FormControl(),\n                    WORKCAFE: new FormControl(),\n                    EMPRESAS: new FormControl(),\n                    UNIVERSIDADES: new FormControl(),\n                    CLIENTES_POPULAR: new FormControl(),\n                    CLIENTES_PASTOR: new FormControl(),\n                    CLIENTES_BANEFE: new FormControl(),\n                    RESIDENTES: new FormControl(),\n                    GRANDES_SUPERFICIES: new FormControl(),\n                    AG_COLABORADORES: new FormControl(),\n                    AG_FINANCIEROS: new FormControl()\n                }),\n                ATM: this.fb.group({\n                    NON_SANTANDER_ATM: new FormControl(),\n                    ATM: new FormControl()\n                }),\n                CORRESPONSALES: this.fb.group({\n                    CORRESPONSALES: new FormControl(),\n                    ELEVEN: new FormControl(),\n                    CIRCLE_K: new FormControl(),\n                    TIENDA_EXTRA: new FormControl(),\n                    TIENDA_K: new FormControl(),\n                    TELECOMM: new FormControl(),\n                    SUPER7_24: new FormControl(),\n                    OXXO: new FormControl(),\n                }),\n            });\n        }\n        return this.form;\n    }\n    /**\n     * @return {?}\n     */\n    get count() {\n        return this._filterCount;\n    }\n    /**\n     * Listens to when values are applied and returns the filter values\n     * @return {?}\n     */\n    get filterParamsChanges() {\n        return this._observer$.asObservable();\n    }\n    /**\n     * @return {?}\n     */\n    get filterParams() {\n        return this._filterParams;\n    }\n    /**\n     * @return {?}\n     */\n    startFilter() {\n        this.resetPreviousValues();\n    }\n    /**\n     * Resets Count of checked filters\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    resetActiveFilterCount(values) {\n        /** @type {?} */\n        let count = 0;\n        Object.keys(values).forEach((/**\n         * @param {?} groupKey\n         * @return {?}\n         */\n        (groupKey) => {\n            if (isObject(values[groupKey])) {\n                /** @type {?} */\n                const group = values[groupKey];\n                /** @type {?} */\n                const counter = Object.keys(group).filter((/**\n                 * @param {?} filterKey\n                 * @return {?}\n                 */\n                (filterKey) => group[filterKey]));\n                if (counter && isNumber(counter.length)) {\n                    count += counter.length;\n                }\n            }\n        }));\n        return count;\n    }\n    /**\n     * Apply changes\n     * @return {?}\n     */\n    applyChanges() {\n        this._filterCount = this.resetActiveFilterCount(this.form.value);\n        this._filterParams = this.generateParams(this.form.value);\n        this._observer$.next(this._filterParams);\n        this._previousValues = this.form.value;\n    }\n    /**\n     * Reset the form to previous stored values\n     * @private\n     * @return {?}\n     */\n    resetPreviousValues() {\n        if (this._previousValues) {\n            this.form.patchValue(this._previousValues);\n            this.form.updateValueAndValidity();\n        }\n        else {\n            this.form.reset();\n        }\n    }\n    /**\n     * Set Filters Enabled or Disabled based on a list of Markers\n     * @param {?} markers\n     * @return {?}\n     */\n    enableFilters(markers) {\n        // TODO: // set filter to disable or enable based on Results\n    }\n    /**\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    generateParams(values) {\n        /** @type {?} */\n        const filterSubType = new Array();\n        /** @type {?} */\n        const filterType = new Array();\n        Object.keys(values).forEach((/**\n         * @param {?} groupKey\n         * @return {?}\n         */\n        (groupKey) => {\n            if (isObject(values[groupKey])) {\n                /** @type {?} */\n                const group = values[groupKey];\n                Object.keys(group).forEach((/**\n                 * @param {?} filterKey\n                 * @return {?}\n                 */\n                (filterKey) => {\n                    if (group[filterKey]) {\n                        filterSubType.push(filterKey);\n                        if (!filterType.includes(groupKey)) {\n                            filterType.push(groupKey);\n                        }\n                    }\n                }));\n            }\n        }));\n        return { filterType: filterType.toString(), filterSubType: filterSubType.toString() };\n    }\n}\nFilterService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nFilterService.ctorParameters = () => [\n    { type: FormBuilder }\n];\n/** @nocollapse */ FilterService.ngInjectableDef = defineInjectable({ factory: function FilterService_Factory() { return new FilterService(inject(FormBuilder)); }, token: FilterService, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/branch-locator/branch-locator.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SnBranchLocatorService {\n    /**\n     * @param {?} envConfig\n     * @param {?} http\n     * @param {?} filterservice\n     */\n    constructor(envConfig, http, filterservice) {\n        this.http = http;\n        this.filterservice = filterservice;\n        this._observer$ = new Subject();\n        this.branchLocator = envConfig.api.BranchLocator;\n    }\n    /**\n     * @return {?}\n     */\n    get onChange() {\n        return this._observer$.asObservable();\n    }\n    /**\n     * \\@description Returns a list of points of interest\n     * \\@Returns {Observable<Branch[]>}\n     * \\@memberOf SnBranchLocatorService\n     * @param {?} coords\n     * @return {?}\n     */\n    getBranchesByCoords(coords) {\n        if (!coords) {\n            this._observer$.next([]);\n            return;\n        }\n        if (!this._initPosition) {\n            this.setApiURL(coords);\n        }\n        /** @type {?} */\n        const configVal = encodeURI(`config={\"coords\":[${coords.lat},${coords.lng}]}`);\n        this.http.get(`${this.URL}/find/defaultView?${configVal}`)\n            .pipe(map((/**\n         * @param {?} resp\n         * @return {?}\n         */\n        resp => this.groupAtmToBranch(resp)))).subscribe((/**\n         * @param {?} resp\n         * @return {?}\n         */\n        (resp) => this._observer$.next(resp)), (/**\n         * @param {?} err\n         * @return {?}\n         */\n        (err) => this._observer$.error(err)));\n    }\n    /**\n     * @param {?} northEast\n     * @param {?} southWest\n     * @param {?=} coords\n     * @return {?}\n     */\n    getBranchesByBounds(northEast, southWest, coords) {\n        if (!this._initPosition) {\n            this.setApiURL(coords);\n        }\n        /** @type {?} */\n        const params = (/** @type {?} */ (this.filterservice.filterParams));\n        /** @type {?} */\n        const configInit = encodeURI(`config={\"coords\":[${this._initPosition.lat},${this._initPosition.lng}]}`);\n        /** @type {?} */\n        const configVal = encodeURI(`northEast=${northEast.lat},${northEast.lng}&southWest=${southWest.lat},${southWest.lng}`);\n        this.http.get(`${this.URL}/find/defaultView?${configInit}&${configVal}`, { params })\n            .pipe(map((/**\n         * @param {?} resp\n         * @return {?}\n         */\n        resp => this._changeDistance(resp))), map((/**\n         * @param {?} resp\n         * @return {?}\n         */\n        resp => this.groupAtmToBranch(resp)))).subscribe((/**\n         * @param {?} resp\n         * @return {?}\n         */\n        (resp) => this._observer$.next(resp)), (/**\n         * @param {?} err\n         * @return {?}\n         */\n        (err) => this._observer$.error(err)));\n    }\n    /**\n     * @private\n     * @param {?} array\n     * @return {?}\n     */\n    groupAtmToBranch(array) {\n        return array.reduce((/**\n         * @param {?} poiArray\n         * @param {?} currentValue\n         * @return {?}\n         */\n        (poiArray, currentValue) => {\n            /** @type {?} */\n            const index = poiArray.findIndex((/**\n             * @param {?} el\n             * @return {?}\n             */\n            el => el.distanceInKm.toFixed(2) === currentValue.distanceInKm.toFixed(2)));\n            if (index >= 0) {\n                if (poiArray[index].objectType.code.toUpperCase() === 'BRANCH') {\n                    if (poiArray[index].atm) {\n                        poiArray[index].atm.push(currentValue);\n                    }\n                    else {\n                        poiArray[index].atm = [currentValue];\n                    }\n                    return poiArray;\n                }\n                else {\n                    if (currentValue.objectType.code.toUpperCase() === 'BRANCH') {\n                        if (poiArray[index].atm) {\n                            currentValue.atm = poiArray[index].atm;\n                            currentValue.atm.push(poiArray[index]);\n                        }\n                        else {\n                            currentValue.atm = [poiArray[index]];\n                        }\n                        poiArray[index] = currentValue;\n                    }\n                    else {\n                        // TODO: What should we do when there are 2 atm in the same place?\n                        currentValue.atm = [poiArray[index]];\n                        if (poiArray[index].atm) {\n                            poiArray[index].atm.push(currentValue);\n                        }\n                        else {\n                            poiArray[index].atm = [currentValue];\n                        }\n                    }\n                    return poiArray;\n                }\n            }\n            poiArray.push(currentValue);\n            return poiArray;\n        }), []);\n    }\n    /**\n     * @private\n     * @param {?} array\n     * @return {?}\n     */\n    _changeDistance(array) {\n        return array.map((/**\n         * @param {?} ele\n         * @return {?}\n         */\n        ele => {\n            if (!ele.distanceDone && this._initPosition) {\n                /** @type {?} */\n                const p = ele.location.geoCoords;\n                ele.distanceInKm = parseFloat(this.getDistance({ lat: p.latitude, lng: p.longitude }).toFixed(2));\n                ele.distanceInMiles = parseFloat((ele.distanceInKm / 1.609).toFixed(2));\n                ele.distanceDone = true;\n            }\n            return ele;\n        }));\n    }\n    /**\n     * @private\n     * @param {?} p2\n     * @return {?}\n     */\n    getDistance(p2) {\n        /** @type {?} */\n        const p1 = this._initPosition;\n        /** @type {?} */\n        const rad = (/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => x * Math.PI / 180);\n        /** @type {?} */\n        const R = 6378.137;\n        /** @type {?} */\n        const dLat = rad(p2.lat - p1.lat);\n        /** @type {?} */\n        const dLong = rad(p2.lng - p1.lng);\n        /** @type {?} */\n        const a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\n            + Math.cos(rad(p1.lat)) * Math.cos(rad(p2.lat)) * Math.sin(dLong / 2) * Math.sin(dLong / 2);\n        /** @type {?} */\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        /** @type {?} */\n        const d = R * c;\n        return d;\n    }\n    /**\n     * @private\n     * @param {?=} coords\n     * @return {?}\n     */\n    setApiURL(coords) {\n        this._initPosition = coords;\n        /** @type {?} */\n        const pos0 = this.getDistance(this.branchLocator.endpoints[0]);\n        /** @type {?} */\n        const pos1 = this.getDistance(this.branchLocator.endpoints[1]);\n        this.URL = (pos0 < pos1) ? this.branchLocator.endpoints[0].URL : this.branchLocator.endpoints[1].URL;\n    }\n}\nSnBranchLocatorService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nSnBranchLocatorService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [ENV_CONFIG,] }] },\n    { type: HttpClient },\n    { type: FilterService }\n];\n/** @nocollapse */ SnBranchLocatorService.ngInjectableDef = defineInjectable({ factory: function SnBranchLocatorService_Factory() { return new SnBranchLocatorService(inject(ENV_CONFIG), inject(HttpClient), inject(FilterService)); }, token: SnBranchLocatorService, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/directives/sn-map/sn-map.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SnMapDirective {\n    /**\n     * @param {?} component\n     * @param {?} api\n     */\n    constructor(component, api) {\n        this.component = component;\n        this.api = api;\n    }\n}\nSnMapDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[snMap],agm-map'\n            },] }\n];\n/** @nocollapse */\nSnMapDirective.ctorParameters = () => [\n    { type: AgmMap },\n    { type: GoogleMapsAPIWrapper }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/models/window-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass WindowRef extends Window {\n    constructor() {\n        super();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/geo-position/geo-position.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass GeoPositionService {\n    /**\n     * @param {?} mapsAPILoader\n     * @param {?} windowRef\n     */\n    constructor(mapsAPILoader, windowRef) {\n        this.mapsAPILoader = mapsAPILoader;\n        this.windowRef = windowRef;\n        this._observer$ = new Subject();\n        this._position$ = new Subject();\n        this.mapLoaded = false;\n    }\n    /**\n     * @return {?}\n     */\n    get geolocation() {\n        return this.windowRef.navigator.geolocation;\n    }\n    /**\n     * @return {?}\n     */\n    watchPosition() {\n        this._readyMaps().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.windowRef.navigator.geolocation.watchPosition((/**\n             * @param {?} pos\n             * @return {?}\n             */\n            (pos) => {\n                this._observer$.next(pos);\n            }), (/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                // console.error('Position is not available', error);\n                this._observer$.error(error);\n            }), {\n                enableHighAccuracy: true\n            });\n        }));\n        return this._observer$.asObservable().pipe(first());\n    }\n    /**\n     * @return {?}\n     */\n    getCurrentPosition() {\n        this._readyMaps().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.windowRef.navigator.geolocation.getCurrentPosition((/**\n             * @param {?} pos\n             * @return {?}\n             */\n            (pos) => {\n                this._position$.next(pos);\n            }), (/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                // console.error('Position is not available', error);\n                this._position$.error(error);\n            }), {\n                enableHighAccuracy: true\n            });\n        }));\n        return this._position$.asObservable().pipe(first());\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _readyMaps() {\n        return this._readyMaps ? of(true) : Observable.create((/**\n         * @param {?} obs\n         * @return {?}\n         */\n        obs => {\n            this.mapsAPILoader.load()\n                .then((/**\n             * @return {?}\n             */\n            () => { this.mapLoaded = true; obs.next(); }));\n        })).pipe(first());\n    }\n}\nGeoPositionService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nGeoPositionService.ctorParameters = () => [\n    { type: MapsAPILoader },\n    { type: WindowRef, decorators: [{ type: Inject, args: ['WINDOW',] }] }\n];\n/** @nocollapse */ GeoPositionService.ngInjectableDef = defineInjectable({ factory: function GeoPositionService_Factory() { return new GeoPositionService(inject(MapsAPILoader), inject(\"WINDOW\")); }, token: GeoPositionService, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/filter/filter.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FilterComponent {\n    /**\n     * @param {?} snFilterService\n     * @param {?} renderer\n     * @param {?} el\n     */\n    constructor(snFilterService, renderer, el) {\n        this.snFilterService = snFilterService;\n        this.renderer = renderer;\n        this.el = el;\n        this.filterApply = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.hide();\n        this.form = this.snFilterService.initForm();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    show() {\n        this.renderer.removeStyle(this.el.nativeElement, 'display');\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    hide() {\n        this.renderer.setStyle(this.el.nativeElement, 'display', 'none');\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        this.hide();\n    }\n    /**\n     * @return {?}\n     */\n    apply() {\n        this.snFilterService.applyChanges();\n        this.filterApply.emit({\n            count: this.snFilterService.count,\n            values: this.snFilterService.filterParams\n        });\n        this.hide();\n    }\n    /**\n     * @return {?}\n     */\n    open() {\n        this.show();\n        this.snFilterService.startFilter();\n    }\n}\nFilterComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-filter',\n                template: \"<form class=\\\"sn-filter-wrapper\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"apply()\\\">\\n    <div class=\\\"sn-filter-header\\\">\\n      <h1 class=\\\"sub-title\\\">\\n        <!-- TODO: Temporary until have back button from design -->\\n        <sn-icon icon=\\\"sn-SYS020\\\" (click)=\\\"close()\\\"></sn-icon>\\n        {{ 'branchlocator.filters.filters' | translate }}\\n      </h1>\\n      <!-- style=\\\"cursor: pointer;\\\" fix why button is uson not-allowed curso -->\\n      <button sn-button-outlined style=\\\"cursor: pointer;\\\" type=\\\"reset\\\">{{ 'branchlocator.filters.buttondeleteall' | translate }}</button>\\n    </div>\\n    <div class=\\\"sn-filter-content\\\">\\n      <div formGroupName=\\\"BRANCH\\\">\\n        <h2 class=\\\"title\\\">{{ 'branchlocator.shared.branch' | translate }}</h2>\\n        <div class=\\\"filters-list-wrapper\\\">\\n          <div class=\\\"filters-list\\\">\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"SELECT\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.select' | translate }}\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"BANCAPRIVADA\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.private' | translate }}\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"PYME\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.pyme' | translate }} <!-- TODO: review translation -->\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"WORKCAFE\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.workcafe' | translate }}\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"EMPRESAS\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.business' | translate }}\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"UNIVERSIDADES\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.universities' | translate }}\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"CLIENTES_POPULAR\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.popular' | translate }} <!-- TODO: review translation -->\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"CLIENTES_PASTOR\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.pastor' | translate }} <!-- TODO: review translation -->\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"CLIENTES_BANEFE\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.banefe' | translate }} <!-- TODO: review translation -->\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"RESIDENTES\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.residents' | translate }} <!-- TODO: review translation -->\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"GRANDES_SUPERFICIES\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.superficies' | translate }} <!-- TODO: review translation -->\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"AG_COLABORADORES\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.agcolaboradores' | translate }} <!-- TODO: review translation -->\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"AG_FINANCIEROS\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.agfinancieros' | translate }} <!-- TODO: review translation -->\\n              </sn-checkbox>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div formGroupName=\\\"ATM\\\">\\n        <h2 class=\\\"title\\\">{{ 'branchlocator.shared.atm' | translate }}</h2>\\n        <div class=\\\"filters-list-wrapper\\\">\\n          <div class=\\\"filters-list\\\">\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"ATM\\\" icon=\\\"sn-BAN005\\\">\\n                Santander\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"NON_SANTANDER_ATM\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.otheratm' | translate }}\\n              </sn-checkbox>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div formGroupName=\\\"CORRESPONSALES\\\">\\n        <h2 class=\\\"title\\\">{{ 'branchlocator.filters.correspondents' | translate }}</h2>\\n        <div class=\\\"filters-list-wrapper\\\">\\n          <div class=\\\"filters-list\\\">\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"CORRESPONSALES\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.correspondents' | translate }}\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"ELEVEN\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.eleven' | translate }} <!-- TODO: review translation -->\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"CIRCLE_K\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.circlek' | translate }} <!-- TODO: review translation -->\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"TIENDA_EXTRA\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.tiendaextra' | translate }} <!-- TODO: review translation -->\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"TIENDA_K\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.tiendak' | translate }} <!-- TODO: review translation -->\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"TELECOMM\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.telecomm' | translate }} <!-- TODO: review translation -->\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"SUPER7_24\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.super' | translate }} <!-- TODO: review translation -->\\n              </sn-checkbox>\\n            </div>\\n            <div class=\\\"filter-item\\\">\\n              <sn-checkbox formControlName=\\\"OXXO\\\" icon=\\\"sn-BAN005\\\">\\n                {{ 'branchlocator.filters.oxxo' | translate }} <!-- TODO: review translation -->\\n              </sn-checkbox>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"sn-filter-footer\\\">\\n      <button sn-button type=\\\"submit\\\">{{ 'branchlocator.filters.applyfilter' | translate }}</button>\\n    </div>\\n  </form>\\n  \",\n                styles: [\":host{background-color:var(--color-secondary-purple,#f5f9fb);height:100%}:host.modal,:host[modal]{position:absolute;top:0;left:0;right:0;bottom:0;z-index:10}:host h1,:host h2{font-size:1em;color:var(--color-secondary-gray,#444);margin:auto 0;font-weight:700;line-height:1.5}:host .sn-filter-wrapper{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;flex-wrap:nowrap;height:100%}:host .sn-filter-header{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-pack:justify;justify-content:space-between;padding:1.25em 1em;border-bottom:1px solid var(--color-secondary-lihtgray,#ccc)}:host .sn-filter-header .sub-title sn-icon{margin-right:5px}:host .sn-filter-header .sub-title sn-icon::ng-deep i{font-size:1.5em;vertical-align:bottom}:host .sn-filter-header>button{border-color:var(--color-functional-linkdefault,#ec0000);color:var(--color-functional-linkdefault,#ec0000);background-color:transparent;margin:0;min-height:0;min-width:-webkit-min-content;min-width:-moz-min-content;min-width:min-content;font-weight:400;font-size:.875em;padding:0 1.5em;line-height:1;height:2em}:host .sn-filter-content{-webkit-box-flex:1;flex:1;overflow-y:auto;padding:1.5em 1em}:host .sn-filter-content .title{font-size:1.125em;padding-bottom:.5em;margin-bottom:1.25em;border-bottom:1px solid var(--color-primary-sky,#deedf2)}:host .sn-filter-content .sub-title{margin-bottom:1em}:host .sn-filter-content .filter-item{margin-bottom:1.25em}:host .sn-filter-content .filter-item:last-child{margin-bottom:2.5em}:host .sn-filter-footer{background-color:var(--color-primary-white,#fff);border-top:1px solid var(--color-primary-sky,#deedf2);width:100%;display:-webkit-box;display:flex;-webkit-box-flex:0;flex:0}:host .sn-filter-footer button{margin:1em 1.5em;width:100%}\"]\n            }] }\n];\n/** @nocollapse */\nFilterComponent.ctorParameters = () => [\n    { type: FilterService },\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nFilterComponent.propDecorators = {\n    filterApply: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/platform/platform.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass Platform {\n    /**\n     * @param {?} windowRef\n     */\n    constructor(windowRef) {\n        this.windowRef = windowRef;\n    }\n    /**\n     * @return {?}\n     */\n    get orientation() {\n        return this.windowRef.screen.orientation;\n    }\n    /**\n     * @return {?}\n     */\n    get isMobile() {\n        // tslint:disable-next-line: max-line-length\n        return !(this.orientation.angle === 0 && this.orientation.type === 'landscape-primary') && this.windowRef.navigator.userAgent.toLowerCase().includes('mobile');\n    }\n    /**\n     * @return {?}\n     */\n    get isDesktop() {\n        return !this.isMobile;\n    }\n    /**\n     * @return {?}\n     */\n    get orientationChange() {\n        return fromEvent(this.orientation, 'change')\n            .pipe(map((/**\n         * @return {?}\n         */\n        () => this.orientation)));\n    }\n    /**\n     * @return {?}\n     */\n    get screen() {\n        return this.windowRef.screen;\n    }\n}\nPlatform.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nPlatform.ctorParameters = () => [\n    { type: WindowRef, decorators: [{ type: Inject, args: ['WINDOW',] }] }\n];\n/** @nocollapse */ Platform.ngInjectableDef = defineInjectable({ factory: function Platform_Factory() { return new Platform(inject(\"WINDOW\")); }, token: Platform, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/models/branch.model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/sn-branch-info/sn-branch-info.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SnBranchInfoComponent {\n    /**\n     * @param {?} translate\n     */\n    constructor(translate) {\n        this.translate = translate;\n        this.isBranch = true;\n        this.language = this.translate.getDefaultLang();\n        this.isNearestMarker = false;\n        // TODO : Temporary fix.\n        this.branchInfoClicked = new EventEmitter();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set branch(value) {\n        this._branch = this.setPOIInformation(value);\n        this.todayHours = this.getTodayTimeInformation(this._branch.schedule.workingDay);\n        this.isBranch = true;\n        if (this._branch.objectType.code.toUpperCase() === 'ATM') {\n            this._branch.atm = [this.setPOIInformation(value)];\n            this.isBranch = false;\n        }\n        else if (this._branch.atm && this._branch.atm.length > 0) {\n            this._branch.atm[0] = this.setPOIInformation(this._branch.atm[0]);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get branch() {\n        return this._branch;\n    }\n    /**\n     * @param {?} phone\n     * @return {?}\n     */\n    contactBranch(phone) {\n    }\n    /**\n     * @private\n     * @param {?} poi\n     * @return {?}\n     */\n    setPOIInformation(poi) {\n        poi.products = this.getProducts(poi);\n        poi.attributes = this.getAttributes(poi);\n        poi.schedule.preview = this.parseSchedule(poi.schedule.workingDay);\n        poi.schedule.timeToClose = this.getHoursToClose(poi.schedule.workingDay);\n        return poi;\n    }\n    /**\n     * @private\n     * @param {?} poi\n     * @return {?}\n     */\n    getProducts(poi) {\n        if (poi.comercialProducts) {\n            return poi.comercialProducts.map((/**\n             * @param {?} product\n             * @return {?}\n             */\n            product => product[this.language] ? product[this.language] : product.default));\n        }\n        return [];\n    }\n    /**\n     * @private\n     * @param {?} poi\n     * @return {?}\n     */\n    getAttributes(poi) {\n        if (poi.attrib) {\n            return poi.attrib.map((/**\n             * @param {?} attr\n             * @return {?}\n             */\n            attr => {\n                // Remover blank spaces and nullable\n                if (attr.code && attr.code !== '') {\n                    // get accesibility attribute\n                    if (attr.code.toUpperCase() === 'ACCESIBILITY') {\n                        poi.hasAccesibility = true;\n                        return null;\n                    }\n                    if (attr.multi && (attr.multi.default || attr.multi[this.language])) {\n                        if (attr.multi.default === 'NO') {\n                            return null;\n                        }\n                        else if (attr.multi.default === 'YES' || attr.multi.default === 'SI') {\n                            return attr.code;\n                        }\n                        else {\n                            return attr.multi[this.language] ? attr.multi[this.language] : attr.multi.default;\n                        }\n                    }\n                    else {\n                        // if there aren't translation display the code\n                        return attr.code;\n                    }\n                }\n                return null;\n            })).filter((/**\n             * @param {?} attr\n             * @return {?}\n             */\n            attr => attr !== null));\n        }\n        return [];\n    }\n    /**\n     * @param {?} schedule\n     * @return {?}\n     */\n    getHoursToClose(schedule) {\n        /** @type {?} */\n        const poiHours = this.getTodayTimeInformation(schedule);\n        if (poiHours) {\n            /** @type {?} */\n            const now = new Date(0, 0, 0, new Date().getHours(), new Date().getMinutes(), 0);\n            const [start, end] = poiHours.split('-').map((/**\n             * @param {?} res\n             * @return {?}\n             */\n            res => res.split(':')));\n            /** @type {?} */\n            const startDate = new Date(0, 0, 0, Number(start[0]), Number(start[1]), 0);\n            /** @type {?} */\n            const endDate = new Date(0, 0, 0, Number(end[0]), Number(end[1]), 0);\n            if (now.getTime() < startDate.getTime() || now.getTime() > endDate.getTime()) {\n                return {\n                    text: this.translate.instant('branchlocator.details.closed'),\n                    mode: 'CLOSED'\n                };\n            }\n            else {\n                /** @type {?} */\n                let diff = endDate.getTime() - now.getTime();\n                /** @type {?} */\n                const hours = Math.floor(diff / 1000 / 60 / 60);\n                diff -= hours * 1000 * 60 * 60;\n                /** @type {?} */\n                const minutes = Math.floor(diff / 1000 / 60);\n                if (hours <= 0) {\n                    return {\n                        text: `${this.translate.instant('branchlocator.details.closing')} ${(minutes <= 9 ? '0' : '')}${minutes} min`,\n                        mode: 'CLOSING'\n                    };\n                }\n                // return 'Closing in ' + (hours > 0 ? hours + 'h' : '') + (minutes <= 9 ? '0' : '') + minutes;\n                return {\n                    text: this.translate.instant('branchlocator.details.open'),\n                    mode: 'OPEN'\n                };\n            }\n        }\n    }\n    /**\n     * @param {?} branchSchedule\n     * @return {?}\n     */\n    getTodayTimeInformation(branchSchedule) {\n        /** @type {?} */\n        const auxHours = ['SUNDAY', 'MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY'];\n        /** @type {?} */\n        const now = new Date().getDay();\n        return branchSchedule[auxHours[now]][0];\n    }\n    /**\n     * @param {?} branchSchedule\n     * @return {?}\n     */\n    parseSchedule(branchSchedule) {\n        /** @type {?} */\n        const hoursEnum = {\n            MONDAY: {\n                en: 'Mon',\n                es: 'Seg',\n                // TODO: review translation\n                pt: 'Seg'\n            },\n            TUESDAY: {\n                en: 'Tue',\n                es: 'Ter',\n                // TODO: review translation\n                pt: 'Ter'\n            },\n            WEDNESDAY: {\n                en: 'Wed',\n                es: 'Qua',\n                // TODO: review translation\n                pt: 'Qua'\n            },\n            THURSDAY: {\n                en: 'Thu',\n                es: 'Qui',\n                // TODO: review translation\n                pt: 'Qui'\n            },\n            FRIDAY: {\n                en: 'Fri',\n                es: 'Sex',\n                // TODO: review translation\n                pt: 'Sex'\n            },\n            SATURDAY: {\n                en: 'Sat',\n                es: 'Sab',\n                // TODO: review translation\n                pt: 'Sab'\n            },\n            SUNDAY: {\n                en: 'Sun',\n                es: 'Ter',\n                // TODO: review translation\n                pt: 'Ter'\n            }\n        };\n        /** @type {?} */\n        const groupedHours = [];\n        /** @type {?} */\n        let index = 0;\n        Object.keys(hoursEnum).forEach((/**\n         * @param {?} res\n         * @return {?}\n         */\n        res => {\n            if (branchSchedule[res] && branchSchedule[res].length > 0) {\n                // create first group.\n                if (groupedHours.length === 0) {\n                    groupedHours.push({\n                        text: `${hoursEnum[res][this.language]}`,\n                        hours: branchSchedule[res]\n                    });\n                }\n                else {\n                    // if same hours, add to the previous group\n                    if (JSON.stringify(groupedHours[index].hours) === JSON.stringify(branchSchedule[res])) {\n                        groupedHours[index].text = `${groupedHours[index].text.split(' - ')[0]} - ${hoursEnum[res][this.language]}`;\n                    }\n                    else {\n                        // else, create a new group\n                        groupedHours.push({\n                            text: `${hoursEnum[res][this.language]}`,\n                            hours: branchSchedule[res]\n                        });\n                        index++;\n                    }\n                }\n            }\n        }));\n        return groupedHours;\n    }\n    /**\n     * @return {?}\n     */\n    emitClick() {\n        this.branchInfoClicked.emit();\n    }\n}\nSnBranchInfoComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-branch-info',\n                template: \"<div class=\\\"branch-wrapper\\\">\\n    <div header draggable class=\\\"branch-summary-wrapper\\\" (click)=\\\"emitClick()\\\">\\n        <h6 class=\\\"branch-title\\\" *ngIf=\\\"isNearestMarker\\\">{{ 'branchlocator.details.neartitle' | translate }}</h6>\\n        <section class=\\\"branch-summary\\\">\\n            <h6 class=\\\"branch-name\\\" style=\\\"min-height: 48px;\\\">{{(branch && branch?.name)? branch.name : ''}}{{branch.location?.city? ' - ' + branch?.location?.city: ''}}</h6>\\n            <div class=\\\"body-medium\\\" *ngIf=\\\"branch.subType?.multi\\\">{{branch.subType?.multi.default}}</div>\\n        </section>\\n        <section class=\\\"branch-location\\\">\\n          <p class=\\\"branch-address\\\" style=\\\"min-height: 72px;\\\">\\n            {{branch.location.address}}\\n          </p>\\n          <div class=\\\"branch-directions\\\">\\n            <button>{{branch.distanceInKm | number:'0.0-2'}} km</button>\\n          </div>\\n        </section>\\n    <section class=\\\"branch-schedule\\\">\\n      <div class=\\\"branch-hours\\\" *ngIf=\\\"isBranch && todayHours\\\">\\n        <div>{{ 'branchlocator.shared.branch' | translate }}</div>\\n        <div>{{ 'branchlocator.details.today' | translate }}, {{todayHours}}</div>\\n      </div>\\n      <!-- [ngClass]=\\\"{hidden: branch?.atm?.length === 0}\\\" -->\\n      <div class=\\\"atm-hours\\\" *ngIf=\\\"!isBranch || (branch.atm && branch.atm[0])\\\">\\n        <div>{{ 'branchlocator.shared.atm' | translate }}</div>\\n        <div>{{ 'branchlocator.details.atminfo' | translate }}</div>\\n      </div>\\n    </section>\\n  </div>\\n\\n  <div class=\\\"tab-group-wrapper\\\" [class.hide-tabs]=\\\"(isBranch && !(branch.atm?.length > 0)) || !isBranch\\\">\\n    <sn-tab-group [ngClass]=\\\"{both: isBranch && branch?.atm?.length}\\\">\\n      <sn-tab [label]=\\\"isBranch?translate.instant('branchlocator.shared.branch'):translate.instant('branchlocator.shared.atm')\\\" class=\\\"tab-branch-info\\\">\\n        <div class=\\\"branch-info-wrapper\\\">\\n          <sn-option-list lines=\\\"full\\\">\\n            <sn-option-item  *ngIf=\\\"branch.schedule?.timeToClose\\\">\\n              <div class=\\\"close-warning\\\">\\n                <div class=\\\"Type-5_Light-Style\\\">{{branch.schedule.timeToClose.text}}</div>\\n                <div class=\\\"signal {{branch.schedule.timeToClose.mode}}\\\"></div>\\n              </div>\\n            </sn-option-item>\\n            <sn-option-item  *ngIf=\\\"branch.contactData?.phoneNumber\\\">\\n              <sn-icon color=\\\"primary\\\" icon=\\\"sn-CHAN025\\\" item-start align-start></sn-icon>\\n              <div>\\n                <div class=\\\"Type-5_Regular-Style section-title\\\">{{ 'branchlocator.details.contact' | translate }}</div>\\n                <div class=\\\"Type-5_Regular-Style\\\">{{branch.contactData.phoneNumber}}</div>\\n              </div>\\n              <div item-end>\\n                <button (click)=\\\"contactBranch(branch.contactData.phoneNumber)\\\" class=\\\"call-button\\\">{{ 'branchlocator.details.contactbutton' | translate }}</button>\\n              </div>\\n            </sn-option-item>\\n            <sn-option-item  *ngIf=\\\"branch.schedule?.preview?.length > 0\\\">\\n              <sn-icon color=\\\"primary\\\" icon=\\\"sn-DOC022\\\" item-start align-start></sn-icon>\\n              <div class=\\\"Type-5_Regular-Style section-title\\\">{{ 'branchlocator.details.schedule' | translate }}</div>\\n              <div class=\\\"Type-5_Regular-Style hours-wrapper\\\" *ngFor=\\\"let schedule of branch.schedule.preview\\\">\\n                <div class=\\\"weekdays\\\">\\n                  <h1 class=\\\"title\\\">{{schedule.text}}:</h1>\\n                </div>\\n                <div class=\\\"hours\\\">\\n                  <div *ngFor=\\\"let workingHour of schedule.hours\\\">{{workingHour}}<br /></div>\\n                </div>\\n              </div>\\n            </sn-option-item>\\n            <!-- <sn-option-item >\\n              <sn-icon color=\\\"primary\\\" icon=\\\"sn-SYS004\\\" item-start align-start></sn-icon>\\n              <div class=\\\"Type-5_Regular-Style section-title\\\">Notices and news</div>\\n              <div class=\\\"Type-5_Regular-Style\\\">\\n                <h1 class=\\\"title\\\">Tomorrow closed for works</h1>\\n                Due to improvements in the facilities we will keep the office closed tomorrow, Tuesday, August 6, 2018.\\n                <br />\\n                <br />\\n                Sorry for the inconvenience\\n              </div>\\n            </sn-option-item> -->\\n            <sn-option-item  *ngIf=\\\"branch.attributes?.length > 0 || branch.products?.length > 0\\\">\\n              <sn-icon color=\\\"primary\\\" icon=\\\"sn-BAN089\\\" item-start align-start></sn-icon>\\n              <div class=\\\"Type-5_Regular-Style section-title\\\">{{ 'branchlocator.details.services' | translate }}</div>\\n              <div class=\\\"Type-5_Regular-Style\\\" *ngIf=\\\"branch.products.length > 0\\\">\\n                  <h1 class=\\\"title\\\">{{ 'branchlocator.details.servicesfinancial' | translate }}</h1>\\n                  <ul type=\\\"none\\\">\\n                    <li *ngFor=\\\"let attr of branch.products\\\">{{attr}}</li>\\n                  </ul>\\n              </div>\\n              <div class=\\\"Type-5_Regular-Style\\\" *ngIf=\\\"branch.attributes.length > 0\\\">\\n                  <h1 class=\\\"title\\\">{{ 'branchlocator.details.servicesnofinancial' | translate }}</h1>\\n                <ul type=\\\"none\\\">\\n                  <li *ngFor=\\\"let attr of branch.attributes\\\">{{attr}}</li>\\n                </ul>\\n              </div>\\n            </sn-option-item>\\n            <sn-option-item *ngIf=\\\"branch.hasAccesibility\\\">\\n              <sn-icon color=\\\"primary\\\" icon=\\\"sn-FUNC094\\\" item-start align-start></sn-icon>\\n              <div class=\\\"Type-5_Regular-Style section-title\\\">{{ 'branchlocator.details.accessibility' | translate }}</div>\\n              <h1 class=\\\"title\\\">{{ 'branchlocator.details.accessibilitymessage' | translate }}</h1>\\n            </sn-option-item>\\n\\n          </sn-option-list>\\n        </div>\\n      </sn-tab>\\n        \\n      <sn-tab label=\\\"ATM\\\" class=\\\"tab-branch-info\\\" *ngIf=\\\"(isBranch && branch.atm && branch.atm[0])\\\"> <!--*ngIf=\\\"false\\\"-->\\n          <div class=\\\"branch-info-wrapper\\\">\\n            <sn-option-list>\\n              <sn-option-item  *ngIf=\\\"branch.atm[0].schedule?.timeToClose\\\">\\n                <div class=\\\"close-warning\\\">\\n                  <div class=\\\"Type-5_Light-Style\\\">{{branch.atm[0].schedule?.timeToClose.text}}</div>\\n                  <div class=\\\"signal {{branch.atm[0].schedule?.timeToClose.mode}}\\\"></div>\\n                </div>\\n              </sn-option-item>\\n              <sn-option-item  *ngIf=\\\"branch.atm && branch.atm[0].contactData?.phoneNumber\\\">\\n                <sn-icon color=\\\"primary\\\" icon=\\\"sn-CHAN025\\\" item-start align-start></sn-icon>\\n                <div>\\n                  <div class=\\\"Type-5_Regular-Style section-title\\\">{{ 'branchlocator.details.contact' | translate }}</div>\\n                  <div class=\\\"Type-5_Regular-Style\\\">{{branch.atm[0].contactData.phoneNumber}}</div>\\n                </div>\\n                <div item-end>\\n                  <button (click)=\\\"contactBranch(branch.atm[0].contactData.phoneNumber)\\\" class=\\\"call-button\\\">{{ 'branchlocator.details.contactbutton' | translate }}</button>\\n                </div>\\n              </sn-option-item>\\n              <sn-option-item  *ngIf=\\\"branch.atm && branch.atm[0].schedule?.preview?.length > 0\\\">\\n                <sn-icon color=\\\"primary\\\" icon=\\\"sn-DOC022\\\" item-start align-start></sn-icon>\\n                <div class=\\\"Type-5_Regular-Style section-title\\\">{{ 'branchlocator.details.schedule' | translate }}</div>\\n                <div class=\\\"Type-5_Regular-Style hours-wrapper\\\" *ngFor=\\\"let schedule of branch.atm[0].schedule.preview\\\">\\n                  <div class=\\\"weekdays\\\">\\n                    <h1 class=\\\"title\\\">{{schedule.text}}:</h1>\\n                  </div>\\n                  <div class=\\\"hours\\\">\\n                    <div *ngFor=\\\"let workingHour of schedule.hours\\\">{{workingHour}}<br /></div>\\n                  </div>\\n                </div>\\n              </sn-option-item>\\n              <!-- <sn-option-item >\\n                <sn-icon color=\\\"primary\\\" icon=\\\"sn-SYS004\\\" item-start align-start></sn-icon>\\n                <div class=\\\"Type-5_Regular-Style section-title\\\">Notices and news</div>\\n                <div class=\\\"Type-5_Regular-Style\\\">\\n                  <h1 class=\\\"title\\\">Tomorrow closed for works</h1>\\n                  Due to improvements in the facilities we will keep the office closed tomorrow, Tuesday, August 6, 2018.\\n                  <br />\\n                  <br />\\n                  Sorry for the inconvenience\\n                </div>\\n              </sn-option-item> -->\\n              <sn-option-item  *ngIf=\\\"branch.atm && (branch.atm[0].attributes?.length > 0 || branch.atm[0].products?.length > 0)\\\">\\n                <sn-icon color=\\\"primary\\\" icon=\\\"sn-BAN089\\\" item-start align-start></sn-icon>\\n                <div class=\\\"Type-5_Regular-Style section-title\\\">{{ 'branchlocator.details.services' | translate }}</div>\\n                <div class=\\\"Type-5_Regular-Style\\\" *ngIf=\\\"branch.atm[0].products.length > 0\\\">\\n                  <h1 class=\\\"title\\\">{{ 'branchlocator.details.servicesfinancial' | translate }}</h1>\\n                  <ul type=\\\"none\\\">\\n                    <li *ngFor=\\\"let attr of branch.atm[0].products\\\">{{attr}}</li>\\n                  </ul>\\n                </div>\\n                <div class=\\\"Type-5_Regular-Style\\\" *ngIf=\\\"branch.atm[0].attributes.length > 0\\\">\\n                  <h1 class=\\\"title\\\">{{ 'branchlocator.details.servicesnofinancial' | translate }}</h1>\\n                  <ul type=\\\"none\\\">\\n                    <li *ngFor=\\\"let attr of branch.atm[0].attributes\\\">{{attr}}</li>\\n                  </ul>\\n                </div>\\n              </sn-option-item>\\n              <sn-option-item *ngIf=\\\"branch.atm[0].hasAccesibility\\\">\\n                <sn-icon color=\\\"primary\\\" icon=\\\"sn-FUNC094\\\" item-start align-start></sn-icon>\\n                <div class=\\\"Type-5_Regular-Style section-title\\\">{{ 'branchlocator.details.accessibility' | translate }}</div>\\n                <h1 class=\\\"title\\\">{{ 'branchlocator.details.accessibilitymessage' | translate }}</h1>\\n              </sn-option-item>\\n  \\n            </sn-option-list>\\n          </div>\\n\\n        </sn-tab>\\n    </sn-tab-group>\\n  </div>\\n</div>\\n\",\n                styles: [\".branch-wrapper{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;height:100%}.branch-summary-wrapper{padding:16px}.branch-summary-wrapper h6{font-size:18px;font-weight:700}.branch-summary-wrapper .branch-title{color:var(--color-primary-santander,#ec0000)}.branch-summary-wrapper .branch-summary .branch-name{font-weight:700;color:var(--color-secondary-mediumgray,#767676);padding:0}.branch-summary-wrapper .branch-summary .body-medium{font-size:16px;font-weight:lighter;color:var(--color-secondary-mediumgray,#767676)}.branch-summary-wrapper .branch-location{display:-webkit-box;display:flex;width:100%;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row}.branch-summary-wrapper .branch-location .branch-address{font-weight:400;font-size:16px;color:var(--color-secondary-mediumgray,#767676);-webkit-box-flex:1;flex-grow:1}.branch-summary-wrapper .branch-location .branch-directions button{background:var(--color-secondary-blue,#36f);color:var(--color-primary-white,#fff);text-align:center;border-radius:16px;width:103px;height:32px;font-weight:400;font-size:1em;line-height:1em}.branch-summary-wrapper .branch-schedule{font-size:14px;color:var(--color-secondary-gray,#444);display:-webkit-box;display:flex;width:100%;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-pack:justify;justify-content:space-between}.branch-summary-wrapper .branch-schedule .atm-hours :first-child,.branch-summary-wrapper .branch-schedule .branch-hours :first-child{font-weight:700}.branch-summary-wrapper .branch-schedule .atm-hours{text-align:right}.branch-summary-wrapper .branch-schedule .atm-hours:first-child{text-align:left}.tab-group-wrapper{overflow-y:auto;height:100%}.tab-group-wrapper.hide-tabs ::ng-deep sn-tab-group .tab-wrapper{display:none}.branch-info-wrapper{padding:1rem;overflow-y:auto}.branch-info-wrapper sn-option-item{padding:.5rem 0 1rem}.branch-info-wrapper sn-option-item sn-icon{font-size:2rem}.branch-info-wrapper sn-option-item .call-button{background:var(--color-primary-white,#fff);color:var(--color-primary-santander,#ec0000);text-align:center;border-radius:16px;width:103px;height:32px;font-weight:400;font-size:1em;border:1px solid var(--color-primary-santander,#ec0000);line-height:1em}.branch-info-wrapper sn-option-item .close-warning{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-pack:start;justify-content:flex-start}.branch-info-wrapper sn-option-item .close-warning .signal{width:1rem;height:1rem;border-radius:100%;background-color:var(--color-secondary-yellow,#fc3);margin:auto auto auto .5rem}.branch-info-wrapper sn-option-item .close-warning .signal.OPEN{background-color:green}.branch-info-wrapper sn-option-item .close-warning .signal.CLOSED{background-color:transparent}.branch-info-wrapper sn-option-item .hours-wrapper{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-pack:justify;justify-content:space-between}.branch-info-wrapper sn-option-item .hours-wrapper>div{width:50%}.branch-info-wrapper sn-option-item .hours-wrapper>div>div{margin-top:.2em}.branch-info-wrapper sn-option-item .title{color:var(--color-secondary-gray,#444);font-weight:600;margin-bottom:0;margin-top:.2rem;font-size:1rem;line-height:1.5rem}.branch-info-wrapper sn-option-item div{font-size:1rem;line-height:1.5rem}.branch-info-wrapper sn-option-item div.section-title{color:var(--color-secondary-mediumgray,#767676);margin-top:.25rem}.branch-info-wrapper sn-option-item div ul{padding:0;margin:0}.branch-info-wrapper sn-option-item div ul li>ul{padding-left:1rem}\"]\n            }] }\n];\n/** @nocollapse */\nSnBranchInfoComponent.ctorParameters = () => [\n    { type: TranslateService }\n];\nSnBranchInfoComponent.propDecorators = {\n    isNearestMarker: [{ type: Input }],\n    branch: [{ type: Input }],\n    branchInfoClicked: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/menu/menu.animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MenuAnimations = {\n    menuTrigger: trigger('menuTrigger', [\n        state('menuOpened', style({\n            transform: 'translateX(0)'\n        })),\n        state('menuClosed', style({\n            transform: 'translateX(-340px)'\n        })),\n        transition('menuOpened=>menuClosed', animate('250ms')),\n        transition('menuClosed=>menuOpened', animate('250ms'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/menu/menu.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MenuComponent {\n    constructor() {\n        this.closeInfo = new EventEmitter();\n        this.menuDidOpen = new EventEmitter();\n        this.menuDidClose = new EventEmitter();\n        this.currentState = 'menuOpened';\n    }\n    /**\n     * @return {?}\n     */\n    changeState() {\n        this.currentState = this.currentState === 'menuOpened' ? 'menuClosed' : 'menuOpened';\n    }\n    /**\n     * @return {?}\n     */\n    open() {\n        this.currentState = 'menuOpened';\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    animationEnd(event) {\n        event.toState === 'menuOpened' ? this.menuDidOpen.emit(true) : this.menuDidClose.emit(true);\n    }\n}\nMenuComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-menu',\n                template: \"\\n<div class=\\\"panel panel-visible\\\" [@menuTrigger]=\\\"currentState\\\" (@menuTrigger.done)=\\\"animationEnd($event)\\\">\\n    <div class=\\\"close-button-wrapper\\\">\\n        <button (click)=\\\"changeState()\\\" class=\\\"menu-toggle\\\">\\n            <sn-icon *ngIf=\\\"currentState === 'menuOpened'\\\" icon=\\\"sn-SYS017\\\"></sn-icon>\\n            <sn-icon *ngIf=\\\"currentState === 'menuClosed'\\\" icon=\\\"sn-SYS016\\\"></sn-icon>\\n       </button>\\n           \\n    </div>\\n  <section class=\\\"panel-wrapper\\\">\\n    <div class=\\\"search-input-wrapper\\\">\\n      <ng-content select=\\\"sn-branch-search\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"search-results-wrapper\\\" [ngClass]=\\\"{'closed': !!info }\\\">\\n      <ng-content select=\\\"sn-branch-list\\\"></ng-content>\\n    </div>\\n    <div class=\\\"info-wrapper\\\" [ngClass]=\\\"{'closed': !info }\\\">\\n      <div class=\\\"info-close-button-wrapper\\\">\\n        <button class=\\\"info-close-button\\\" (click)=\\\"closeInfo.emit($event)\\\">\\n          <sn-icon icon=\\\"sn-SYS022\\\"></sn-icon>\\n        </button>\\n      </div>\\n        <ng-content select=\\\"sn-branch-info\\\"></ng-content>\\n    </div>\\n  </section>\\n  <ng-content select=\\\"sn-filter\\\"></ng-content>\\n</div>\\n\\n\",\n                animations: [MenuAnimations.menuTrigger],\n                styles: [\":host{display:block}:host .panel{width:340px;position:absolute;top:0;z-index:3;opacity:0;height:0;left:0;-webkit-transform:translateX(0);transform:translateX(0);transition-property:-webkit-transform,transform,opacity;-webkit-transition-duration:.2s;transition-duration:.2s;-webkit-transition-timing-function:cubic-bezier(0,0,.2,1);transition-timing-function:cubic-bezier(0,0,.2,1);background-color:#fff}:host .panel-visible{opacity:1;height:100%;box-shadow:0 0 20px rgba(0,0,0,.3)}:host .menu-toggle{position:absolute;right:-28px;top:.75rem;height:40px;box-shadow:7px 1px 9px 0 rgba(60,64,67,.28)}:host .panel-wrapper{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;height:100%}:host .search-input-wrapper{height:65px;padding:8px}:host .search-input-wrapper ::ng-deep sn-branch-search .search-box{box-shadow:none}:host .search-results-wrapper{box-shadow:inset 0 14px 10px -10px rgba(60,64,67,.28);-webkit-box-flex:1;flex:1;overflow-y:auto}:host .info-wrapper{box-shadow:inset 0 14px 10px -10px rgba(60,64,67,.28);-webkit-box-flex:1;flex:1;overflow:hidden}:host .info-wrapper .info-close-button-wrapper{padding:8px;position:fixed;right:0}:host .info-wrapper .info-close-button-wrapper button.info-close-button{font-size:24px}:host .info-wrapper ::ng-deep sn-branch-info .tab-group-wrapper sn-tab-group sn-tab{overflow-y:auto}:host .closed{display:none}\"]\n            }] }\n];\nMenuComponent.propDecorators = {\n    closeInfo: [{ type: Output }],\n    info: [{ type: ContentChild, args: [SnBranchInfoComponent,] }],\n    menuDidOpen: [{ type: Output }],\n    menuDidClose: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/branch-locator/sn-branch-locator.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SnBranchLocatorComponent {\n    /**\n     * @param {?} geoPosition\n     * @param {?} branchService\n     * @param {?} platform\n     */\n    constructor(geoPosition, branchService, platform) {\n        this.geoPosition = geoPosition;\n        this.branchService = branchService;\n        this.platform = platform;\n        this.markerSelected = new EventEmitter();\n        this.mapBounds = new EventEmitter();\n        this.isLoading = true;\n        this.branchIcon = {\n            url: 'assets/branchlocator/touchpointIcon.svg',\n            scaledSize: { height: 40, width: 40 }\n        };\n        this.branchSelectedIcon = {\n            url: 'assets/branchlocator/santanderTouchpointSelected.svg',\n            scaledSize: { height: 56, width: 56 }\n        };\n        this.usericon = {\n            url: 'assets/branchlocator/pinVoce.svg',\n            scaledSize: { height: 90, width: 90 }\n        };\n        this.clusterStyles = [\n            {\n                textColor: '#000000',\n                url: 'assets/branchlocator/coffeeBlank.svg',\n                height: 40,\n                width: 32,\n                backgroundPosition: '-4px 2px'\n            }\n        ];\n        this.zoom = 13;\n        this.showNearest = false;\n        this.selectBranch = (/**\n         * @param {?} branch\n         * @return {?}\n         */\n        (branch) => {\n            /** @type {?} */\n            const markerFound = this.branchMarkerList['_results'].find((/**\n             * @param {?} marker\n             * @return {?}\n             */\n            marker => marker.label && marker.label.text === branch.id));\n            this.markerSelect(markerFound, branch);\n            this.selectedTabIndex = 0;\n        });\n        this.geoPosition.watchPosition()\n            .pipe(first())\n            .subscribe((/**\n         * @param {?} pos\n         * @return {?}\n         */\n        (pos) => {\n            this._initialPosition = {\n                lat: pos.coords.latitude,\n                lng: pos.coords.longitude\n            };\n            this.userPosition = {\n                lat: pos.coords.latitude,\n                lng: pos.coords.longitude\n            };\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.isMobile = this.platform.isMobile;\n        this.branchService.onChange.subscribe((/**\n         * @param {?} res\n         * @return {?}\n         */\n        res => {\n            this.clearSelectedMarker();\n            this.branchesList = res;\n            this.isLoading = false;\n            if (this.openNearest) {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.selectBranch(this.branchesList[0]);\n                    this.showNearest = true;\n                }));\n            }\n        }), (/**\n         * @param {?} err\n         * @return {?}\n         */\n        err => {\n            console.error(err);\n            this.isLoading = false;\n        }));\n    }\n    /**\n     * @param {?=} coords\n     * @param {?=} openNearest\n     * @return {?}\n     */\n    getBranchesByCoordinates(coords = this.userPosition, openNearest = false) {\n        this.isLoading = true;\n        this.openNearest = openNearest;\n        this.branchService.getBranchesByCoords(coords ? coords : this.userPosition);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    tabsChanged(event) {\n        this.selectedTabIndex = event.tabIndex;\n        if (this.selectedTabIndex === 1) {\n            this.clearSelectedMarker();\n        }\n    }\n    /**\n     * @param {?} selected\n     * @param {?} branch\n     * @return {?}\n     */\n    markerSelect(selected, branch) {\n        this.clearSelectedMarker();\n        selected.iconUrl = (/** @type {?} */ (this.branchSelectedIcon));\n        selected['_markerManager'].updateIcon(selected);\n        this.selectedMarker = selected;\n        this.selectedBranch = branch;\n        this.markerSelected.emit({ userPosition: this.userPosition, marker: this.selectedBranch });\n        this.openMenu();\n        this.openDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    openMenu() {\n        if (this.menuComponent && this.menuComponent.currentState === 'menuClosed') {\n            this.menuComponent.open();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    mapClick(event) {\n        if (this.selectedMarker) {\n            this.clearSelectedMarker();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    mapReady() {\n        this.geoPosition.getCurrentPosition()\n            .subscribe((/**\n         * @param {?} pos\n         * @return {?}\n         */\n        (pos) => {\n            this.userPosition = {\n                lat: pos.coords.latitude,\n                lng: pos.coords.longitude\n            };\n            // this.getBranchesByCoordinates();\n            this.goToUserPositon();\n        }));\n    }\n    /**\n     * @param {?} mapCenter\n     * @return {?}\n     */\n    centerChange(mapCenter) {\n        if (this.userPosition && this.userPosition.lng && this.userPosition.lat) {\n            this.showReCenter = (this.roundCordinates(this.userPosition.lng) !== this.roundCordinates(mapCenter.lng)\n                || this.roundCordinates(this.userPosition.lat) !== this.roundCordinates(mapCenter.lat));\n        }\n        else {\n            this.showReCenter = false;\n        }\n    }\n    /**\n     * @param {?=} callAPI\n     * @param {?=} openNearest\n     * @return {?}\n     */\n    centerMapToUser(callAPI = true, openNearest = false) {\n        this.goToUserPositon();\n        if (callAPI) {\n            this.getBranchesByCoordinates(this.userPosition, openNearest);\n        }\n        else if (openNearest && this.branchesList && this.branchesList.length > 0) {\n            this.selectBranch(this.branchesList[0]);\n            this.showNearest = true;\n        }\n    }\n    /**\n     * @param {?} state\n     * @return {?}\n     */\n    drawerStageChange(state$$1) {\n        if (state$$1 === DrawerState.Bottom) {\n            this.clearSelectedMarker();\n        }\n        else {\n            this.openDrawer();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    closeInfo() {\n        this.showDrawer = !this.showDrawer;\n    }\n    /**\n     * @param {?} place\n     * @return {?}\n     */\n    placeChange(place) {\n        this.clearSelectedMarker();\n        from(this.map.api.panTo(place)).pipe(switchMap((/**\n         * @return {?}\n         */\n        () => from(this.map.api.setZoom(this.zoom))))).subscribe((/**\n         * @param {?} res\n         * @return {?}\n         */\n        res => {\n            this.getBranchesByBounds();\n        }));\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onFilterApply(event) {\n        this.filterCounts = event.count;\n        this.getBranchesByBounds();\n    }\n    /**\n     * @return {?}\n     */\n    showFilter() {\n        this.clearSelectedMarker();\n        this.filterView.open();\n    }\n    /**\n     * @private\n     * @param {?} cord\n     * @return {?}\n     */\n    roundCordinates(cord) {\n        return Math.round(cord * 1e7) / 1e7;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    clearSelectedMarker() {\n        this.showNearest = false;\n        this.closeDrawer();\n        if (this.selectedMarker) {\n            this.selectedMarker.iconUrl = (/** @type {?} */ (this.branchIcon));\n            this.selectedMarker['_markerManager'].updateIcon(this.selectedMarker);\n            this.selectedMarker = undefined;\n            this.selectedBranch = undefined;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    closeDrawer() {\n        this.showDrawer = false;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    openDrawer() {\n        this.showDrawer = true;\n    }\n    /**\n     * @return {?}\n     */\n    goToUserPositon() {\n        if (this.userPosition) {\n            this.map.api.panTo(this.userPosition).then((/**\n             * @return {?}\n             */\n            () => this.map.api.setZoom(this.zoom)));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    tilesLoaded() {\n        this.getBranchesByBounds();\n    }\n    /**\n     * @return {?}\n     */\n    getBranchesByBounds() {\n        from(this.map.api.getBounds()).\n            subscribe((/**\n         * @param {?} mapBounds\n         * @return {?}\n         */\n        (mapBounds) => {\n            /** @type {?} */\n            const northEast = { lat: mapBounds.getNorthEast().lat(), lng: mapBounds.getNorthEast().lng() };\n            /** @type {?} */\n            const southWest = { lat: mapBounds.getSouthWest().lat(), lng: mapBounds.getSouthWest().lng() };\n            this.mapBounds.emit({ northEast, southWest });\n            this.isLoading = true;\n            this.openNearest = false;\n            this.position\n                .subscribe((/**\n             * @param {?} pos\n             * @return {?}\n             */\n            pos => {\n                this.branchService.getBranchesByBounds(northEast, southWest, pos);\n            }));\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    get position() {\n        if (this.userPosition) {\n            return of(this.userPosition);\n        }\n        else {\n            return this.geoPosition.getCurrentPosition()\n                .pipe(map((/**\n             * @param {?} pos\n             * @return {?}\n             */\n            (pos) => {\n                this.userPosition = {\n                    lat: pos.coords.latitude,\n                    lng: pos.coords.longitude\n                };\n                return this.userPosition;\n            })));\n        }\n    }\n}\nSnBranchLocatorComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-branch-locator',\n                template: \"<!-- Mobile and Tablet -->\\n<ng-container *ngIf=\\\"isMobile\\\">\\n    <sn-tab-group [selectIndex]=\\\"selectedTabIndex\\\" (selectedTab)='tabsChanged($event)'>\\n        <sn-tab label=\\\"{{ 'branchlocator.title.map' | translate }}\\\">\\n            <section  class=\\\"locator-content\\\">\\n                <agm-map [gestureHandling]=\\\"'greedy'\\\" [showDefaultInfoWindow]=\\\"false\\\" [disableDefaultUI]=\\\"true\\\"\\n                [controlSize]=\\\"false\\\" [panControl]=\\\"false\\\" [streetViewControl]=\\\"false\\\" [zoomControl]=\\\"false\\\" [zoom]=\\\"zoom\\\"\\n                (mapReady)=\\\"mapReady()\\\" (mapClick)=\\\"mapClick($event)\\\" (centerChange)=\\\"centerChange($event)\\\" (tilesLoaded)=\\\"tilesLoaded()\\\">\\n                    <agm-marker [agmFitBounds]=\\\"true\\\" [latitude]=\\\"userPosition?.lat\\\" [longitude]=\\\"userPosition?.lng\\\"\\n                        [iconUrl]=\\\"usericon\\\" [markerClickable]=\\\"false\\\" [openInfoWindow]=\\\"false\\\"></agm-marker>\\n                    <agm-marker-cluster [styles]=\\\"clusterStyles\\\" [maxZoom]=\\\"'15'\\\" [minimumClusterSize]=\\\"5\\\" [averageCenter]=\\\"true\\\">\\n                        <agm-marker canChangeIcon *ngFor=\\\"let branch of branchesList\\\" [title]=\\\"branch.name\\\" [label]=\\\"{text: branch.id, fontSize: '0'}\\\" [agmFitBounds]=\\\"true\\\" [latitude]=\\\"branch.location.geoCoords.latitude\\\"\\n                            [longitude]=\\\"branch.location.geoCoords.longitude\\\" [iconUrl]=\\\"branchIcon\\\" (markerClick)=\\\"markerSelect($event, branch)\\\"\\n                            [markerClickable]=\\\"true\\\" [openInfoWindow]=\\\"false\\\"></agm-marker>\\n                    </agm-marker-cluster>\\n                </agm-map>\\n                <section class=\\\"locator-center\\\">\\n                    <button class=\\\"center-map-user\\\" (click)=\\\"centerMapToUser(false, false)\\\">\\n                        <sn-icon icon=\\\"sn-SYS029\\\"></sn-icon>\\n                    </button>\\n                </section>\\n                <sn-drawer #drawer [dockedHeight]=\\\"220\\\" [state]=\\\"(showDrawer)? 1 : 0\\\" [distanceTop]=\\\"64\\\" (stateChange)=\\\"drawerStageChange($event)\\\">\\n                    <sn-branch-info *ngIf=\\\"selectedBranch\\\" [branch]=\\\"selectedBranch\\\" (branchInfoClicked)=\\\"drawer.changeState()\\\" [isNearestMarker]=\\\"showNearest\\\"></sn-branch-info>\\n                </sn-drawer>\\n                \\n                <sn-loading *ngIf=\\\"isLoading\\\" full=\\\"true\\\"></sn-loading>\\n            </section>\\n        </sn-tab>\\n        <sn-tab label=\\\"{{ 'branchlocator.title.list' | translate }}\\\">\\n            <section class=\\\"result-list-wrapper\\\">\\n                <sn-branch-list [isLoading]=\\\"isLoading\\\" [branchesList]=\\\"branchesList\\\" (branchSelected)=\\\"selectBranch($event)\\\"></sn-branch-list>\\n            </section>\\n        </sn-tab>\\n    </sn-tab-group>\\n    <section class=\\\"locator-search\\\">\\n        <div class=\\\"locator-search-container\\\">\\n            <sn-branch-search [showReCenter]=\\\"showReCenter\\\" [filterCount]=\\\"filterCounts\\\"\\n            (placeChange)=\\\"placeChange($event)\\\"\\n            (reCenter)=\\\"centerMapToUser(true, true)\\\" (callFilter)=\\\"showFilter()\\\"></sn-branch-search>\\n        </div>\\n    </section>\\n    <sn-filter modal (filterApply)=\\\"onFilterApply($event)\\\" ></sn-filter>\\n</ng-container>\\n<!-- End Mobile and Tablet -->\\n\\n<!-- Desktop -->\\n<ng-container *ngIf=\\\"!isMobile\\\">\\n    <!-- Side Menu -->\\n    <sn-menu (closeInfo)=\\\"closeInfo()\\\">\\n        <sn-branch-search #test [showReCenter]=\\\"showReCenter\\\" [filterCount]=\\\"filterCounts\\\"\\n            (placeChange)=\\\"placeChange($event)\\\" (reCenter)=\\\"centerMapToUser(true, true)\\\" (callFilter)=\\\"showFilter()\\\">\\n        </sn-branch-search>\\n\\n        <sn-branch-list [isLoading]=\\\"isLoading\\\" [branchesList]=\\\"branchesList\\\" (branchSelected)=\\\"selectBranch($event)\\\"></sn-branch-list>\\n\\n        <sn-branch-info\\n            *ngIf=\\\"showDrawer\\\" \\n            [branch]=\\\"selectedBranch\\\"\\n            [isNearestMarker]=\\\"showNearest\\\"></sn-branch-info>\\n        <sn-filter modal (filterApply)=\\\"onFilterApply($event)\\\"></sn-filter>\\n    </sn-menu>\\n    <!-- End Side Menu -->\\n\\n    <section class=\\\"locator-content\\\">\\n        <agm-map [gestureHandling]=\\\"'greedy'\\\" [showDefaultInfoWindow]=\\\"false\\\" [disableDefaultUI]=\\\"true\\\"\\n        [controlSize]=\\\"false\\\" [panControl]=\\\"false\\\" [streetViewControl]=\\\"false\\\" [zoomControl]=\\\"false\\\" [zoom]=\\\"zoom\\\"\\n        (mapReady)=\\\"mapReady()\\\" (mapClick)=\\\"mapClick($event)\\\" (centerChange)=\\\"centerChange($event)\\\" (tilesLoaded)=\\\"tilesLoaded()\\\">\\n            <agm-marker [agmFitBounds]=\\\"true\\\" [latitude]=\\\"userPosition?.lat\\\" [longitude]=\\\"userPosition?.lng\\\"\\n                [iconUrl]=\\\"usericon\\\" [markerClickable]=\\\"false\\\" [openInfoWindow]=\\\"false\\\" ></agm-marker>\\n            <agm-marker-cluster [styles]=\\\"clusterStyles\\\" [maxZoom]=\\\"'15'\\\" [minimumClusterSize]=\\\"5\\\" [averageCenter]=\\\"true\\\">\\n                <agm-marker canChangeIcon *ngFor=\\\"let branch of branchesList\\\" [title]=\\\"branch.name\\\" [label]=\\\"{text: branch.id, fontSize: '0'}\\\" [agmFitBounds]=\\\"true\\\" [latitude]=\\\"branch.location.geoCoords.latitude\\\"\\n                    [longitude]=\\\"branch.location.geoCoords.longitude\\\" [iconUrl]=\\\"branchIcon\\\" (markerClick)=\\\"markerSelect($event, branch)\\\"\\n                    [markerClickable]=\\\"true\\\" [openInfoWindow]=\\\"false\\\"></agm-marker>\\n            </agm-marker-cluster>\\n        </agm-map>\\n        <section class=\\\"locator-center\\\">\\n            <button class=\\\"center-map-user\\\" (click)=\\\"centerMapToUser(false, false)\\\">\\n                <sn-icon icon=\\\"sn-SYS029\\\"></sn-icon>\\n            </button>\\n        </section>\\n        <sn-loading *ngIf=\\\"isLoading\\\" full=\\\"true\\\"></sn-loading>\\n    </section>\\n</ng-container>\\n<!-- End Desktop -->\",\n                styles: [\":host{position:absolute;top:0;left:0;width:100%;height:100%}:host ::ng-deep agm-map{height:100%}:host .locator-content{height:100%}:host .locator-content .locator-center{position:absolute;right:.5rem;top:.5rem}:host .locator-content .locator-center button{background-color:var(--color-primary-white,#fff);border-radius:2.7px;box-shadow:0 1px 2px 0 var(--color-secondary-mediumgray,#767676);border:0;font-size:1.5rem;height:2rem;width:2rem;padding:0}:host .locator-content .locator-center button ::ng-deep sn-icon{line-height:1;display:block}:host .locator-content .locator-center button ::ng-deep sn-icon i{line-height:1}:host .result-list-wrapper{height:100%;overflow-y:auto;margin-top:4rem}:host .locator-search{position:absolute;top:3rem;left:0;right:0;padding:.5rem}:host .locator-search .locator-search-container{position:relative;margin:0}:host sn-tab{overflow:hidden}:host sn-tab .locator-content{position:relative;height:100%}:host sn-tab .locator-content ::ng-deep sn-drawer .drawer-content{height:calc(100% - (4px + 8px + 2px))}:host sn-tab .locator-content .locator-center{top:4rem}:host sn-loading{position:absolute!important;background-color:rgba(255,255,255,.75)!important;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:all;touch-action:none}\"]\n            }] }\n];\n/** @nocollapse */\nSnBranchLocatorComponent.ctorParameters = () => [\n    { type: GeoPositionService },\n    { type: SnBranchLocatorService },\n    { type: Platform }\n];\nSnBranchLocatorComponent.propDecorators = {\n    markerSelected: [{ type: Output }],\n    mapBounds: [{ type: Output }],\n    map: [{ type: ViewChild, args: [SnMapDirective,] }],\n    branchMarkerList: [{ type: ViewChildren, args: [AgmMarker,] }],\n    filterView: [{ type: ViewChild, args: [FilterComponent,] }],\n    menuComponent: [{ type: ViewChild, args: [MenuComponent,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/directives/sn-marker/sn-marker.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SnMarkerDirective extends AgmMarker {\n    /**\n     * @param {?} markerManager\n     */\n    constructor(markerManager) {\n        super(markerManager);\n        this.markerManager = markerManager;\n    }\n}\nSnMarkerDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[snMarker]'\n            },] }\n];\n/** @nocollapse */\nSnMarkerDirective.ctorParameters = () => [\n    { type: MarkerManager }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/branch-search/branch-search.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BranchSearchInputComponent {\n    /**\n     * @param {?} mapsAPILoader\n     * @param {?} windowRef\n     * @param {?} env\n     */\n    constructor(mapsAPILoader, windowRef, env) {\n        this.mapsAPILoader = mapsAPILoader;\n        this.windowRef = windowRef;\n        this.env = env;\n        this.reCenter = new EventEmitter();\n        this.placeChange = new EventEmitter();\n        this.callFilter = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.mapsAPILoader.load()\n            .then((/**\n         * @return {?}\n         */\n        () => {\n            this.initSearchBox();\n        }));\n        this.hasFilters = this.env.api.BranchLocator.hasFilters;\n    }\n    /**\n     * @return {?}\n     */\n    initSearchBox() {\n        this.searchBox = new this.windowRef.google.maps.places.SearchBox(this.inputElementRef.nativeElement);\n        this.searchBox.addListener('places_changed', (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const places = this.searchBox.getPlaces();\n            if (places && places.length > 0) {\n                /** @type {?} */\n                const place = places[0];\n                if (Boolean(place.geometry)) {\n                    /** @type {?} */\n                    const lat = place.geometry.location.lat();\n                    /** @type {?} */\n                    const lng = place.geometry.location.lng();\n                    this.placeChange.emit({ lat, lng });\n                }\n            }\n        }));\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    search(event) {\n        this.inputElementRef.nativeElement.focus();\n        this.windowRef.google.maps.event.trigger(this.inputElementRef.nativeElement, 'keydown', {\n            keyCode: 13\n        });\n    }\n}\nBranchSearchInputComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-branch-search',\n                template: \"<div class=\\\"search-box\\\">\\n  <div class=\\\"search-input-wrapper\\\">\\n    <div class=\\\"search-input-button\\\" >\\n      <button (click)=\\\"search($event)\\\" aria-label=\\\"Search\\\">\\n        <sn-icon icon=\\\"sn-FUNC071\\\"></sn-icon>\\n      </button>\\n    </div>\\n    <div class=\\\"search-input-input\\\">\\n      <input\\n        #in\\n        type=\\\"search\\\"\\n        [placeholder]=\\\"'branchlocator.searchinput.placeholder' | translate\\\"\\n        autocomplete=\\\"off\\\"\\n        autocapitalize=\\\"off\\\"\\n        spellcheck=\\\"off\\\"\\n      />\\n    </div>\\n    <div  class=\\\"search-input-center-button\\\">\\n        <button *ngIf=\\\"showReCenter\\\" (click)=\\\"reCenter.emit($event)\\\">\\n            <sn-icon icon=\\\"sn-SYS028\\\"></sn-icon>\\n          </button>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"filter-button-container\\\" *ngIf=\\\"hasFilters\\\">\\n    <button class=\\\"filter-button\\\" (click)=\\\"callFilter.emit($event)\\\" aria-label=\\\"Filter\\\">\\n      <div class=\\\"filter-button-wrapper\\\">\\n        <div class=\\\"filter-button-label\\\">\\n          {{'branchlocator.searchinput.filterbutton' | translate}}\\n        </div>\\n        <div class=\\\"filter-button-icon\\\">\\n          <sn-icon icon=\\\"sn-FUNC035\\\" *ngIf=\\\"!filterCount\\\"></sn-icon>\\n          <div class=\\\"filter-button-notification\\\" *ngIf=\\\"filterCount\\\">\\n            <div class=\\\"filter-button-notification-wrapper\\\">\\n              {{ filterCount }}\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </button>\\n  </div>\\n</div>\\n\",\n                styles: [\"@charset \\\"UTF-8\\\";.display_level_1{line-height:1.2;letter-spacing:0}@media only screen and (min-width:768px){.display_level_1{font-size:3.75rem}}@media only screen and (min-width:375px) and (max-width:768px){.display_level_1{font-size:3.75rem}}@media only screen and (max-width:375px){.display_level_1{font-size:2.625rem}}.display_level_2{line-height:1.2;letter-spacing:0}@media only screen and (min-width:768px){.display_level_2{font-size:3.375rem}}@media only screen and (min-width:375px) and (max-width:768px){.display_level_2{font-size:3.375rem}}@media only screen and (max-width:375px){.display_level_2{font-size:2.25rem}}.display_level_3{line-height:1.2;letter-spacing:0}@media only screen and (min-width:768px){.display_level_3{font-size:3rem}}@media only screen and (min-width:375px) and (max-width:768px){.display_level_3{font-size:3rem}}@media only screen and (max-width:375px){.display_level_3{font-size:2rem}}.heading_level_1,h1{line-height:1.2;letter-spacing:0}@media only screen and (min-width:768px){.heading_level_1,h1{font-size:2.625rem}}@media only screen and (min-width:375px) and (max-width:768px){.heading_level_1,h1{font-size:2.625rem}}@media only screen and (max-width:375px){.heading_level_1,h1{font-size:2rem}}.heading_level_2,h2{line-height:1.2;letter-spacing:0}@media only screen and (min-width:768px){.heading_level_2,h2{font-size:2.25rem}}@media only screen and (min-width:375px) and (max-width:768px){.heading_level_2,h2{font-size:2.25rem}.heading_level_3,h3{font-size:2rem}}.heading_level_3,h3{line-height:1.2;letter-spacing:0}@media only screen and (min-width:768px){.heading_level_3,h3{font-size:2rem}}@media only screen and (max-width:375px){.heading_level_2,h2{font-size:2rem}.heading_level_3,h3{font-size:1.75rem}}.heading_level_4,h4{line-height:1.2;letter-spacing:0}@media only screen and (min-width:768px){.heading_level_4,h4{font-size:1.75rem}}@media only screen and (min-width:375px) and (max-width:768px){.heading_level_4,h4{font-size:1.75rem}.heading_level_5,h5{font-size:1.5rem}}.heading_level_5,h5{line-height:1.2;letter-spacing:0}@media only screen and (min-width:768px){.heading_level_5,h5{font-size:1.5rem}}@media only screen and (max-width:375px){.heading_level_4,h4{font-size:1.5rem}.heading_level_5,h5{font-size:1.25rem}}.heading_level_6,h6{line-height:1.4;letter-spacing:0}@media only screen and (min-width:768px){.heading_level_6,h6{font-size:1.25rem}}@media only screen and (min-width:375px) and (max-width:768px){.heading_level_6,h6{font-size:1.25rem}.body_text_large{font-size:1.125rem}}.body_text_large{line-height:1.5;letter-spacing:0}@media only screen and (min-width:768px){.body_text_large{font-size:1.125rem}}@media only screen and (max-width:375px){.heading_level_6,h6{font-size:1.125rem}.body_text_large{font-size:1rem}}.body_text_medium{font-size:1rem;line-height:1.5;letter-spacing:0}@media only screen and (min-width:768px){.body_text_medium{font-size:1rem}}@media only screen and (min-width:375px) and (max-width:768px){.body_text_medium{font-size:1rem}.body_text_small{font-size:.875rem}}.body_text_small{line-height:1.5;letter-spacing:0}@media only screen and (max-width:375px){.body_text_medium,.body_text_small{font-size:.875rem}}.body_text_xsmall{line-height:1.5;letter-spacing:0}@media only screen and (min-width:768px){.body_text_small{font-size:.875rem}.body_text_xsmall{font-size:.75rem}}@media only screen and (min-width:375px) and (max-width:768px){.body_text_xsmall{font-size:.75rem}}@media only screen and (max-width:375px){.body_text_xsmall{font-size:.875rem}}.search-box{display:-webkit-box;display:flex;background-color:var(--color-primary-white,#fff);border-radius:4px;box-shadow:0 1px 2px 0 var(--color-secondary-mediumgray,#767676);padding-left:8px;padding-right:8px;width:100%;height:48px;line-height:48px}.search-box ::ng-deep sn-icon{display:block}.search-box ::ng-deep sn-icon i{font-size:24px;vertical-align:middle}.search-box .search-input-wrapper{-webkit-box-flex:1;flex:1;display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;flex-wrap:nowrap;-webkit-box-align:center;align-items:center}.search-box .search-input-wrapper .search-input-button{-webkit-box-flex:0;flex:0;height:100%}.search-box .search-input-wrapper .search-input-button button{height:100%;display:block;padding:0}.search-box .search-input-wrapper .search-input-button button ::ng-deep sn-icon i{color:var(--color-primary-santander,#ec0000)}.search-box .search-input-wrapper .search-input-input{margin-left:8px;margin-right:8px;-webkit-box-flex:1;flex:1}.search-box .search-input-wrapper .search-input-input input[type=search]{font-family:inherit!important;height:100%;-webkit-appearance:none;display:block;text-align:left;font-weight:400;font-size:16px;color:currentColor;border:none;padding:0;margin:0;width:100%;text-align:inherit;max-width:100%;background:0 0;outline:0;-webkit-rtl-ordering:logical;-webkit-user-select:text;cursor:auto}.search-box .search-input-wrapper .search-input-input input[type=search]::-ms-clear{display:none;width:0;height:0}.search-box .search-input-wrapper .search-input-input input[type=search]::-ms-reveal{display:none;width:0;height:0}.search-box .search-input-wrapper .search-input-input input[type=search]::-webkit-search-cancel-button,.search-box .search-input-wrapper .search-input-input input[type=search]::-webkit-search-decoration,.search-box .search-input-wrapper .search-input-input input[type=search]::-webkit-search-results-button,.search-box .search-input-wrapper .search-input-input input[type=search]::-webkit-search-results-decoration{display:none}.search-box .search-input-wrapper .search-input-center-button{-webkit-box-flex:0;flex:0;height:100%}.search-box .search-input-wrapper .search-input-center-button button{height:100%;display:block;padding:0;margin-right:8px}.search-box .search-input-wrapper .search-input-center-button button ::ng-deep sn-icon i{color:var(--color-primary-santander,#ec0000)}.search-box .filter-button-container{-webkit-box-flex:0;flex:0;width:auto}.search-box .filter-button-container button.filter-button{-webkit-box-flex:0;flex:0;text-align:right;color:var(--color-secondary-mediumgray,#767676);padding:0;height:100%}.search-box .filter-button-container button.filter-button .filter-button-wrapper{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;flex-wrap:nowrap;-webkit-box-align:center;align-items:center}.search-box .filter-button-container button.filter-button .filter-button-wrapper .filter-button-label{padding-left:6px;border-left:1px solid var(--color-secondary-mediumgray,#767676)}.search-box .filter-button-container button.filter-button .filter-button-wrapper .filter-button-icon{margin-left:6px}.search-box .filter-button-container button.filter-button .filter-button-wrapper .filter-button-icon .filter-button-notification{display:inline-block}.search-box .filter-button-container button.filter-button .filter-button-wrapper .filter-button-icon .filter-button-notification .filter-button-notification-wrapper{border-radius:50%;background-color:var(--color-primary-santander,#ec0000);height:25px;width:25px;color:var(--color-primary-white,#fff);text-align:center}\"]\n            }] }\n];\n/** @nocollapse */\nBranchSearchInputComponent.ctorParameters = () => [\n    { type: MapsAPILoader },\n    { type: WindowRef, decorators: [{ type: Inject, args: ['WINDOW',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [ENV_CONFIG,] }] }\n];\nBranchSearchInputComponent.propDecorators = {\n    showReCenter: [{ type: Input }],\n    reCenter: [{ type: Output }],\n    placeChange: [{ type: Output }],\n    callFilter: [{ type: Output }],\n    filterCount: [{ type: Input }],\n    inputElementRef: [{ type: ViewChild, args: ['in',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/branch-search/branch-search.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nconst ɵ0 = window;\nclass BranchSearchInputModule {\n}\nBranchSearchInputModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [BranchSearchInputComponent],\n                imports: [\n                    CommonModule,\n                    IconModule,\n                    TranslateModule\n                ],\n                exports: [BranchSearchInputComponent],\n                providers: [\n                    { provide: 'WINDOW', useValue: ɵ0 }\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/filter/filter.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FilterModule {\n}\nFilterModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [FilterComponent],\n                imports: [\n                    CommonModule,\n                    ButtonModule,\n                    CheckboxModule,\n                    IconModule,\n                    ReactiveFormsModule,\n                    TranslateModule\n                ],\n                exports: [FilterComponent],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/sn-drawer/drawer-state.enum.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst DrawerState$1 = {\n    Bottom: 0,\n    Docked: 1,\n    Top: 2,\n};\nDrawerState$1[DrawerState$1.Bottom] = 'Bottom';\nDrawerState$1[DrawerState$1.Docked] = 'Docked';\nDrawerState$1[DrawerState$1.Top] = 'Top';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/sn-drawer/drawer.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DrawerCustomHammerConfig extends HammerGestureConfig {\n    constructor() {\n        super(...arguments);\n        this.overrides = {\n            pan: {\n                enable: true,\n                threshold: 0,\n                direction: DIRECTION_VERTICAL\n            }\n        };\n    }\n}\nclass DrawerComponent {\n    /**\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.dockedHeight = 50;\n        this.shouldBounce = true;\n        this.disableDrag = false;\n        this.distanceTop = 0;\n        this.transition = '0.25s ease-in-out';\n        this.state = DrawerState$1.Bottom;\n        this.minimumHeight = 0;\n        this.stateChange = new EventEmitter();\n        this._BOUNCE_DELTA = 30;\n        this.panArea = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    drawerPan(event) {\n        if (!this.disableDrag && this.panArea) {\n            this._handlePan(event);\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    drawerPanStart(event) {\n        /** @type {?} */\n        const header = event.srcEvent.path.find((/**\n         * @param {?} elem\n         * @return {?}\n         */\n        elem => elem instanceof HTMLElement && elem.getAttribute('draggable') !== null));\n        if (header) {\n            this.panArea = true;\n        }\n        if (!this.disableDrag && this.panArea) {\n            this.handlePanStart();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    drawerPanEnd(event) {\n        if (!this.disableDrag && this.panArea) {\n            this.handlePanEnd(event);\n        }\n        this.panArea = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // this.setDrawerState(this.state);\n    }\n    /**\n     * @param {?} children\n     * @return {?}\n     */\n    getHeaderElement(children) {\n        /** @type {?} */\n        const size = children.length;\n        for (let i = 0; i < size; i++) {\n            if (children[i].getAttribute('header') !== null) {\n                return children[i];\n            }\n            if (children[i].children) {\n                return this.getHeaderElement(children[i].children);\n            }\n        }\n    }\n    /**\n     * @param {?} children\n     * @return {?}\n     */\n    setDynamicHeight(children) {\n        /** @type {?} */\n        const header = this.getHeaderElement(children);\n        if (header) {\n            this.dockedHeight = header.offsetHeight;\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.setDynamicHeight(this.contentElement.nativeElement.children);\n            this.setDrawerState(changes.state.currentValue);\n        }), 0);\n    }\n    /**\n     * @param {?} state\n     * @return {?}\n     */\n    setDrawerState(state$$1) {\n        /** @type {?} */\n        const parentHeight = this.elementRef.nativeElement.parentElement.clientHeight;\n        this.state = state$$1;\n        this.renderer.setStyle(this.elementRef.nativeElement, 'transition', this.transition);\n        switch (state$$1) {\n            case DrawerState$1.Bottom:\n                this._setTranslateY('calc(100vh - ' + this.minimumHeight + 'px)');\n                break;\n            case DrawerState$1.Docked:\n                this._setTranslateY((parentHeight - this.dockedHeight) + 'px');\n                break;\n            default:\n                this._setTranslateY(this.distanceTop + 'px');\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setTranslateY(value) {\n        window.requestAnimationFrame((/**\n         * @return {?}\n         */\n        () => {\n            this.renderer.setStyle(this.elementRef.nativeElement, 'transform', 'translateY(' + value + ')');\n            this.renderer.setStyle(this.elementRef.nativeElement, 'height', 'calc(100% - ' + value + ')');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    handlePanStart() {\n        this.startPositionTop = this.elementRef.nativeElement.getBoundingClientRect().top\n            - this.elementRef.nativeElement.parentElement.offsetTop;\n    }\n    /**\n     * @param {?} ev\n     * @return {?}\n     */\n    handlePanEnd(ev) {\n        if (this.shouldBounce && ev.isFinal) {\n            this.renderer.setStyle(this.elementRef.nativeElement, 'transition', this.transition);\n            switch (this.state) {\n                case DrawerState$1.Top:\n                    this._handleTopPanEnd(ev);\n                    break;\n                case DrawerState$1.Docked:\n                    this.handleDockedPanEnd(ev);\n                    break;\n                default:\n                    this._handleBottomPanEnd(ev);\n            }\n        }\n        this.stateChange.emit(this.state);\n    }\n    /**\n     * @param {?} ev\n     * @return {?}\n     */\n    handleDockedPanEnd(ev) {\n        /** @type {?} */\n        const parentHeight = this.elementRef.nativeElement.parentElement.clientHeight;\n        /** @type {?} */\n        const absDeltaY = Math.abs(ev.deltaY);\n        if (absDeltaY > this._BOUNCE_DELTA && ev.deltaY < 0) {\n            this.state = DrawerState$1.Top;\n        }\n        else if (absDeltaY > this._BOUNCE_DELTA && ev.deltaY > 0) {\n            this.state = DrawerState$1.Bottom;\n        }\n        else {\n            this._setTranslateY((parentHeight - this.dockedHeight) + 'px');\n        }\n    }\n    /**\n     * @private\n     * @param {?} ev\n     * @return {?}\n     */\n    _handleTopPanEnd(ev) {\n        if (ev.deltaY > this._BOUNCE_DELTA) {\n            this.state = DrawerState$1.Docked;\n        }\n        else {\n            this._setTranslateY(this.distanceTop + 'px');\n        }\n    }\n    /**\n     * @private\n     * @param {?} ev\n     * @return {?}\n     */\n    _handleBottomPanEnd(ev) {\n        if (-ev.deltaY > this._BOUNCE_DELTA) {\n            this.state = DrawerState$1.Docked;\n        }\n        else {\n            this._setTranslateY('calc(100vh - ' + this.minimumHeight + 'px)');\n        }\n    }\n    /**\n     * @private\n     * @param {?} ev\n     * @return {?}\n     */\n    _handlePan(ev) {\n        /** @type {?} */\n        const pointerY = ev.center.y;\n        /** @type {?} */\n        const parentHeight = this.elementRef.nativeElement.parentElement.clientHeight;\n        this.renderer.setStyle(this.elementRef.nativeElement, 'transition', 'none');\n        if (pointerY > 0 && pointerY < parentHeight) {\n            if (ev.additionalEvent === 'panup' || ev.additionalEvent === 'pandown') {\n                /** @type {?} */\n                const newTop = this.startPositionTop + ev.deltaY;\n                if (newTop >= this.distanceTop) {\n                    this._setTranslateY(newTop + 'px');\n                }\n                else if (newTop < this.distanceTop) {\n                    this._setTranslateY(this.distanceTop + 'px');\n                }\n                if (newTop > parentHeight - this.minimumHeight) {\n                    this._setTranslateY((parentHeight - this.minimumHeight) + 'px');\n                }\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    changeState() {\n        switch (this.state) {\n            case DrawerState$1.Top:\n                this.setDrawerState(DrawerState$1.Docked);\n                break;\n            case DrawerState$1.Docked:\n                this.setDrawerState(DrawerState$1.Top);\n                break;\n            default:\n                break;\n        }\n    }\n}\nDrawerComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-drawer',\n                template: \"<div class=\\\"sn-drawer-content\\\">\\n\\t<div class=\\\"drawer-handle\\\" (click)=\\\"changeState()\\\" draggable>\\n\\t\\t<div class=\\\"handler\\\"></div>\\n\\t</div>\\n\\t<div class=\\\"drawer-content\\\" #content>\\n\\t\\t<ng-content></ng-content>\\n\\t</div>\\n</div>\",\n                providers: [{ provide: HAMMER_GESTURE_CONFIG, useClass: DrawerCustomHammerConfig }],\n                styles: [\":host{position:absolute;width:100%;height:100%;top:0;z-index:1!important;-webkit-transform:translateY(100%);transform:translateY(100%);background-color:#fff;border-top-left-radius:10px;border-top-right-radius:10px;box-shadow:0 -1px 4px 0 #ccc;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host .sn-drawer-content{height:100%}:host .sn-drawer-content .drawer-handle{position:relative;left:0;top:0;height:16px;width:100%;cursor:pointer;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host .sn-drawer-content .drawer-handle .handler{position:absolute;background-color:#d6d6d6;top:8px;left:50%;height:4px;width:24px;border-radius:2px}:host .sn-drawer-content .drawer-content{touch-action:pan-y;max-height:100%}\"]\n            }] }\n];\n/** @nocollapse */\nDrawerComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nDrawerComponent.propDecorators = {\n    contentElement: [{ type: ViewChild, args: ['content',] }],\n    dockedHeight: [{ type: Input }],\n    shouldBounce: [{ type: Input }],\n    disableDrag: [{ type: Input }],\n    distanceTop: [{ type: Input }],\n    transition: [{ type: Input }],\n    state: [{ type: Input }],\n    minimumHeight: [{ type: Input }],\n    stateChange: [{ type: Output }],\n    drawerPan: [{ type: HostListener, args: ['pan', ['$event'],] }],\n    drawerPanStart: [{ type: HostListener, args: ['panstart', ['$event'],] }],\n    drawerPanEnd: [{ type: HostListener, args: ['panend', ['$event'],] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/sn-drawer/drawer.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DrawerModule {\n}\nDrawerModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    DrawerComponent\n                ],\n                imports: [\n                    CommonModule\n                ],\n                exports: [\n                    DrawerComponent\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/sn-drawer/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/branch-list/branch-list.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BranchListComponent {\n    constructor() {\n        this.branchSelected = new EventEmitter();\n    }\n    /**\n     * @param {?} branch\n     * @return {?}\n     */\n    selectBranch(branch) {\n        this.branchSelected.emit(branch);\n    }\n}\nBranchListComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-branch-list',\n                template: \"<sn-option-list [style.display]=\\\" isLoading? 'none' : 'initial'\\\" lines=\\\"full\\\">\\n  <!-- TODO: replace sn-option-item and use button[sn-option-item] for clicable list items -->\\n  <button sn-option-item\\n    *ngFor=\\\"let branch of branchesList\\\"\\n    (click)=\\\"selectBranch(branch)\\\"\\n  >\\n    <div class=\\\"Type-5_Regular-Style name\\\">{{(branch && branch?.name)? branch.name : ''}}{{branch.location?.city? ' - ' + branch?.location?.city: ''}}</div>\\n    <div class=\\\"Type-5_Regular-Style address\\\">\\n      {{ branch?.location?.address }}\\n    </div>\\n    <div right-text class=\\\"Type-5_Regular-Style distance\\\">\\n      {{ branch?.distanceInKm | number: \\\"0.0-2\\\" }} km\\n    </div>\\n  </button>\\n</sn-option-list>\\n<sn-loader *ngIf=\\\"isLoading\\\"></sn-loader>\\n\",\n                styles: [\":host button[sn-option-item]{width:100%}:host button[sn-option-item] .name{font-weight:700;color:var(--color-primary-santander,#ec0000);font-size:1rem;line-height:1.5;padding-bottom:.5rem}:host button[sn-option-item] .address{font-size:1rem;line-height:1.075;font-weight:300;color:var(--color-secondary-mediumgray,#767676)}:host button[sn-option-item] .distance{font-size:1rem;font-weight:300;color:var(--color-secondary-mediumgray,#767676)}\"]\n            }] }\n];\nBranchListComponent.propDecorators = {\n    branchesList: [{ type: Input }],\n    isLoading: [{ type: Input }],\n    branchSelected: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/tabs/sn-tab/sn-tab.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SnTabComponent {\n    /**\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this._label = '';\n        this._onLabelChange$ = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    get label() {\n        return this._label;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set label(value) {\n        if (value !== this._label) {\n            this._label = value || '';\n            this._onLabelChange$.next({ label: this._label, index: this.index });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get index() {\n        return this._index;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    set index(index) {\n        this._index = index;\n        this._id = `sn-tab-${this._index}`;\n    }\n    /**\n     * @return {?}\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * @return {?}\n     */\n    get isTabActive() {\n        return this._active;\n    }\n    /**\n     * @return {?}\n     */\n    onLabelChange() {\n        return this._onLabelChange$.asObservable();\n    }\n    /**\n     * @return {?}\n     */\n    setTabActive() {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'display');\n        this._active = true;\n    }\n    /**\n     * @return {?}\n     */\n    setTabInactive() {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'none');\n        this._active = false;\n    }\n}\nSnTabComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-tab',\n                template: \"<ng-content></ng-content>\\n\",\n                styles: [\":host{-webkit-box-flex:1;flex:1 1 0%}\"]\n            }] }\n];\n/** @nocollapse */\nSnTabComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nSnTabComponent.propDecorators = {\n    label: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/tabs/sn-tab-group/sn-tab-group.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SnTabGroupComponent {\n    constructor() {\n        this._onLabelChange$ = [];\n        this.selectedTab = new EventEmitter();\n        this.tabslabel = [];\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectIndex(value) {\n        // this.selectedIndex = value;\n        if (this._tabs && value >= 0 && value !== null && value < this._tabs.toArray().length) {\n            this.tabClick(value);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get getPosition() {\n        return {\n            left: this.tabslabel ? ((100 / this.calcPosition()) * (this._activeIndex < 2 ? this._activeIndex : 2)) + '%' : 0,\n            width: this.tabslabel ? (100 / this.calcPosition()) + '%' : 0 + '%'\n        };\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.setTabsInitialValue();\n        if (this._tabs && this._tabs.changes) {\n            this._tabs.changes.subscribe((/**\n             * @param {?} res\n             * @return {?}\n             */\n            res => {\n                this.setTabsInitialValue();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    setTabsInitialValue() {\n        this._activeIndex = this.startIndex < this._tabs.toArray().length ? this.startIndex : 0;\n        this.tabslabel = this._tabs.toArray().map((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        (tab, index) => {\n            tab.index = index;\n            this._onLabelChange$.push(tab.onLabelChange().subscribe((/**\n             * @param {?} val\n             * @return {?}\n             */\n            val => {\n                this.tabslabel[val.index] = val.label;\n            })));\n            if (this._activeIndex === index) {\n                tab.setTabActive();\n            }\n            else {\n                tab.setTabInactive();\n            }\n            return tab.label || '';\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._onLabelChange$.forEach((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        (tab) => {\n            tab.unsubscribe();\n        }));\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    tabClick(index) {\n        this._tabs.toArray()[this._activeIndex].setTabInactive();\n        this._activeIndex = index;\n        this._tabs.toArray()[this._activeIndex].setTabActive();\n        this.selectedTab.emit({ tab: this._tabs.toArray()[this._activeIndex], tabIndex: this._activeIndex });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    calcPosition() {\n        return this.tabslabel.length < 3 ? this.tabslabel.length : 3;\n    }\n}\nSnTabGroupComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-tab-group',\n                template: \"<div class=\\\"tab-wrapper\\\">\\n    <ul>\\n        <li *ngFor=\\\"let item of tabslabel; let i=index\\\" (click)=\\\"tabClick(i)\\\">\\n            {{item}}\\n        </li>\\n    </ul>\\n    <div class=\\\"fill\\\" [ngStyle]=\\\"getPosition\\\"></div>\\n</div>\\n\\n<ng-content></ng-content>\\n\",\n                styles: [\":host{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-flow:column nowrap;height:100%}:host .tab-wrapper{-webkit-box-flex:0;flex:0 1 0%;position:relative}:host .tab-wrapper ul{list-style-type:none;-webkit-margin-before:0;margin-block-start:0;-webkit-margin-after:0;margin-block-end:0;-webkit-padding-start:0;padding-inline-start:0;display:-webkit-box;display:flex;-webkit-box-pack:start;justify-content:flex-start;min-height:48px;overflow:auto}:host .tab-wrapper ul::-webkit-scrollbar{display:none}:host .tab-wrapper ul li{-webkit-box-flex:0;flex:0 1 100%;margin:auto;border-right:1px solid grey;cursor:pointer;text-align:center;font-size:.875rem;line-height:1.5;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host .tab-wrapper ul li:last-of-type{border-right:none}@media screen and (min-width:768px){:host .tab-wrapper ul li{padding:0 48px}}:host .tab-wrapper .fill{height:3px;position:absolute;left:0;bottom:0;background-color:red;transition:left 1s;-webkit-transition:left 1s;-moz-transition:left 1s;-ms-transition:left 1s ease;-o-transition:left 1s}\"]\n            }] }\n];\n/** @nocollapse */\nSnTabGroupComponent.ctorParameters = () => [];\nSnTabGroupComponent.propDecorators = {\n    _tabs: [{ type: ContentChildren, args: [SnTabComponent,] }],\n    startIndex: [{ type: Input }],\n    selectIndex: [{ type: Input }],\n    selectedTab: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/tabs/sn-tab.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SnTabModule {\n}\nSnTabModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [SnTabComponent, SnTabGroupComponent],\n                imports: [\n                    CommonModule,\n                    IconModule\n                ],\n                exports: [SnTabComponent, SnTabGroupComponent]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sn-branch-locator.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO: path Update EnvironmentConfigModel\n/**\n * @param {?} http\n * @param {?} path\n * @return {?}\n */\nfunction LocalLoaderFactory(http, path) {\n    return new TranslateHttpLoader(http, path.api.BranchLocator['languages'] + 'assets/i18n/branchlocator/', '.json');\n}\nclass SnBranchLocatorModule {\n}\nSnBranchLocatorModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    SnBranchLocatorComponent,\n                    SnMapDirective,\n                    SnBranchInfoComponent,\n                    SnMarkerDirective,\n                    MenuComponent,\n                    BranchListComponent\n                ],\n                imports: [\n                    CommonModule,\n                    ReactiveFormsModule,\n                    AgmCoreModule,\n                    AgmJsMarkerClustererModule,\n                    OptionListModule,\n                    IconModule,\n                    ButtonModule,\n                    SnTabModule,\n                    BranchSearchInputModule,\n                    OptionListModule,\n                    TranslateModule.forChild({\n                        loader: {\n                            provide: TranslateLoader,\n                            useFactory: LocalLoaderFactory,\n                            deps: [HttpClient, ENV_CONFIG]\n                        }\n                    }),\n                    DrawerModule,\n                    FilterModule,\n                    LoadingModule,\n                    LoaderModule,\n                ],\n                providers: [\n                    TranslateService\n                ],\n                exports: [\n                    SnBranchLocatorComponent,\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: globile-branch-locator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { SnBranchLocatorService, SnBranchLocatorComponent, LocalLoaderFactory, SnBranchLocatorModule, BranchListComponent as ɵk, BranchSearchInputComponent as ɵp, BranchSearchInputModule as ɵo, FilterComponent as ɵc, FilterModule as ɵr, MenuAnimations as ɵe, MenuComponent as ɵd, SnBranchInfoComponent as ɵf, DrawerModule as ɵq, SnTabGroupComponent as ɵn, SnTabModule as ɵl, SnTabComponent as ɵm, SnMapDirective as ɵb, SnMarkerDirective as ɵj, WindowRef as ɵh, FilterService as ɵa, GeoPositionService as ɵg, Platform as ɵi };\n\n//# sourceMappingURL=globile-branch-locator.js.map","// ==ClosureCompiler==\n// @compilation_level ADVANCED_OPTIMIZATIONS\n// @externs_url http://closure-compiler.googlecode.com/svn/trunk/contrib/externs/maps/google_maps_api_v3_3.js\n// ==/ClosureCompiler==\n\n/**\n * @name MarkerClusterer for Google Maps v3\n * @version version 1.0\n * @author Luke Mahe\n * @fileoverview\n * The library creates and manages per-zoom-level clusters for large amounts of\n * markers.\n * <br/>\n * This is a v3 implementation of the\n * <a href=\"http://gmaps-utility-library-dev.googlecode.com/svn/tags/markerclusterer/\"\n * >v2 MarkerClusterer</a>.\n */\n\n/**\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * A Marker Clusterer that clusters markers.\n *\n * @param {google.maps.Map} map The Google map to attach to.\n * @param {Array.<google.maps.Marker>=} opt_markers Optional markers to add to\n *   the cluster.\n * @param {Object=} opt_options support the following options:\n *     'gridSize': (number) The grid size of a cluster in pixels.\n *     'maxZoom': (number) The maximum zoom level that a marker can be part of a\n *                cluster.\n *     'zoomOnClick': (boolean) Whether the default behaviour of clicking on a\n *                    cluster is to zoom into it.\n *     'averageCenter': (boolean) Wether the center of each cluster should be\n *                      the average of all markers in the cluster.\n *     'minimumClusterSize': (number) The minimum number of markers to be in a\n *                           cluster before the markers are hidden and a count\n *                           is shown.\n *     'styles': (object) An object that has style properties:\n *       'url': (string) The image url.\n *       'height': (number) The image height.\n *       'width': (number) The image width.\n *       'anchor': (Array) The anchor position of the label text.\n *       'textColor': (string) The text color.\n *       'textSize': (number) The text size.\n *       'backgroundPosition': (string) The position of the backgound x, y.\n *       'iconAnchor': (Array) The anchor position of the icon x, y.\n * @constructor\n * @extends google.maps.OverlayView\n */\nfunction MarkerClusterer(map, opt_markers, opt_options) {\n  // MarkerClusterer implements google.maps.OverlayView interface. We use the\n  // extend function to extend MarkerClusterer with google.maps.OverlayView\n  // because it might not always be available when the code is defined so we\n  // look for it at the last possible moment. If it doesn't exist now then\n  // there is no point going ahead :)\n  this.extend(MarkerClusterer, google.maps.OverlayView);\n  this.map_ = map;\n\n  /**\n   * @type {Array.<google.maps.Marker>}\n   * @private\n   */\n  this.markers_ = [];\n\n  /**\n   *  @type {Array.<Cluster>}\n   */\n  this.clusters_ = [];\n\n  this.sizes = [53, 56, 66, 78, 90];\n\n  /**\n   * @private\n   */\n  this.styles_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.ready_ = false;\n\n  var options = opt_options || {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.gridSize_ = options['gridSize'] || 60;\n\n  /**\n   * @private\n   */\n  this.minClusterSize_ = options['minimumClusterSize'] || 2;\n\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.maxZoom_ = options['maxZoom'] || null;\n\n  this.styles_ = options['styles'] || [];\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.imagePath_ = options['imagePath'] ||\n      this.MARKER_CLUSTER_IMAGE_PATH_;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.imageExtension_ = options['imageExtension'] ||\n      this.MARKER_CLUSTER_IMAGE_EXTENSION_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.zoomOnClick_ = true;\n\n  if (options['zoomOnClick'] != undefined) {\n    this.zoomOnClick_ = options['zoomOnClick'];\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.averageCenter_ = false;\n\n  if (options['averageCenter'] != undefined) {\n    this.averageCenter_ = options['averageCenter'];\n  }\n\n  this.setupStyles_();\n\n  this.setMap(map);\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevZoom_ = this.map_.getZoom();\n\n  // Add the map event listeners\n  var that = this;\n  google.maps.event.addListener(this.map_, 'zoom_changed', function() {\n    var zoom = that.map_.getZoom();\n\n    if (that.prevZoom_ != zoom) {\n      that.prevZoom_ = zoom;\n      that.resetViewport();\n    }\n  });\n\n  google.maps.event.addListener(this.map_, 'idle', function() {\n    that.redraw();\n  });\n\n  // Finally, add the markers\n  if (opt_markers && opt_markers.length) {\n    this.addMarkers(opt_markers, false);\n  }\n}\n\n\n/**\n * The marker cluster image path.\n *\n * @type {string}\n * @private\n */\nMarkerClusterer.prototype.MARKER_CLUSTER_IMAGE_PATH_ =\n    'http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/' +\n    'images/m';\n\n\n/**\n * The marker cluster image path.\n *\n * @type {string}\n * @private\n */\nMarkerClusterer.prototype.MARKER_CLUSTER_IMAGE_EXTENSION_ = 'png';\n\n\n/**\n * Extends a objects prototype by anothers.\n *\n * @param {Object} obj1 The object to be extended.\n * @param {Object} obj2 The object to extend with.\n * @return {Object} The new extended object.\n * @ignore\n */\nMarkerClusterer.prototype.extend = function(obj1, obj2) {\n  return (function(object) {\n    for (var property in object.prototype) {\n      this.prototype[property] = object.prototype[property];\n    }\n    return this;\n  }).apply(obj1, [obj2]);\n};\n\n\n/**\n * Implementaion of the interface method.\n * @ignore\n */\nMarkerClusterer.prototype.onAdd = function() {\n  this.setReady_(true);\n};\n\n/**\n * Implementaion of the interface method.\n * @ignore\n */\nMarkerClusterer.prototype.draw = function() {};\n\n/**\n * Sets up the styles object.\n *\n * @private\n */\nMarkerClusterer.prototype.setupStyles_ = function() {\n  if (this.styles_.length) {\n    return;\n  }\n\n  for (var i = 0, size; size = this.sizes[i]; i++) {\n    this.styles_.push({\n      url: this.imagePath_ + (i + 1) + '.' + this.imageExtension_,\n      height: size,\n      width: size\n    });\n  }\n};\n\n/**\n *  Fit the map to the bounds of the markers in the clusterer.\n */\nMarkerClusterer.prototype.fitMapToMarkers = function() {\n  var markers = this.getMarkers();\n  var bounds = new google.maps.LatLngBounds();\n  for (var i = 0, marker; marker = markers[i]; i++) {\n    bounds.extend(marker.getPosition());\n  }\n\n  this.map_.fitBounds(bounds);\n};\n\n\n/**\n *  Sets the styles.\n *\n *  @param {Object} styles The style to set.\n */\nMarkerClusterer.prototype.setStyles = function(styles) {\n  this.styles_ = styles;\n};\n\n\n/**\n *  Gets the styles.\n *\n *  @return {Object} The styles object.\n */\nMarkerClusterer.prototype.getStyles = function() {\n  return this.styles_;\n};\n\n\n/**\n * Whether zoom on click is set.\n *\n * @return {boolean} True if zoomOnClick_ is set.\n */\nMarkerClusterer.prototype.isZoomOnClick = function() {\n  return this.zoomOnClick_;\n};\n\n/**\n * Whether average center is set.\n *\n * @return {boolean} True if averageCenter_ is set.\n */\nMarkerClusterer.prototype.isAverageCenter = function() {\n  return this.averageCenter_;\n};\n\n\n/**\n *  Returns the array of markers in the clusterer.\n *\n *  @return {Array.<google.maps.Marker>} The markers.\n */\nMarkerClusterer.prototype.getMarkers = function() {\n  return this.markers_;\n};\n\n\n/**\n *  Returns the number of markers in the clusterer\n *\n *  @return {Number} The number of markers.\n */\nMarkerClusterer.prototype.getTotalMarkers = function() {\n  return this.markers_.length;\n};\n\n\n/**\n *  Sets the max zoom for the clusterer.\n *\n *  @param {number} maxZoom The max zoom level.\n */\nMarkerClusterer.prototype.setMaxZoom = function(maxZoom) {\n  this.maxZoom_ = maxZoom;\n};\n\n\n/**\n *  Gets the max zoom for the clusterer.\n *\n *  @return {number} The max zoom level.\n */\nMarkerClusterer.prototype.getMaxZoom = function() {\n  return this.maxZoom_;\n};\n\n\n/**\n *  The function for calculating the cluster icon image.\n *\n *  @param {Array.<google.maps.Marker>} markers The markers in the clusterer.\n *  @param {number} numStyles The number of styles available.\n *  @return {Object} A object properties: 'text' (string) and 'index' (number).\n *  @private\n */\nMarkerClusterer.prototype.calculator_ = function(markers, numStyles) {\n  var index = 0;\n  var count = markers.length;\n  var dv = count;\n  while (dv !== 0) {\n    dv = parseInt(dv / 10, 10);\n    index++;\n  }\n\n  index = Math.min(index, numStyles);\n  return {\n    text: count,\n    index: index\n  };\n};\n\n\n/**\n * Set the calculator function.\n *\n * @param {function(Array, number)} calculator The function to set as the\n *     calculator. The function should return a object properties:\n *     'text' (string) and 'index' (number).\n *\n */\nMarkerClusterer.prototype.setCalculator = function(calculator) {\n  this.calculator_ = calculator;\n};\n\n\n/**\n * Get the calculator function.\n *\n * @return {function(Array, number)} the calculator function.\n */\nMarkerClusterer.prototype.getCalculator = function() {\n  return this.calculator_;\n};\n\n\n/**\n * Add an array of markers to the clusterer.\n *\n * @param {Array.<google.maps.Marker>} markers The markers to add.\n * @param {boolean=} opt_nodraw Whether to redraw the clusters.\n */\nMarkerClusterer.prototype.addMarkers = function(markers, opt_nodraw) {\n  for (var i = 0, marker; marker = markers[i]; i++) {\n    this.pushMarkerTo_(marker);\n  }\n  if (!opt_nodraw) {\n    this.redraw();\n  }\n};\n\n\n/**\n * Pushes a marker to the clusterer.\n *\n * @param {google.maps.Marker} marker The marker to add.\n * @private\n */\nMarkerClusterer.prototype.pushMarkerTo_ = function(marker) {\n  marker.isAdded = false;\n  if (marker['draggable']) {\n    // If the marker is draggable add a listener so we update the clusters on\n    // the drag end.\n    var that = this;\n    google.maps.event.addListener(marker, 'dragend', function() {\n      marker.isAdded = false;\n      that.repaint();\n    });\n  }\n  this.markers_.push(marker);\n};\n\n\n/**\n * Adds a marker to the clusterer and redraws if needed.\n *\n * @param {google.maps.Marker} marker The marker to add.\n * @param {boolean=} opt_nodraw Whether to redraw the clusters.\n */\nMarkerClusterer.prototype.addMarker = function(marker, opt_nodraw) {\n  this.pushMarkerTo_(marker);\n  if (!opt_nodraw) {\n    this.redraw();\n  }\n};\n\n\n/**\n * Removes a marker and returns true if removed, false if not\n *\n * @param {google.maps.Marker} marker The marker to remove\n * @return {boolean} Whether the marker was removed or not\n * @private\n */\nMarkerClusterer.prototype.removeMarker_ = function(marker) {\n  var index = -1;\n  if (this.markers_.indexOf) {\n    index = this.markers_.indexOf(marker);\n  } else {\n    for (var i = 0, m; m = this.markers_[i]; i++) {\n      if (m == marker) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  if (index == -1) {\n    // Marker is not in our list of markers.\n    return false;\n  }\n\n  marker.setMap(null);\n\n  this.markers_.splice(index, 1);\n\n  return true;\n};\n\n\n/**\n * Remove a marker from the cluster.\n *\n * @param {google.maps.Marker} marker The marker to remove.\n * @param {boolean=} opt_nodraw Optional boolean to force no redraw.\n * @return {boolean} True if the marker was removed.\n */\nMarkerClusterer.prototype.removeMarker = function(marker, opt_nodraw) {\n  var removed = this.removeMarker_(marker);\n\n  if (!opt_nodraw && removed) {\n    this.resetViewport();\n    this.redraw();\n    return true;\n  } else {\n   return false;\n  }\n};\n\n\n/**\n * Removes an array of markers from the cluster.\n *\n * @param {Array.<google.maps.Marker>} markers The markers to remove.\n * @param {boolean=} opt_nodraw Optional boolean to force no redraw.\n */\nMarkerClusterer.prototype.removeMarkers = function(markers, opt_nodraw) {\n  var removed = false;\n\n  for (var i = 0, marker; marker = markers[i]; i++) {\n    var r = this.removeMarker_(marker);\n    removed = removed || r;\n  }\n\n  if (!opt_nodraw && removed) {\n    this.resetViewport();\n    this.redraw();\n    return true;\n  }\n};\n\n\n/**\n * Sets the clusterer's ready state.\n *\n * @param {boolean} ready The state.\n * @private\n */\nMarkerClusterer.prototype.setReady_ = function(ready) {\n  if (!this.ready_) {\n    this.ready_ = ready;\n    this.createClusters_();\n  }\n};\n\n\n/**\n * Returns the number of clusters in the clusterer.\n *\n * @return {number} The number of clusters.\n */\nMarkerClusterer.prototype.getTotalClusters = function() {\n  return this.clusters_.length;\n};\n\n\n/**\n * Returns the google map that the clusterer is associated with.\n *\n * @return {google.maps.Map} The map.\n */\nMarkerClusterer.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Sets the google map that the clusterer is associated with.\n *\n * @param {google.maps.Map} map The map.\n */\nMarkerClusterer.prototype.setMap = function(map) {\n  this.map_ = map;\n};\n\n\n/**\n * Returns the size of the grid.\n *\n * @return {number} The grid size.\n */\nMarkerClusterer.prototype.getGridSize = function() {\n  return this.gridSize_;\n};\n\n\n/**\n * Sets the size of the grid.\n *\n * @param {number} size The grid size.\n */\nMarkerClusterer.prototype.setGridSize = function(size) {\n  this.gridSize_ = size;\n};\n\n\n/**\n * Returns the min cluster size.\n *\n * @return {number} The grid size.\n */\nMarkerClusterer.prototype.getMinClusterSize = function() {\n  return this.minClusterSize_;\n};\n\n/**\n * Sets the min cluster size.\n *\n * @param {number} size The grid size.\n */\nMarkerClusterer.prototype.setMinClusterSize = function(size) {\n  this.minClusterSize_ = size;\n};\n\n\n/**\n * Extends a bounds object by the grid size.\n *\n * @param {google.maps.LatLngBounds} bounds The bounds to extend.\n * @return {google.maps.LatLngBounds} The extended bounds.\n */\nMarkerClusterer.prototype.getExtendedBounds = function(bounds) {\n  var projection = this.getProjection();\n\n  // Turn the bounds into latlng.\n  var tr = new google.maps.LatLng(bounds.getNorthEast().lat(),\n      bounds.getNorthEast().lng());\n  var bl = new google.maps.LatLng(bounds.getSouthWest().lat(),\n      bounds.getSouthWest().lng());\n\n  // Convert the points to pixels and the extend out by the grid size.\n  var trPix = projection.fromLatLngToDivPixel(tr);\n  trPix.x += this.gridSize_;\n  trPix.y -= this.gridSize_;\n\n  var blPix = projection.fromLatLngToDivPixel(bl);\n  blPix.x -= this.gridSize_;\n  blPix.y += this.gridSize_;\n\n  // Convert the pixel points back to LatLng\n  var ne = projection.fromDivPixelToLatLng(trPix);\n  var sw = projection.fromDivPixelToLatLng(blPix);\n\n  // Extend the bounds to contain the new bounds.\n  bounds.extend(ne);\n  bounds.extend(sw);\n\n  return bounds;\n};\n\n\n/**\n * Determins if a marker is contained in a bounds.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @param {google.maps.LatLngBounds} bounds The bounds to check against.\n * @return {boolean} True if the marker is in the bounds.\n * @private\n */\nMarkerClusterer.prototype.isMarkerInBounds_ = function(marker, bounds) {\n  return bounds.contains(marker.getPosition());\n};\n\n\n/**\n * Clears all clusters and markers from the clusterer.\n */\nMarkerClusterer.prototype.clearMarkers = function() {\n  this.resetViewport(true);\n\n  // Set the markers a empty array.\n  this.markers_ = [];\n};\n\n\n/**\n * Clears all existing clusters and recreates them.\n * @param {boolean} opt_hide To also hide the marker.\n */\nMarkerClusterer.prototype.resetViewport = function(opt_hide) {\n  // Remove all the clusters\n  for (var i = 0, cluster; cluster = this.clusters_[i]; i++) {\n    cluster.remove();\n  }\n\n  // Reset the markers to not be added and to be invisible.\n  for (var i = 0, marker; marker = this.markers_[i]; i++) {\n    marker.isAdded = false;\n    if (opt_hide) {\n      marker.setMap(null);\n    }\n  }\n\n  this.clusters_ = [];\n};\n\n/**\n *\n */\nMarkerClusterer.prototype.repaint = function() {\n  var oldClusters = this.clusters_.slice();\n  this.clusters_.length = 0;\n  this.resetViewport();\n  this.redraw();\n\n  // Remove the old clusters.\n  // Do it in a timeout so the other clusters have been drawn first.\n  window.setTimeout(function() {\n    for (var i = 0, cluster; cluster = oldClusters[i]; i++) {\n      cluster.remove();\n    }\n  }, 0);\n};\n\n\n/**\n * Redraws the clusters.\n */\nMarkerClusterer.prototype.redraw = function() {\n  this.createClusters_();\n};\n\n\n/**\n * Calculates the distance between two latlng locations in km.\n * @see http://www.movable-type.co.uk/scripts/latlong.html\n *\n * @param {google.maps.LatLng} p1 The first lat lng point.\n * @param {google.maps.LatLng} p2 The second lat lng point.\n * @return {number} The distance between the two points in km.\n * @private\n*/\nMarkerClusterer.prototype.distanceBetweenPoints_ = function(p1, p2) {\n  if (!p1 || !p2) {\n    return 0;\n  }\n\n  var R = 6371; // Radius of the Earth in km\n  var dLat = (p2.lat() - p1.lat()) * Math.PI / 180;\n  var dLon = (p2.lng() - p1.lng()) * Math.PI / 180;\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) *\n    Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  return d;\n};\n\n\n/**\n * Add a marker to a cluster, or creates a new cluster.\n *\n * @param {google.maps.Marker} marker The marker to add.\n * @private\n */\nMarkerClusterer.prototype.addToClosestCluster_ = function(marker) {\n  var distance = 40000; // Some large number\n  var clusterToAddTo = null;\n  var pos = marker.getPosition();\n  for (var i = 0, cluster; cluster = this.clusters_[i]; i++) {\n    var center = cluster.getCenter();\n    if (center) {\n      var d = this.distanceBetweenPoints_(center, marker.getPosition());\n      if (d < distance) {\n        distance = d;\n        clusterToAddTo = cluster;\n      }\n    }\n  }\n\n  if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n    clusterToAddTo.addMarker(marker);\n  } else {\n    var cluster = new Cluster(this);\n    cluster.addMarker(marker);\n    this.clusters_.push(cluster);\n  }\n};\n\n\n/**\n * Creates the clusters.\n *\n * @private\n */\nMarkerClusterer.prototype.createClusters_ = function() {\n  if (!this.ready_) {\n    return;\n  }\n\n  // Get our current map view bounds.\n  // Create a new bounds object so we don't affect the map.\n  var mapBounds = new google.maps.LatLngBounds(this.map_.getBounds().getSouthWest(),\n      this.map_.getBounds().getNorthEast());\n  var bounds = this.getExtendedBounds(mapBounds);\n\n  for (var i = 0, marker; marker = this.markers_[i]; i++) {\n    if (!marker.isAdded && this.isMarkerInBounds_(marker, bounds)) {\n      this.addToClosestCluster_(marker);\n    }\n  }\n};\n\n\n/**\n * A cluster that contains markers.\n *\n * @param {MarkerClusterer} markerClusterer The markerclusterer that this\n *     cluster is associated with.\n * @constructor\n * @ignore\n */\nfunction Cluster(markerClusterer) {\n  this.markerClusterer_ = markerClusterer;\n  this.map_ = markerClusterer.getMap();\n  this.gridSize_ = markerClusterer.getGridSize();\n  this.minClusterSize_ = markerClusterer.getMinClusterSize();\n  this.averageCenter_ = markerClusterer.isAverageCenter();\n  this.center_ = null;\n  this.markers_ = [];\n  this.bounds_ = null;\n  this.clusterIcon_ = new ClusterIcon(this, markerClusterer.getStyles(),\n      markerClusterer.getGridSize());\n}\n\n/**\n * Determins if a marker is already added to the cluster.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @return {boolean} True if the marker is already added.\n */\nCluster.prototype.isMarkerAlreadyAdded = function(marker) {\n  if (this.markers_.indexOf) {\n    return this.markers_.indexOf(marker) != -1;\n  } else {\n    for (var i = 0, m; m = this.markers_[i]; i++) {\n      if (m == marker) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * Add a marker the cluster.\n *\n * @param {google.maps.Marker} marker The marker to add.\n * @return {boolean} True if the marker was added.\n */\nCluster.prototype.addMarker = function(marker) {\n  if (this.isMarkerAlreadyAdded(marker)) {\n    return false;\n  }\n\n  if (!this.center_) {\n    this.center_ = marker.getPosition();\n    this.calculateBounds_();\n  } else {\n    if (this.averageCenter_) {\n      var l = this.markers_.length + 1;\n      var lat = (this.center_.lat() * (l-1) + marker.getPosition().lat()) / l;\n      var lng = (this.center_.lng() * (l-1) + marker.getPosition().lng()) / l;\n      this.center_ = new google.maps.LatLng(lat, lng);\n      this.calculateBounds_();\n    }\n  }\n\n  marker.isAdded = true;\n  this.markers_.push(marker);\n\n  var len = this.markers_.length;\n  if (len < this.minClusterSize_ && marker.getMap() != this.map_) {\n    // Min cluster size not reached so show the marker.\n    marker.setMap(this.map_);\n  }\n\n  if (len == this.minClusterSize_) {\n    // Hide the markers that were showing.\n    for (var i = 0; i < len; i++) {\n      this.markers_[i].setMap(null);\n    }\n  }\n\n  if (len >= this.minClusterSize_) {\n    marker.setMap(null);\n  }\n\n  this.updateIcon();\n  return true;\n};\n\n\n/**\n * Returns the marker clusterer that the cluster is associated with.\n *\n * @return {MarkerClusterer} The associated marker clusterer.\n */\nCluster.prototype.getMarkerClusterer = function() {\n  return this.markerClusterer_;\n};\n\n\n/**\n * Returns the bounds of the cluster.\n *\n * @return {google.maps.LatLngBounds} the cluster bounds.\n */\nCluster.prototype.getBounds = function() {\n  var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n  var markers = this.getMarkers();\n  for (var i = 0, marker; marker = markers[i]; i++) {\n    bounds.extend(marker.getPosition());\n  }\n  return bounds;\n};\n\n\n/**\n * Removes the cluster\n */\nCluster.prototype.remove = function() {\n  this.clusterIcon_.remove();\n  this.markers_.length = 0;\n  delete this.markers_;\n};\n\n\n/**\n * Returns the center of the cluster.\n *\n * @return {number} The cluster center.\n */\nCluster.prototype.getSize = function() {\n  return this.markers_.length;\n};\n\n\n/**\n * Returns the center of the cluster.\n *\n * @return {Array.<google.maps.Marker>} The cluster center.\n */\nCluster.prototype.getMarkers = function() {\n  return this.markers_;\n};\n\n\n/**\n * Returns the center of the cluster.\n *\n * @return {google.maps.LatLng} The cluster center.\n */\nCluster.prototype.getCenter = function() {\n  return this.center_;\n};\n\n\n/**\n * Calculated the extended bounds of the cluster with the grid.\n *\n * @private\n */\nCluster.prototype.calculateBounds_ = function() {\n  var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n  this.bounds_ = this.markerClusterer_.getExtendedBounds(bounds);\n};\n\n\n/**\n * Determines if a marker lies in the clusters bounds.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @return {boolean} True if the marker lies in the bounds.\n */\nCluster.prototype.isMarkerInClusterBounds = function(marker) {\n  return this.bounds_.contains(marker.getPosition());\n};\n\n\n/**\n * Returns the map that the cluster is associated with.\n *\n * @return {google.maps.Map} The map.\n */\nCluster.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Updates the cluster icon\n */\nCluster.prototype.updateIcon = function() {\n  var zoom = this.map_.getZoom();\n  var mz = this.markerClusterer_.getMaxZoom();\n\n  if (mz && zoom > mz) {\n    // The zoom is greater than our max zoom so show all the markers in cluster.\n    for (var i = 0, marker; marker = this.markers_[i]; i++) {\n      marker.setMap(this.map_);\n    }\n    return;\n  }\n\n  if (this.markers_.length < this.minClusterSize_) {\n    // Min cluster size not yet reached.\n    this.clusterIcon_.hide();\n    return;\n  }\n\n  var numStyles = this.markerClusterer_.getStyles().length;\n  var sums = this.markerClusterer_.getCalculator()(this.markers_, numStyles);\n  this.clusterIcon_.setCenter(this.center_);\n  this.clusterIcon_.setSums(sums);\n  this.clusterIcon_.show();\n};\n\n\n/**\n * A cluster icon\n *\n * @param {Cluster} cluster The cluster to be associated with.\n * @param {Object} styles An object that has style properties:\n *     'url': (string) The image url.\n *     'height': (number) The image height.\n *     'width': (number) The image width.\n *     'anchor': (Array) The anchor position of the label text.\n *     'textColor': (string) The text color.\n *     'textSize': (number) The text size.\n *     'backgroundPosition: (string) The background postition x, y.\n * @param {number=} opt_padding Optional padding to apply to the cluster icon.\n * @constructor\n * @extends google.maps.OverlayView\n * @ignore\n */\nfunction ClusterIcon(cluster, styles, opt_padding) {\n  cluster.getMarkerClusterer().extend(ClusterIcon, google.maps.OverlayView);\n\n  this.styles_ = styles;\n  this.padding_ = opt_padding || 0;\n  this.cluster_ = cluster;\n  this.center_ = null;\n  this.map_ = cluster.getMap();\n  this.div_ = null;\n  this.sums_ = null;\n  this.visible_ = false;\n\n  this.setMap(this.map_);\n}\n\n\n/**\n * Triggers the clusterclick event and zoom's if the option is set.\n */\nClusterIcon.prototype.triggerClusterClick = function() {\n  var markerClusterer = this.cluster_.getMarkerClusterer();\n\n  // Trigger the clusterclick event.\n  google.maps.event.trigger(markerClusterer, 'clusterclick', this.cluster_);\n\n  if (markerClusterer.isZoomOnClick()) {\n    // Zoom into the cluster.\n    this.map_.fitBounds(this.cluster_.getBounds());\n  }\n};\n\n\n/**\n * Adding the cluster icon to the dom.\n * @ignore\n */\nClusterIcon.prototype.onAdd = function() {\n  this.div_ = document.createElement('DIV');\n  if (this.visible_) {\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.cssText = this.createCss(pos);\n    this.div_.innerHTML = this.sums_.text;\n  }\n\n  var panes = this.getPanes();\n  panes.overlayMouseTarget.appendChild(this.div_);\n\n  var that = this;\n  google.maps.event.addDomListener(this.div_, 'click', function() {\n    that.triggerClusterClick();\n  });\n};\n\n\n/**\n * Returns the position to place the div dending on the latlng.\n *\n * @param {google.maps.LatLng} latlng The position in latlng.\n * @return {google.maps.Point} The position in pixels.\n * @private\n */\nClusterIcon.prototype.getPosFromLatLng_ = function(latlng) {\n  var pos = this.getProjection().fromLatLngToDivPixel(latlng);\n\n  if (typeof this.iconAnchor_ === 'object' && this.iconAnchor_.length === 2) {\n    pos.x -= this.iconAnchor_[0];\n    pos.y -= this.iconAnchor_[1];\n  } else {\n    pos.x -= parseInt(this.width_ / 2, 10);\n    pos.y -= parseInt(this.height_ / 2, 10);\n  }\n  return pos;\n};\n\n\n/**\n * Draw the icon.\n * @ignore\n */\nClusterIcon.prototype.draw = function() {\n  if (this.visible_) {\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.top = pos.y + 'px';\n    this.div_.style.left = pos.x + 'px';\n  }\n};\n\n\n/**\n * Hide the icon.\n */\nClusterIcon.prototype.hide = function() {\n  if (this.div_) {\n    this.div_.style.display = 'none';\n  }\n  this.visible_ = false;\n};\n\n\n/**\n * Position and show the icon.\n */\nClusterIcon.prototype.show = function() {\n  if (this.div_) {\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.cssText = this.createCss(pos);\n    this.div_.style.display = '';\n  }\n  this.visible_ = true;\n};\n\n\n/**\n * Remove the icon from the map\n */\nClusterIcon.prototype.remove = function() {\n  this.setMap(null);\n};\n\n\n/**\n * Implementation of the onRemove interface.\n * @ignore\n */\nClusterIcon.prototype.onRemove = function() {\n  if (this.div_ && this.div_.parentNode) {\n    this.hide();\n    this.div_.parentNode.removeChild(this.div_);\n    this.div_ = null;\n  }\n};\n\n\n/**\n * Set the sums of the icon.\n *\n * @param {Object} sums The sums containing:\n *   'text': (string) The text to display in the icon.\n *   'index': (number) The style index of the icon.\n */\nClusterIcon.prototype.setSums = function(sums) {\n  this.sums_ = sums;\n  this.text_ = sums.text;\n  this.index_ = sums.index;\n  if (this.div_) {\n    this.div_.innerHTML = sums.text;\n  }\n\n  this.useStyle();\n};\n\n\n/**\n * Sets the icon to the the styles.\n */\nClusterIcon.prototype.useStyle = function() {\n  var index = Math.max(0, this.sums_.index - 1);\n  index = Math.min(this.styles_.length - 1, index);\n  var style = this.styles_[index];\n  this.url_ = style['url'];\n  this.height_ = style['height'];\n  this.width_ = style['width'];\n  this.textColor_ = style['textColor'];\n  this.anchor_ = style['anchor'];\n  this.textSize_ = style['textSize'];\n  this.backgroundPosition_ = style['backgroundPosition'];\n  this.iconAnchor_ = style['iconAnchor'];\n};\n\n\n/**\n * Sets the center of the icon.\n *\n * @param {google.maps.LatLng} center The latlng to set as the center.\n */\nClusterIcon.prototype.setCenter = function(center) {\n  this.center_ = center;\n};\n\n\n/**\n * Create the css text based on the position of the icon.\n *\n * @param {google.maps.Point} pos The position.\n * @return {string} The css style text.\n */\nClusterIcon.prototype.createCss = function(pos) {\n  var style = [];\n  style.push('background-image:url(' + this.url_ + ');');\n  var backgroundPosition = this.backgroundPosition_ ? this.backgroundPosition_ : '0 0';\n  style.push('background-position:' + backgroundPosition + ';');\n\n  if (typeof this.anchor_ === 'object') {\n    if (typeof this.anchor_[0] === 'number' && this.anchor_[0] > 0 &&\n        this.anchor_[0] < this.height_) {\n      style.push('height:' + (this.height_ - this.anchor_[0]) +\n          'px; padding-top:' + this.anchor_[0] + 'px;');\n    } else if (typeof this.anchor_[0] === 'number' && this.anchor_[0] < 0 &&\n        -this.anchor_[0] < this.height_) {\n      style.push('height:' + this.height_ + 'px; line-height:' + (this.height_ + this.anchor_[0]) +\n          'px;');\n    } else {\n      style.push('height:' + this.height_ + 'px; line-height:' + this.height_ +\n          'px;');\n    }\n    if (typeof this.anchor_[1] === 'number' && this.anchor_[1] > 0 &&\n        this.anchor_[1] < this.width_) {\n      style.push('width:' + (this.width_ - this.anchor_[1]) +\n          'px; padding-left:' + this.anchor_[1] + 'px;');\n    } else {\n      style.push('width:' + this.width_ + 'px; text-align:center;');\n    }\n  } else {\n    style.push('height:' + this.height_ + 'px; line-height:' +\n        this.height_ + 'px; width:' + this.width_ + 'px; text-align:center;');\n  }\n\n  var txtColor = this.textColor_ ? this.textColor_ : 'black';\n  var txtSize = this.textSize_ ? this.textSize_ : 11;\n\n  style.push('cursor:pointer; top:' + pos.y + 'px; left:' +\n      pos.x + 'px; color:' + txtColor + '; position:absolute; font-size:' +\n      txtSize + 'px; font-family:Arial,sans-serif; font-weight:bold');\n  return style.join('');\n};\n\n\n// Export Symbols for Closure\n// If you are not going to compile with closure then you can remove the\n// code below.\nwindow['MarkerClusterer'] = MarkerClusterer;\nMarkerClusterer.prototype['addMarker'] = MarkerClusterer.prototype.addMarker;\nMarkerClusterer.prototype['addMarkers'] = MarkerClusterer.prototype.addMarkers;\nMarkerClusterer.prototype['clearMarkers'] =\n    MarkerClusterer.prototype.clearMarkers;\nMarkerClusterer.prototype['fitMapToMarkers'] =\n    MarkerClusterer.prototype.fitMapToMarkers;\nMarkerClusterer.prototype['getCalculator'] =\n    MarkerClusterer.prototype.getCalculator;\nMarkerClusterer.prototype['getGridSize'] =\n    MarkerClusterer.prototype.getGridSize;\nMarkerClusterer.prototype['getExtendedBounds'] =\n    MarkerClusterer.prototype.getExtendedBounds;\nMarkerClusterer.prototype['getMap'] = MarkerClusterer.prototype.getMap;\nMarkerClusterer.prototype['getMarkers'] = MarkerClusterer.prototype.getMarkers;\nMarkerClusterer.prototype['getMaxZoom'] = MarkerClusterer.prototype.getMaxZoom;\nMarkerClusterer.prototype['getStyles'] = MarkerClusterer.prototype.getStyles;\nMarkerClusterer.prototype['getTotalClusters'] =\n    MarkerClusterer.prototype.getTotalClusters;\nMarkerClusterer.prototype['getTotalMarkers'] =\n    MarkerClusterer.prototype.getTotalMarkers;\nMarkerClusterer.prototype['redraw'] = MarkerClusterer.prototype.redraw;\nMarkerClusterer.prototype['removeMarker'] =\n    MarkerClusterer.prototype.removeMarker;\nMarkerClusterer.prototype['removeMarkers'] =\n    MarkerClusterer.prototype.removeMarkers;\nMarkerClusterer.prototype['resetViewport'] =\n    MarkerClusterer.prototype.resetViewport;\nMarkerClusterer.prototype['repaint'] =\n    MarkerClusterer.prototype.repaint;\nMarkerClusterer.prototype['setCalculator'] =\n    MarkerClusterer.prototype.setCalculator;\nMarkerClusterer.prototype['setGridSize'] =\n    MarkerClusterer.prototype.setGridSize;\nMarkerClusterer.prototype['setMaxZoom'] =\n    MarkerClusterer.prototype.setMaxZoom;\nMarkerClusterer.prototype['onAdd'] = MarkerClusterer.prototype.onAdd;\nMarkerClusterer.prototype['draw'] = MarkerClusterer.prototype.draw;\n\nCluster.prototype['getCenter'] = Cluster.prototype.getCenter;\nCluster.prototype['getSize'] = Cluster.prototype.getSize;\nCluster.prototype['getMarkers'] = Cluster.prototype.getMarkers;\n\nClusterIcon.prototype['onAdd'] = ClusterIcon.prototype.onAdd;\nClusterIcon.prototype['draw'] = ClusterIcon.prototype.draw;\nClusterIcon.prototype['onRemove'] = ClusterIcon.prototype.onRemove;\n","module.exports = \"<sn-branch-locator></sn-branch-locator>\"","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'sn-branch-locator-wrapper',\n  templateUrl: './branch-locator-wrapper.component.html',\n})\nexport class BranchLocatorWrapperComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SnBranchLocatorModule } from '@globile/branch-locator';\n\nimport { BranchLocatorWrapperComponent } from './branch-locator-wrapper.component';\nimport { BranchLocatorRoutingModule } from './branch-locator-wrapper.routing.module';\n\n\n\n\n@NgModule({\n  declarations: [\n    BranchLocatorWrapperComponent\n  ],\n  imports: [\n    CommonModule,\n    SnBranchLocatorModule,\n    BranchLocatorRoutingModule\n  ],\n})\n\nexport class BranchLocatorModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BranchLocatorWrapperComponent } from './branch-locator-wrapper.component';\n\n\n\n\nconst routes: Routes = [\n  {\n    path: '', component: BranchLocatorWrapperComponent,\n    data: {\n      header: {\n        display: false,\n        left: { icon: 'sn-SYS020', route: 'back'},\n        title: {label: 'Branch Locator'},\n      },\n      footer: {\n          display: false\n      },\n      showChatbot: false\n    }\n  },\n  { path: '**', redirectTo: '/' },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BranchLocatorRoutingModule {}\n"],"sourceRoot":""}