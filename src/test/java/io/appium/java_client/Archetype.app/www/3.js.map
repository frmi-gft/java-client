{"version":3,"sources":["webpack:///./node_modules/@globile/global-position/fesm2015/globile-global-position.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AACM;AACS;AACnC;AACoC;AACkE;AACrB;AACrD;AACiB;AACjC;AACV;AACwE;;AAEvH;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,2BAA2B,+DAAU,EAAE,2BAA2B;AAClE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,KAAK,OAAO,yDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAU;AACtB;AACA,uDAAuD,uEAAgB,EAAE,gDAAgD,8BAA8B,6DAAM,CAAC,+DAAU,GAAG,EAAE,gDAAgD;;AAE7N;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,sCAAsC,gBAAgB,sBAAsB,kEAAW;AACvF;AACA;AACA;AACA,KAAK,OAAO,yDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,0BAA0B;AAC/B,KAAK,OAAO,gFAAuB;AACnC;AACA,2DAA2D,uEAAgB,EAAE,oDAAoD,kCAAkC,6DAAM,qBAAqB,6DAAM,CAAC,gFAAuB,GAAG,EAAE,oDAAoD;;AAErR;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc,KAAK,wBAAwB;AAC7D;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iCAAiC;AACjC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,6DAA6D,EAAE;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,mBAAmB;AACnB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,yDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,yDAAyD,uEAAgB,EAAE,kDAAkD,kCAAkC,EAAE,kDAAkD;;AAEnN;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,8CAA8C,EAAE;AAChD;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,yDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA,mDAAmD,uEAAgB,EAAE,4CAA4C,0BAA0B,6DAAM,uBAAuB,EAAE,4CAA4C;;AAEtN;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,iIAAiI,sCAAsC,2BAA2B,yCAAyC,65CAA65C,OAAO,sCAAsC,8CAA8C,iIAAiI,iDAAiD;AACr5D,2CAA2C,YAAY,WAAW,sCAAsC,oBAAoB,aAAa,4BAA4B,6BAA6B,sBAAsB,yBAAyB,sBAAsB,aAAa,oBAAoB,aAAa,yBAAyB,8BAA8B,kBAAkB,WAAW,YAAY,UAAU,uCAAuC,eAAe,SAAS,eAAe,yCAAyC,kBAAkB,gDAAgD,iCAAiC,iBAAiB,6CAA6C,gCAAgC,aAAa,oBAAoB,aAAa,oCAAoC,YAAY,YAAY,iCAAiC,sBAAsB,oBAAoB,aAAa,4BAA4B,6BAA6B,sBAAsB,+CAA+C,mDAAmD,qBAAqB,gDAAgD,WAAW,mBAAmB,gBAAgB,kBAAkB,kBAAkB,2CAA2C,sBAAsB,kBAAkB,iDAAiD,8BAA8B,kBAAkB,mBAAmB,uCAAuC,iCAAiC,mBAAmB,gBAAgB,6CAA6C;AAChkD,aAAa;AACb;AACA;AACA;AACA,KAAK,8BAA8B;AACnC,KAAK,OAAO,8EAAqB,EAAE;AACnC,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gBAAgB,OAAO,oDAAK,uBAAuB;AACnD,eAAe,OAAO,oDAAK,EAAE;AAC7B;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,sBAAsB,mEAAO;AAC7B,QAAQ,iEAAK,cAAc,iEAAK;AAChC;AACA,SAAS;AACT,QAAQ,iEAAK,aAAa,iEAAK;AAC/B;AACA,SAAS;AACT,QAAQ,sEAAU,0BAA0B,mEAAO;AACnD,QAAQ,sEAAU,0BAA0B,mEAAO;AACnD;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,+BAA+B,2DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,mIAAmI,OAAO,4BAA4B,2EAA2E;AACjP;AACA,6CAA6C,sBAAsB,eAAe,qEAAqE,oBAAoB,0BAA0B,oBAAoB,aAAa,8BAA8B,6BAA6B,mBAAmB,yBAAyB,8BAA8B,qBAAqB,eAAe,4BAA4B,mBAAmB,6CAA6C,SAAS,4CAA4C,oBAAoB,aAAa,8CAA8C,YAAY,iBAAiB,oCAAoC,gBAAgB;AAChsB,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa,OAAO,oDAAK,EAAE;AAC3B,aAAa,OAAO,oDAAK,oBAAoB;AAC7C,mBAAmB,OAAO,qDAAM,EAAE;AAClC;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,wDAAU;AAC9B;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa,OAAO,oDAAK,oBAAoB;AAC7C;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2DAA2D,iEAAQ;AACnE;AACA;AACA,2DAA2D,iEAAQ;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,k5BAAk5B,mBAAmB,2DAA2D,2BAA2B,8YAA8Y,uBAAuB,4GAA4G,sBAAsB,wfAAwf,+BAA+B,0XAA0X,aAAa;AACh8E,qEAAqE,UAAU,wDAAwD,+BAA+B,wCAAwC,uCAAuC,oEAAoE,gCAAgC,sCAAsC,qCAAqC,mEAAmE,qBAAqB,wBAAwB,oBAAoB,aAAa,8BAA8B,6BAA6B,mBAAmB,yBAAyB,mBAAmB,oBAAoB,qBAAqB,wBAAwB,gBAAgB,gDAAgD,eAAe,mBAAmB,mBAAmB,OAAO,iBAAiB,sBAAsB,mBAAmB,sBAAsB,mBAAmB,qBAAqB,iBAAiB,gBAAgB,uCAAuC,eAAe,qBAAqB,eAAe,uDAAuD,mBAAmB,gDAAgD,oBAAoB,aAAa,8BAA8B,6BAA6B,mBAAmB,4DAA4D,0BAA0B,kBAAkB,mBAAmB,cAAc,wEAAwE,oBAAoB,aAAa,4BAA4B,6BAA6B,sBAAsB,uBAAuB,2BAA2B,mBAAmB,YAAY,sEAAsE,mBAAmB,cAAc,qDAAqD,WAAW,kBAAkB,0EAA0E,kBAAkB,wBAAwB,WAAW,iBAAiB,iFAAiF,eAAe,gDAAgD,kFAAkF,kBAAkB,gDAAgD,2CAA2C,gBAAgB,gBAAgB,iBAAiB,iBAAiB,0BAA0B,kBAAkB,kBAAkB,+CAA+C,WAAW,YAAY,UAAU,2DAA2D,UAAU,kBAAkB,OAAO,QAAQ,MAAM,SAAS,sCAAsC,oBAAoB,aAAa,mEAAmE,YAAY,iBAAiB,uDAAuD,qBAAqB,wBAAwB,0EAA0E,uCAAuC,eAAe,mBAAmB,gBAAgB,4EAA4E,kBAAkB,gDAAgD,mBAAmB,oBAAoB,2FAA2F,eAAe,+CAA+C,gBAAgB,qDAAqD,kBAAkB,mBAAmB,qBAAqB,iBAAiB,uCAAuC,gBAAgB,eAAe,8CAA8C,eAAe,+CAA+C,gBAAgB,iDAAiD,kBAAkB,gDAAgD,mBAAmB,oBAAoB;AAC/5H,aAAa;AACb;AACA;AACA;AACA,KAAK,sBAAsB;AAC3B,KAAK,OAAO,8EAAqB,EAAE;AACnC,KAAK,OAAO,iFAAwB;AACpC;AACA;AACA,mBAAmB,OAAO,oDAAK,0BAA0B;AACzD,mBAAmB,OAAO,oDAAK,0BAA0B;AACzD,mBAAmB,OAAO,oDAAK,0BAA0B;AACzD,YAAY,OAAO,oDAAK,EAAE;AAC1B;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA,gBAAgB,OAAO,oDAAK,uBAAuB;AACnD,eAAe,OAAO,oDAAK,EAAE;AAC7B;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,QAAQ,8EAAe;AACvB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B,qCAAqC,wDAAS,GAAG;AACjD;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,0DAA0D,0DAAW;AACrE,iBAAiB;AACjB;AACA,oCAAoC,wDAAS,GAAG;AAChD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,yFAAyF,wCAAwC,2OAA2O,iDAAiD,+jBAA+jB,wCAAwC,g1BAAg1B,mBAAmB,+DAA+D,2BAA2B;AACj8D,gCAAgC,kBAAkB,gBAAgB,uDAAuD,cAAc,WAAW,cAAc,iDAAiD,gBAAgB,0BAA0B,qBAAqB,WAAW,YAAY,iDAAiD,mDAAmD,kBAAkB,0CAA0C,eAAe,kDAAkD,sBAAsB,qBAAqB,iDAAiD,kBAAkB,qBAAqB,wBAAwB,mDAAmD,qBAAqB,oBAAoB,gBAAgB,4BAA4B,mBAAmB,kEAAkE,kDAAkD,iGAAiG,kBAAkB,sBAAsB,4IAA4I,oBAAoB,kEAAkE,kDAAkD,iGAAiG,qCAAqC,UAAU,kDAAkD,+BAA+B,wCAAwC,uCAAuC,8DAA8D,gCAAgC,sCAAsC,qCAAqC,6DAA6D,qBAAqB,iDAAiD,mBAAmB,0CAA0C,oBAAoB,aAAa,8BAA8B,6BAA6B,mBAAmB,sDAAsD,0BAA0B,kBAAkB,mBAAmB,cAAc,kEAAkE,oBAAoB,aAAa,4BAA4B,6BAA6B,sBAAsB,uBAAuB,2BAA2B,mBAAmB,YAAY,qCAAqC,gBAAgB,gBAAgB,iBAAiB,iBAAiB,0BAA0B,kBAAkB,kBAAkB,yCAAyC,WAAW,YAAY,UAAU,qDAAqD,UAAU,kBAAkB,OAAO,QAAQ,MAAM,SAAS,2BAA2B,oBAAoB,aAAa,6DAA6D,YAAY,iBAAiB,iDAAiD,qBAAqB,wBAAwB,oEAAoE,uCAAuC,eAAe,mBAAmB,gBAAgB,sEAAsE,kBAAkB,gDAAgD,mBAAmB,oBAAoB,wCAAwC,eAAe,+CAA+C,gBAAgB,cAAc,iDAAiD,eAAe,+EAA+E,oBAAoB,mCAAmC,oBAAoB,aAAa,8BAA8B,6BAA6B,mBAAmB,yBAAyB,8BAA8B,qBAAqB,eAAe,uDAAuD,cAAc,mBAAmB,OAAO,eAAe,YAAY,oBAAoB,iBAAiB,8DAA8D,gBAAgB,wBAAwB,yEAAyE,iBAAiB,sDAAsD,mBAAmB,OAAO,mBAAmB,6CAA6C,SAAS,+BAA+B,gBAAgB;AACt7I,aAAa;AACb;AACA;AACA;AACA,KAAK,sBAAsB;AAC3B,KAAK,8BAA8B;AACnC,KAAK,OAAO,wDAAQ;AACpB;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,4CAA4C;AAC5C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,cAAc,OAAO,oDAAK,qBAAqB;AAC/C,eAAe,OAAO,oDAAK,EAAE;AAC7B;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa,OAAO,oDAAK,oBAAoB;AAC7C,iBAAiB,OAAO,oDAAK,EAAE;AAC/B;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB,OAAO,oDAAK,uBAAuB;AACnD,eAAe,OAAO,oDAAK,EAAE;AAC7B;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa;AACb,CAAC;AACD;AACA,eAAe,mCAAmC;AAClD,gBAAgB;AAChB,mBAAmB;AACnB,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,QAAQ,8BAA8B;AACtC,KAAK;AACL;AACA,KAAK;AACL,KAAK;AACL;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB,0BAA0B,6DAAY;AACtC,0BAA0B,6DAAY;AACtC,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa,OAAO,oDAAK,oBAAoB;AAC7C,eAAe,OAAO,oDAAK,EAAE;AAC7B;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,8EAAmB;AAClC;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,qEAAgB;AACpC,oBAAoB,qEAAc;AAClC;AACA,oBAAoB,8DAAgB;AACpC,oBAAoB,8DAAgB;AACpC,oBAAoB,wDAAU;AAC9B,oBAAoB,+DAAiB;AACrC,oBAAoB,0DAAY;AAChC,oBAAoB,4DAAc;AAClC,oBAAoB,mEAAe;AACnC;AACA,qCAAqC,mEAAe;AACpD;AACA,mCAAmC,+DAAU,EAAE,gFAAuB;AACtE;AACA,qBAAqB;AACrB,oBAAoB,+DAAiB;AACrC,oBAAoB,0DAAW;AAC/B,oBAAoB,kEAAmB;AACvC;AACA,oBAAoB,8DAAgB;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAE+f;;AAE/f,mD","file":"3.js","sourcesContent":["import { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { HttpClient, HttpParams, HttpClientModule } from '@angular/common/http';\nimport { shareReplay } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { IconModule, OptionListModule, MenuHeaderModule, CurrencyModule, ProgressBarModule, SlideToggleModule, SliderModule } from 'sn-common-lib';\nimport { EnviromentConfigService, BridgeAnalyticService, ModuleId, GlobileNavigationService } from '@globile/mobile-services';\nimport { moveItemInArray, DragDropModule } from '@angular/cdk/drag-drop';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule, Location } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { Injectable, NgModule, Component, Input, Output, EventEmitter, defineInjectable, inject } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/helpers/http-client.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass HttpClientService {\n    /**\n     * @param {?} http\n     */\n    constructor(http) {\n        this.http = http;\n    }\n    /**\n     * @template T\n     * @param {?} url\n     * @param {?=} optionParams\n     * @return {?}\n     */\n    get(url, optionParams) {\n        /** @type {?} */\n        const params = new HttpParams({ fromObject: optionParams });\n        return this.http.get(url, { params });\n    }\n}\nHttpClientService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nHttpClientService.ctorParameters = () => [\n    { type: HttpClient }\n];\n/** @nocollapse */ HttpClientService.ngInjectableDef = defineInjectable({ factory: function HttpClientService_Factory() { return new HttpClientService(inject(HttpClient)); }, token: HttpClientService, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/global-position.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass GlobalPositionService {\n    /**\n     * @param {?} httpClient\n     * @param {?} env\n     */\n    constructor(httpClient, env) {\n        this.httpClient = httpClient;\n        this.bufferSize = 1;\n        this.api = (/** @type {?} */ (env.api.GlobalPosition));\n    }\n    /**\n     * @param {?=} optionParams\n     * @return {?}\n     */\n    getGlobalPositionInfo(optionParams) {\n        return this.httpClient.get(`${this.api.apiURL}`, optionParams).pipe(shareReplay(this.bufferSize));\n    }\n}\nGlobalPositionService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nGlobalPositionService.ctorParameters = () => [\n    { type: HttpClientService },\n    { type: EnviromentConfigService }\n];\n/** @nocollapse */ GlobalPositionService.ngInjectableDef = defineInjectable({ factory: function GlobalPositionService_Factory() { return new GlobalPositionService(inject(HttpClientService), inject(EnviromentConfigService)); }, token: GlobalPositionService, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/models/account.model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AccountDetail {\n    /**\n     * @param {?=} data\n     */\n    constructor(data) {\n        if (data) {\n            this.accountId = data.accountId;\n            this.alias = data.alias;\n            this.availableBalance = data.availableBalance;\n            this.description = data.description;\n            this.displayNumber = data.displayNumber;\n            this.mainBalance = data.mainBalance;\n            this.mainItem = data.mainItem;\n            this.overdraftLimit = data.overdraftLimit;\n            this.overdraftUsed = data.overdraftUsed;\n            this.status = data.status;\n            this.type = data.type;\n            this.withholdingBalance = data.withholdingBalance;\n            this._links = data._links;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getName() {\n        return this.alias || this.description;\n    }\n    /**\n     * @return {?}\n     */\n    getNumberDetail() {\n        /** @type {?} */\n        const length = this.displayNumber.length;\n        /** @type {?} */\n        const showQuantity = 4;\n        // TODO: Should be parametrized by service\n        /** @type {?} */\n        const prefix = '*';\n        // TODO: Should be parametrized by service\n        /** @type {?} */\n        let auxDisplayNumber = this.displayNumber;\n        if (length > showQuantity) {\n            auxDisplayNumber = auxDisplayNumber.substr(length - showQuantity);\n        }\n        return prefix + auxDisplayNumber;\n    }\n    /**\n     * @return {?}\n     */\n    getCurrency() {\n        return this.availableBalance.amount;\n    }\n    /**\n     * @return {?}\n     */\n    getCurrencyDetail() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getImage() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarValue() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarTitle() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarDetail() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    isDisabled() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    disableText() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getEndDate() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getId() {\n        return this.accountId;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/cards/card-type.enum.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst CardType = {\n    CREDIT: \"CREDIT CARD\",\n    DEBIT: \"DEBIT CARD\",\n    PREPAID: \"PREPAID CARD\",\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/cards/card-status.enum.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst CardStatus = {\n    ACTIVE: \"ACTIVE\",\n    DISABLED: \"DISABLED\",\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/models/card.model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CardDetail {\n    /**\n     * @param {?=} data\n     */\n    constructor(data) {\n        if (data) {\n            this.mainItem = data.mainItem;\n            this.cardId = data.cardId;\n            this.alias = data.alias;\n            this.type = data.type;\n            this.printDesignId = data.printDesignId;\n            this.displayNumber = data.displayNumber;\n            this.operable = data.operable;\n            this.status = data.status;\n            this.statusInformation = data.statusInformation;\n            this.expirationDate = data.expirationDate;\n            this.availableBalance = data.availableBalance;\n            this.creditLimit = data.creditLimit;\n            this.disposedAmount = data.disposedAmount;\n            this.productCardDescription = data.productCardDescription;\n            this._links = data._links;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getName() {\n        return this.alias || this.productCardDescription;\n    }\n    /**\n     * @return {?}\n     */\n    getNumberDetail() {\n        /** @type {?} */\n        let displayDetail;\n        if (this.type === CardType.DEBIT) {\n            displayDetail = 'Debit';\n        }\n        else if (this.type === CardType.CREDIT) {\n            displayDetail = 'Credit';\n        }\n        else {\n            displayDetail = 'Prepaid';\n        }\n        return `${displayDetail} | ${this.getDisplayNumber()}`;\n    }\n    /**\n     * @return {?}\n     */\n    getCurrency() {\n        if (this.type === CardType.CREDIT) {\n            return this.creditLimit.amount - this.availableBalance.amount;\n        }\n        return this.availableBalance.amount;\n    }\n    /**\n     * @return {?}\n     */\n    getCurrencyDetail() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getImage() {\n        switch (this.type) {\n            case CardType.DEBIT:\n                return '../../assets/globalposition/placeholder_debit_card.png';\n            case CardType.CREDIT:\n                return '../../assets/globalposition/placeholder_debit_card.png';\n            case CardType.PREPAID:\n                return '../../assets/globalposition/placeholder_debit_card.png';\n            default:\n                return null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarValue() {\n        if (this.type === CardType.CREDIT) {\n            return ((this.creditLimit.amount - this.availableBalance.amount) / this.creditLimit.amount) * 100;\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarTitle() {\n        if (this.type === CardType.CREDIT) {\n            return 'Credit limit ';\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarDetail() {\n        if (this.type === CardType.CREDIT) {\n            return this.creditLimit.amount;\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    isDisabled() {\n        return this.status === CardStatus.DISABLED;\n    }\n    /**\n     * @return {?}\n     */\n    disableText() {\n        return 'Activate';\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getDisplayNumber() {\n        /** @type {?} */\n        const length = this.displayNumber.length;\n        /** @type {?} */\n        const showQuantity = 4;\n        // TODO: Should be parametrized by service\n        /** @type {?} */\n        const prefix = '*';\n        // TODO: Should be parametrized by service\n        /** @type {?} */\n        let auxDisplayNumber = this.displayNumber;\n        if (length > showQuantity) {\n            auxDisplayNumber = auxDisplayNumber.substr(length - showQuantity);\n        }\n        return prefix + auxDisplayNumber;\n    }\n    /**\n     * @return {?}\n     */\n    getEndDate() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getId() {\n        return this.cardId;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/models/pension-plan.model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PensionPlanDetail {\n    /**\n     * @param {?=} data\n     */\n    constructor(data) {\n        if (data) {\n            this.mainItem = data.mainItem;\n            this.pensionId = data.pensionId;\n            this.alias = data.alias;\n            this.type = data.type;\n            this.currentValue = data.currentValue;\n            this.displayNumber = data.displayNumber;\n            this._links = data._links;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getName() {\n        return this.alias;\n    }\n    /**\n     * @return {?}\n     */\n    getNumberDetail() {\n        return this.displayNumber;\n    }\n    /**\n     * @return {?}\n     */\n    getCurrency() {\n        return this.currentValue.amount;\n    }\n    /**\n     * @return {?}\n     */\n    getCurrencyDetail() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getImage() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarValue() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarTitle() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarDetail() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    isDisabled() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    disableText() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getId() {\n        return this.pensionId;\n    }\n    /**\n     * @return {?}\n     */\n    getEndDate() {\n        return null;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/models/shares.model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SharesDetail {\n    /**\n     * @param {?=} data\n     */\n    constructor(data) {\n        if (data) {\n            this.mainItem = data.mainItem;\n            this.value = data.value;\n            this.initialValue = data.initialValue;\n            this.alias = data.alias;\n            this.shareId = data.shareId;\n            this.displayNumber = data.displayNumber;\n            this._links = data._links;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getName() {\n        return this.alias;\n    }\n    /**\n     * @return {?}\n     */\n    getNumberDetail() {\n        return this.shareId; // TODO: need to review to get the right attribute\n    }\n    /**\n     * @return {?}\n     */\n    getCurrency() {\n        return this.value.amount; // TODO: need to review to get the right attribute\n    }\n    /**\n     * @return {?}\n     */\n    getCurrencyDetail() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getImage() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarValue() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarTitle() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarDetail() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    isDisabled() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    disableText() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getEndDate() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getId() {\n        return this.shareId;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/models/loan.model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LoanDetail {\n    /**\n     * @param {?=} data\n     */\n    constructor(data) {\n        if (data) {\n            this.mainItem = data.mainItem;\n            this.loanId = data.loanId;\n            this.alias = data.alias;\n            this.type = data.type;\n            this.displayNumber = data.displayNumber;\n            this.amount = data.amount;\n            this.amortization = data.amortization;\n            this.nextPaymentAmount = data.nextPaymentAmount;\n            this._links = data._links;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getName() {\n        return this.alias;\n    }\n    /**\n     * @return {?}\n     */\n    getCurrencyDetail() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarValue() {\n        if (this.type === 'LOAN') {\n            return (this.amortization.amount / this.amount.amount) * 100; // TODO: Update for the right values\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarTitle() {\n        if (this.type === 'LOAN') {\n            return 'Credit limit ';\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarDetail() {\n        if (this.type === 'LOAN') {\n            return this.amount.amount;\n        }\n        return null;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getDisplayNumber() {\n        /** @type {?} */\n        const length = this.displayNumber.length;\n        /** @type {?} */\n        const showQuantity = 4;\n        // TODO: Should be parametrized by service\n        /** @type {?} */\n        const prefix = '*';\n        // TODO: Should be parametrized by service\n        /** @type {?} */\n        let auxDisplayNumber = this.displayNumber;\n        if (length > showQuantity) {\n            auxDisplayNumber = auxDisplayNumber.substr(length - showQuantity);\n        }\n        return prefix + auxDisplayNumber;\n    }\n    /**\n     * @return {?}\n     */\n    getNumberDetail() {\n        return this.getDisplayNumber();\n    }\n    /**\n     * @return {?}\n     */\n    getCurrency() {\n        return this.amount.amount;\n    }\n    /**\n     * @return {?}\n     */\n    getImage() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    isDisabled() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    disableText() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getEndDate() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getId() {\n        return this.loanId;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/models/deposits.model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DepositDetail {\n    /**\n     * @param {?=} data\n     */\n    constructor(data) {\n        if (data) {\n            this.mainItem = data.mainItem;\n            this.depositId = data.depositId;\n            this.alias = data.alias;\n            this.type = data.type;\n            this.displayNumber = data.displayNumber;\n            this.amount = data.amount;\n            this.profit = data.profit;\n            this.endDate = data.endDate;\n            this._links = data._links;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getName() {\n        return this.alias;\n    }\n    /**\n     * @return {?}\n     */\n    getCurrencyDetail() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarValue() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarTitle() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarDetail() {\n        return null;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getDisplayNumber() {\n        /** @type {?} */\n        const length = this.displayNumber.length;\n        /** @type {?} */\n        const showQuantity = 4;\n        // TODO: Should be parametrized by service\n        /** @type {?} */\n        const prefix = '*';\n        // TODO: Should be parametrized by service\n        /** @type {?} */\n        let auxDisplayNumber = this.displayNumber;\n        if (length > showQuantity) {\n            auxDisplayNumber = auxDisplayNumber.substr(length - showQuantity);\n        }\n        return prefix + auxDisplayNumber;\n    }\n    /**\n     * @return {?}\n     */\n    getNumberDetail() {\n        return this.getDisplayNumber();\n    }\n    /**\n     * @return {?}\n     */\n    getCurrency() {\n        return this.amount.amount;\n    }\n    /**\n     * @return {?}\n     */\n    getImage() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    isDisabled() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    disableText() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getEndDate() {\n        return `expires ${this.endDate}`;\n    }\n    /**\n     * @return {?}\n     */\n    getId() {\n        return this.depositId;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/models/funds.model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FundDetail {\n    /**\n     * @param {?=} data\n     */\n    constructor(data) {\n        if (data) {\n            this.mainItem = data.mainItem;\n            this.fundId = data.fundId;\n            this.alias = data.alias;\n            this.type = data.type;\n            this.displayNumber = data.displayNumber;\n            this.currentValue = data.currentValue;\n            this._links = data._links;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getName() {\n        return this.alias;\n    }\n    /**\n     * @return {?}\n     */\n    getCurrencyDetail() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarValue() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarTitle() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getProgressBarDetail() {\n        return null;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getDisplayNumber() {\n        /** @type {?} */\n        const length = this.displayNumber.length;\n        /** @type {?} */\n        const showQuantity = 4;\n        // TODO: Should be parametrized by service\n        /** @type {?} */\n        const prefix = '*';\n        // TODO: Should be parametrized by service\n        /** @type {?} */\n        let auxDisplayNumber = this.displayNumber;\n        if (length > showQuantity) {\n            auxDisplayNumber = auxDisplayNumber.substr(length - showQuantity);\n        }\n        return prefix + auxDisplayNumber;\n    }\n    /**\n     * @return {?}\n     */\n    getNumberDetail() {\n        return this.getDisplayNumber();\n    }\n    /**\n     * @return {?}\n     */\n    getCurrency() {\n        return this.currentValue.amount;\n    }\n    /**\n     * @return {?}\n     */\n    getImage() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    isDisabled() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    disableText() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getEndDate() {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getId() {\n        return this.fundId;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/models/global-position-info-response.model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass GlobalPositionInfoResponse {\n    /**\n     * @param {?=} data\n     */\n    constructor(data) {\n        if (data) {\n            this.contracts_balances = data.contracts_balances;\n            this.contracts_balances.accounts.list = data.contracts_balances.accounts && data.contracts_balances.accounts.list ?\n                data.contracts_balances.accounts.list.map((/**\n                 * @param {?} account\n                 * @return {?}\n                 */\n                account => new AccountDetail(account))) : [];\n            this.contracts_balances.cards.list = data.contracts_balances.cards && data.contracts_balances.cards.list ?\n                data.contracts_balances.cards.list.map((/**\n                 * @param {?} card\n                 * @return {?}\n                 */\n                card => new CardDetail(card))) : [];\n            // tslint:disable-next-line: max-line-length\n            this.contracts_balances.pensionPlans.list = data.contracts_balances.pensionPlans && data.contracts_balances.pensionPlans.list ?\n                data.contracts_balances.pensionPlans.list.map((/**\n                 * @param {?} pension\n                 * @return {?}\n                 */\n                pension => new PensionPlanDetail(pension))) : [];\n            this.contracts_balances.shares.list = data.contracts_balances.shares && data.contracts_balances.shares.list ?\n                data.contracts_balances.shares.list.map((/**\n                 * @param {?} shares\n                 * @return {?}\n                 */\n                shares => new SharesDetail(shares))) : [];\n            this.contracts_balances.loans.list = data.contracts_balances.loans && data.contracts_balances.loans.list ?\n                data.contracts_balances.loans.list.map((/**\n                 * @param {?} loan\n                 * @return {?}\n                 */\n                loan => new LoanDetail(loan))) : [];\n            this.contracts_balances.deposits.list = data.contracts_balances.deposits && data.contracts_balances.deposits.list ?\n                data.contracts_balances.deposits.list.map((/**\n                 * @param {?} deposit\n                 * @return {?}\n                 */\n                deposit => new DepositDetail(deposit))) : [];\n            this.contracts_balances.funds.list = data.contracts_balances.funds && data.contracts_balances.funds.list ?\n                data.contracts_balances.funds.list.map((/**\n                 * @param {?} fund\n                 * @return {?}\n                 */\n                fund => new FundDetail(fund))) : (/** @type {?} */ ([]));\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/helpers/local-storage.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LocalStorageService {\n    constructor() { }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    get(key) {\n        return new Promise((/**\n         * @param {?} res\n         * @param {?} err\n         * @return {?}\n         */\n        (res, err) => {\n            res(localStorage.getItem(key));\n        }));\n    }\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    set(key, value) {\n        return new Promise((/**\n         * @param {?} res\n         * @param {?} err\n         * @return {?}\n         */\n        (res, err) => {\n            localStorage.setItem(key, value);\n            res(true);\n        }));\n    }\n}\nLocalStorageService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nLocalStorageService.ctorParameters = () => [];\n/** @nocollapse */ LocalStorageService.ngInjectableDef = defineInjectable({ factory: function LocalStorageService_Factory() { return new LocalStorageService(); }, token: LocalStorageService, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/models/list-types.enum.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst ListTypes = {\n    ACCOUNTS: \"ACCOUNTS\",\n    CARDS: \"CARDS\",\n    LOANS: \"LOANS\",\n    SHARES: \"SHARES\",\n    PENSIONPLANS: \"PENSIONPLANS\",\n    DEPOSITS: \"DEPOSITS\",\n    FUNDS: \"FUNDS\",\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/models/default-list-order.const.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DefaultListOrder = [\n    ListTypes.ACCOUNTS,\n    ListTypes.CARDS,\n    ListTypes.LOANS,\n    ListTypes.SHARES,\n    ListTypes.FUNDS,\n    ListTypes.DEPOSITS,\n    ListTypes.PENSIONPLANS,\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/config.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ConfigService {\n    /**\n     * @param {?} localStorage\n     */\n    constructor(localStorage) {\n        this.localStorage = localStorage;\n        this.PREFIX_ACCORDION_STATE = 'GP_accordion_state_';\n        this.PREFIX_ACCORDION_POSITIONS = 'GP_ACCORDIONS_POSITIONS';\n        this.PREFIX_DISPLAY_CONTENT = 'GP_DISPLAY_CONTENT';\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    getAccordionState(type) {\n        return this.localStorage.get(this.PREFIX_ACCORDION_STATE + type);\n    }\n    /**\n     * @param {?} type\n     * @param {?} value\n     * @return {?}\n     */\n    setAccordionState(type, value) {\n        return this.localStorage.set(this.PREFIX_ACCORDION_STATE + type, value);\n    }\n    /**\n     * @return {?}\n     */\n    getAccordionPositions() {\n        return this.localStorage.get(this.PREFIX_ACCORDION_POSITIONS)\n            .then((/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => {\n            if (value) {\n                return JSON.parse(value);\n            }\n            else {\n                return DefaultListOrder;\n            }\n        }));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    setAccordionPosition(value) {\n        return this.localStorage.set(this.PREFIX_ACCORDION_POSITIONS, JSON.stringify(value));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    setDisplayContent(value) {\n        return this.localStorage.set(this.PREFIX_DISPLAY_CONTENT, JSON.stringify(value));\n    }\n    /**\n     * @param {?=} type\n     * @return {?}\n     */\n    getDisplayContent(type) {\n        return this.localStorage.get(this.PREFIX_DISPLAY_CONTENT).then((/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => {\n            if (value) {\n                /** @type {?} */\n                const pasedData = (/** @type {?} */ (JSON.parse(value)));\n                if (!type) {\n                    return pasedData;\n                }\n                else if (type && pasedData[type]) {\n                    return (/** @type {?} */ (pasedData[type]));\n                }\n            }\n            return undefined;\n        }));\n    }\n}\nConfigService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nConfigService.ctorParameters = () => [\n    { type: LocalStorageService }\n];\n/** @nocollapse */ ConfigService.ngInjectableDef = defineInjectable({ factory: function ConfigService_Factory() { return new ConfigService(inject(LocalStorageService)); }, token: ConfigService, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/helpers/hidden-item-counter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} values\n * @return {?}\n */\nfunction hiddenItemsCounter(values) {\n    /** @type {?} */\n    let count = 0;\n    if (values) {\n        Object.keys(values).forEach((/**\n         * @param {?} type\n         * @return {?}\n         */\n        (type) => Object.keys(values[type]).forEach((/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => {\n            if (values[type][id] === false) {\n                count += 1;\n            }\n        }))));\n    }\n    return count;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/global-position/global-position.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ANALYTIC_TITLE = 'global-position';\nclass GlobalPositionComponent {\n    /**\n     * @param {?} globalService\n     * @param {?} analytic\n     * @param {?} configService\n     */\n    constructor(globalService, analytic, configService) {\n        this.globalService = globalService;\n        this.analytic = analytic;\n        this.configService = configService;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // TODO: waiting for PO to tell us the ags we need to use.\n        /** @type {?} */\n        const view = {\n            title: ANALYTIC_TITLE,\n            data: { event: 'init' }\n        };\n        this.analytic.sendView(view);\n        this.globalService.getGlobalPositionInfo().subscribe((/**\n         * @param {?} res\n         * @return {?}\n         */\n        res => {\n            this.contracts = new GlobalPositionInfoResponse(res).contracts_balances;\n            this.configService.getDisplayContent().then((/**\n             * @param {?} values\n             * @return {?}\n             */\n            (values) => {\n                this.count = hiddenItemsCounter(values);\n            }));\n        }));\n        this.accordionPositions = this.configService.getAccordionPositions();\n        this.listTypes = ListTypes;\n    }\n    /**\n     * @return {?}\n     */\n    get accounts() {\n        return this.contracts && this.contracts.accounts;\n    }\n    /**\n     * @return {?}\n     */\n    get cards() {\n        return this.contracts && this.contracts.cards;\n    }\n    /**\n     * @return {?}\n     */\n    get pensions() {\n        return this.contracts && this.contracts.pensionPlans;\n    }\n    /**\n     * @return {?}\n     */\n    get shares() {\n        return this.contracts && this.contracts.shares;\n    }\n    /**\n     * @return {?}\n     */\n    get loans() {\n        return this.contracts && this.contracts.loans;\n    }\n    /**\n     * @return {?}\n     */\n    get deposits() {\n        return this.contracts && this.contracts.deposits;\n    }\n    /**\n     * @return {?}\n     */\n    get funds() {\n        return this.contracts && this.contracts.funds;\n    }\n}\nGlobalPositionComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-global-position',\n                template: \"<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"header\\\">\\n    <div class=\\\"greetings\\\">\\n      <h1>{{ 'GLOBALPOSITION.HELLO' | translate }} Elena</h1>\\n      <span>{{'GLOBALPOSITION.LASTLOGIN' | translate }} 10 Oct. 2019</span>\\n    </div>\\n    <!-- <sn-icon icon=\\\"sn-FUNC071\\\"></sn-icon> -->\\n  </div>\\n\\n  <div class=\\\"body\\\">\\n    <!-- COTAINER NGFOR LIST START -->\\n    <ng-container *ngFor=\\\"let item of accordionPositions | async\\\">\\n      <ng-container [ngSwitch]=\\\"item\\\">\\n        <sn-accounts *ngSwitchCase=\\\"listTypes.ACCOUNTS\\\" [balance]=\\\"accounts?.totalBalance?.amount\\\" [accounts]=\\\"accounts?.list\\\"></sn-accounts>\\n        <sn-cards *ngSwitchCase=\\\"listTypes.CARDS\\\" [cards]=\\\"cards?.list\\\"></sn-cards>\\n        <sn-loans *ngSwitchCase=\\\"listTypes.LOANS\\\" [loans]=\\\"loans?.list\\\" [financing]=\\\"loans?.totalBalance?.amount\\\"></sn-loans>\\n        <sn-shares *ngSwitchCase=\\\"listTypes.SHARES\\\" [balance]=\\\"shares?.totalBalance?.amount\\\" [shares]=\\\"shares?.list\\\"></sn-shares>\\n        <sn-investment-funds *ngSwitchCase=\\\"listTypes.FUNDS\\\" [balance]=\\\"funds?.totalBalance?.amount\\\" [funds]=\\\"funds?.list\\\"></sn-investment-funds>\\n        <sn-pension-plans *ngSwitchCase=\\\"listTypes.PENSIONPLANS\\\" [balance]=\\\"pensions?.totalBalance?.amount\\\" [pensions]=\\\"pensions?.list\\\"></sn-pension-plans>\\n        <sn-deposits  *ngSwitchCase=\\\"listTypes.DEPOSITS\\\" [deposits]=\\\"deposits?.list\\\" [balance]=\\\"deposits?.totalBalance?.amount\\\"></sn-deposits>\\n      </ng-container>\\n    </ng-container>\\n    <!-- COTAINER NGFOR LIST END -->\\n    <div *ngIf=\\\"count > 0\\\" class=\\\"hidden-counter-container\\\">\\n      <span class=\\\"counter-number\\\">{{count}}</span><span class=\\\"hidden-text\\\"> {{ 'GLOBALPOSITION.HIDDENPRODUCTS' | translate}}</span>\\n    </div>\\n    <div class=\\\"footer-wrapper\\\">\\n      <div class=\\\"edit-wrapper\\\" [routerLink]=\\\"['edit']\\\">\\n        {{ 'GLOBALPOSITION.MANAGEWHATTOSHOW' | translate }}\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                styles: [\".content-wrapper{height:100%;width:100%;background-color:rgba(222,237,242,.3);display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.content-wrapper .header{background-color:#fff;padding:1rem;display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;align-content:top;width:100%;height:5rem;z-index:2}.content-wrapper .header .greetings h1{font-size:2rem;margin:0;line-height:.9}.content-wrapper .header .greetings span{font-size:.875rem;color:var(--color-secondary-mediumgray,#767676)}.content-wrapper .header sn-icon{font-size:1.5rem;color:var(--color-primary-santander,#ec0000)}.content-wrapper .image-wrapper{height:10rem;display:-webkit-box;display:flex}.content-wrapper .image-wrapper img{height:100%;margin:auto}.content-wrapper .footer-wrapper{background-color:#fff;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.content-wrapper .footer-wrapper .edit-wrapper{color:var(--color-secondary-darkturquoise,#137e84);border-radius:.25rem;box-shadow:0 .0625rem .125rem 0 rgba(0,0,0,.27);width:auto;margin:1rem 1.5rem;padding:.875rem;font-size:.875rem;text-align:center}.content-wrapper .hidden-counter-container{letter-spacing:normal;text-align:center;background-color:var(--color-primary-white,#fff)}.content-wrapper .hidden-text{font-size:.875rem;margin-left:.25rem;color:var(--color-secondary-gray,#444)}.content-wrapper .counter-number{font-size:1.125rem;font-weight:700;color:var(--color-primary-santander,#ec0000)}\"]\n            }] }\n];\n/** @nocollapse */\nGlobalPositionComponent.ctorParameters = () => [\n    { type: GlobalPositionService },\n    { type: BridgeAnalyticService },\n    { type: ConfigService }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/accounts/accounts.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AccountsComponent {\n    constructor() {\n        this.listTypes = ListTypes;\n        this.accounts = [];\n    }\n    /**\n     * @return {?}\n     */\n    get balance() {\n        return this._balance;\n    }\n    /**\n     * @param {?} balance\n     * @return {?}\n     */\n    set balance(balance) {\n        if (!!balance) {\n            this._balance = typeof balance === 'number' ? balance : balance.amount;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.balance = this.balance || this.getBalance();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getBalance() {\n        /** @type {?} */\n        let sum = 0;\n        if (Array.isArray(this.accounts)) {\n            this.accounts.forEach((/**\n             * @param {?} account\n             * @return {?}\n             */\n            account => {\n                sum += account.availableBalance.amount;\n            }));\n        }\n        return sum;\n    }\n}\nAccountsComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-accounts',\n                template: \"<sn-common-list [type]=\\\"listTypes.ACCOUNTS\\\" [displayList]=\\\"accounts\\\" [footerTitle]=\\\"'GLOBALPOSITION.BALANCE' | translate\\\" [footerValue]=\\\"balance\\\"></sn-common-list>\",\n                styles: [\"\"]\n            }] }\n];\nAccountsComponent.propDecorators = {\n    accounts: [{ type: Input, args: ['accounts',] }],\n    balance: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/sn-accordion/accordion.animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst AccordionAnimations = {\n    accordionTrigger: trigger('accordionTrigger', [\n        state('collapsed', style({\n            height: '0'\n        })),\n        state('expanded', style({\n            height: '*'\n        })),\n        transition('collapsed => expanded', animate('200ms linear')),\n        transition('expanded => collapsed', animate('200ms linear'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/sn-accordion/accordion-state.enum.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst AccordionState = {\n    Expanded: \"expanded\",\n    Collapsed: \"collapsed\",\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/sn-accordion/accordion.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AccordionComponent {\n    constructor() {\n        this.stateChange = new EventEmitter();\n        this.currentState = AccordionState.Expanded;\n        this.AccordionState = AccordionState;\n        this.hasFooter = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set state(value) {\n        this.currentState = value;\n    }\n    /**\n     * @return {?}\n     */\n    toggleState() {\n        this.currentState = this.currentState === AccordionState.Expanded ? AccordionState.Collapsed : AccordionState.Expanded;\n        this.stateChange.emit(this.currentState);\n    }\n}\nAccordionComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-accordion',\n                template: \"<div #accordion class='accordion-wrapper'>\\n  <div class=\\\"title\\\" (click)=\\\"toggleState()\\\">\\n    <p>{{title}}</p>\\n    <sn-icon icon=\\\"{{this.currentState === AccordionState.Expanded ? 'sn-SYS018' : 'sn-SYS019'}}\\\"></sn-icon>\\n  </div>\\n  <div class=\\\"content-wrapper\\\" \\n    [@accordionTrigger]=\\\"currentState\\\">\\n    <ng-content></ng-content>\\n  </div>\\n  <div class=\\\"footer\\\" >\\n    <ng-content select=\\\"[footer]\\\"></ng-content>\\n  </div>\\n</div>\",\n                animations: [AccordionAnimations.accordionTrigger],\n                styles: [\".accordion-wrapper{background-color:#fff;padding:0 1rem;box-shadow:0 .0625rem .125rem var(--color-primary-mediumsky,#cedee7);margin-bottom:.5rem}.accordion-wrapper .title{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-pack:justify;justify-content:space-between;align-content:center;padding:1rem 0}.accordion-wrapper .title p{font-size:1.125rem;color:var(--color-primary-santander,#ec0000);margin:0}.accordion-wrapper .title ::ng-deep sn-icon{display:-webkit-box;display:flex}.accordion-wrapper .title ::ng-deep sn-icon i{margin:auto;font-size:1.5rem}.accordion-wrapper .content-wrapper{overflow:hidden}\"]\n            }] }\n];\n/** @nocollapse */\nAccordionComponent.ctorParameters = () => [];\nAccordionComponent.propDecorators = {\n    title: [{ type: Input }],\n    state: [{ type: Input, args: ['state',] }],\n    stateChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/sn-accordion/accordion.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AccordionModule {\n}\nAccordionModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [AccordionComponent],\n                imports: [\n                    CommonModule,\n                    IconModule,\n                ],\n                exports: [AccordionComponent],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/cards/cards.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CardsComponent {\n    constructor() {\n        this.cardsList = [];\n        this.isExpanded = false;\n        this.CardType = CardType;\n        this.CardStatus = CardStatus;\n        this.listTypes = ListTypes;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cards(value) {\n        this.cardsList = this.orderByCardType(value);\n    }\n    /**\n     * @private\n     * @param {?} array\n     * @return {?}\n     */\n    orderByCardType(array) {\n        /**\n         * Ordered by type in the following order (https://engineeringglobile.atlassian.net/browse/GA-115):\n         * 1 - debit\n         * 2 - credit\n         * 3 - prepaid\n         */\n        if (!Array.isArray(array)) {\n            return;\n        }\n        array.sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            if (a.type === b.type) {\n                return 0;\n            }\n            if (a.type === CardType.DEBIT) {\n                return -1;\n            }\n            else if (a.type === CardType.CREDIT && b.type === CardType.PREPAID) {\n                return -1;\n            }\n            else {\n                return 1;\n            }\n        }));\n        return array;\n    }\n}\nCardsComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-cards',\n                template: \"<sn-common-list [type]=\\\"listTypes.CARDS\\\" [displayList]=\\\"cardsList\\\"></sn-common-list>\\n\"\n            }] }\n];\n/** @nocollapse */\nCardsComponent.ctorParameters = () => [];\nCardsComponent.propDecorators = {\n    cards: [{ type: Input, args: ['cards',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/common-list/common-list.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ANALYTIC_TITLE$1 = 'global-position';\nclass CommonListComponent {\n    /**\n     * @param {?} configService\n     * @param {?} analytic\n     * @param {?} globileNavigationService\n     */\n    constructor(configService, analytic, globileNavigationService) {\n        this.configService = configService;\n        this.analytic = analytic;\n        this.globileNavigationService = globileNavigationService;\n        this.AccordionState = AccordionState;\n    }\n    /**\n     * @return {?}\n     */\n    get displayList() {\n        return this._displayList;\n    }\n    /**\n     * @param {?} displayList\n     * @return {?}\n     */\n    set displayList(displayList) {\n        if (displayList) {\n            this.configService.getDisplayContent(this._type)\n                .then((/**\n             * @param {?} list\n             * @return {?}\n             */\n            (list) => {\n                if (list && Object.keys(list).length > 0) {\n                    this._displayList = displayList\n                        .filter((/**\n                     * @param {?} item\n                     * @return {?}\n                     */\n                    (item) => list[item.getId()]));\n                }\n                else {\n                    this._displayList = displayList;\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get type() {\n        return this._type;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value;\n        this.configService.getAccordionState(value)\n            .then((/**\n         * @param {?} res\n         * @return {?}\n         */\n        (res) => {\n            this.state = res;\n        }));\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    stateChange(event) {\n        // TODO: waiting for PO to tell us the ags we need to use.\n        /** @type {?} */\n        const state$$1 = event;\n        /** @type {?} */\n        const analyticEvent = {\n            title: ANALYTIC_TITLE$1,\n            data: {\n                event: 'switch accordion state',\n                accordionState: state$$1,\n                accordionTitle: this._type\n            }\n        };\n        this.configService.setAccordionState(this._type, event).then((/**\n         * @param {?} res\n         * @return {?}\n         */\n        res => { }));\n        this.analytic.sendEvent(analyticEvent);\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    navigateTo(el) {\n        switch (this._type) {\n            case ListTypes.ACCOUNTS:\n                this.globileNavigationService.gotToModule([ModuleId.PRODUCTDETAIL, el.accountId]);\n                break;\n            case ListTypes.CARDS:\n                this.globileNavigationService.gotToModule([ModuleId.CARDDETAIL, el.cardId]);\n                break;\n            default:\n                break;\n        }\n    }\n}\nCommonListComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-common-list',\n                template: \"\\n<sn-accordion \\n  [title]=\\\" ('GLOBALPOSITION.' + type) | translate\\\"\\n  [state]=\\\"state ? state : displayList && displayList.length > 2 ? AccordionState.Collapsed : AccordionState.Expanded\\\"\\n  *ngIf=\\\"displayList && displayList.length > 0\\\"\\n  (stateChange)=\\\"stateChange($event)\\\">\\n  <div>\\n    <sn-option-list no-padding>\\n      <sn-option-item no-padding *ngFor=\\\"let element of displayList\\\" (click)=\\\"navigateTo(element)\\\">\\n          <div class=\\\"content-wrapper\\\">\\n            <div item-start class=\\\"card-image\\\" *ngIf=\\\"element.getImage()\\\">\\n              <img [src]=\\\"element.getImage()\\\" />\\n              <div class=\\\"locker-wrapper\\\" *ngIf=\\\"element.isDisabled()\\\">\\n                <sn-icon icon=\\\"sn-FUNC057\\\"></sn-icon>\\n              </div>\\n            </div>\\n            <div class=\\\"account-item-container\\\">\\n              <div class=\\\"account-item-name\\\">{{element.getName()}}</div>\\n              <div class=\\\"account-item-number\\\">{{element.getNumberDetail()}}</div>\\n            </div>\\n            <div class=\\\"account-amount-container\\\">\\n              <div item-end align-start class=\\\"account-item-balance\\\" *ngIf=\\\"element.getCurrency() && !element.isDisabled()\\\"><sn-currency [value]=\\\"element.getCurrency()\\\"></sn-currency></div> \\n              <div item-end align-start class=\\\"account-item-balance disabled-card\\\" *ngIf=\\\"element.isDisabled()\\\">{{element.disableText()}}</div>\\n              <div item-end align-start class=\\\"account-end-date\\\" *ngIf=\\\"element.getEndDate()\\\">{{element.getEndDate()}}</div>\\n            </div>\\n           \\n          </div>\\n          <div class=\\\"progress-bar-wrapper\\\" *ngIf=\\\"element.getProgressBarValue() || element.getProgressBarTitle() || element.getProgressBarDetail()\\\">\\n            <sn-progress-bar *ngIf=\\\"element.getProgressBarValue()\\\" [value]=\\\"element.getProgressBarValue()\\\" height=\\\"0.2em\\\" width=\\\"100%\\\"></sn-progress-bar>\\n            <div class=\\\"progress-bar-detail\\\">\\n              <span class=\\\"title\\\" *ngIf=\\\"element.getProgressBarTitle()\\\">{{element.getProgressBarTitle()}} </span>\\n              <span class=\\\"amount\\\" *ngIf=\\\"element.getProgressBarDetail()\\\"><sn-currency [value]=\\\"element.getProgressBarDetail()\\\"></sn-currency></span></div>\\n          </div>\\n        </sn-option-item>\\n    </sn-option-list>\\n  </div>\\n  <div footer *ngIf=\\\"footerTitle && footerValue\\\">\\n    <div class=\\\"footer-container\\\">\\n      <div class=\\\"footer-title\\\">{{footerTitle}}</div>\\n      <div class=\\\"footer-balance\\\"><sn-currency [value]=\\\"footerValue\\\"></sn-currency> </div>\\n    </div>\\n  </div>\\n</sn-accordion>\",\n                styles: [\":host ::ng-deep sn-option-list[no-padding]{padding:0}:host ::ng-deep sn-option-list[no-padding] .item-native{padding-left:initial!important;-webkit-padding-start:initial!important;padding-inline-start:initial!important}:host ::ng-deep sn-option-list[no-padding] .item-native .item-inner{padding-right:initial!important;-webkit-padding-end:initial!important;padding-inline-end:initial!important}:host ::ng-deep sn-option-list[no-padding] .item-native [item-end]{margin-right:initial}:host .footer-container{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-align:center;align-items:center}:host .footer-title{padding-top:.6875rem;padding-bottom:.6875rem;font-weight:400;color:var(--color-secondary-mediumgray,#767676);font-size:1rem;line-height:1.5rem;-webkit-box-flex:1;flex:1;text-align:start}:host .footer-balance{padding-top:.75rem;padding-bottom:.75rem;font-size:1.125rem;line-height:1.625rem;letter-spacing:0;font-weight:700;color:var(--color-secondary-gray,#444);text-align:end}:host sn-option-item{cursor:pointer}:host ::ng-deep sn-option-item:last-child .item-native{border-bottom:none}:host ::ng-deep sn-option-item .content-wrapper{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row}:host ::ng-deep sn-option-item .content-wrapper .card-image{-ms-grid-row-align:center;align-self:center;-webkit-box-flex:0;flex:0 1 auto}:host ::ng-deep sn-option-item .content-wrapper .account-item-container{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:start;justify-content:flex-start;-webkit-box-flex:2;flex-grow:2}:host ::ng-deep sn-option-item .content-wrapper .account-item-balance{-webkit-box-flex:0;flex:0 1 auto}:host ::ng-deep sn-option-item .progress-bar-wrapper{width:100%;position:relative}:host ::ng-deep sn-option-item .progress-bar-wrapper .progress-bar-detail{margin-top:.25rem;padding-bottom:.6875rem;width:100%;text-align:right}:host ::ng-deep sn-option-item .progress-bar-wrapper .progress-bar-detail .title{font-size:1rem;color:var(--color-secondary-mediumgray,#767676)}:host ::ng-deep sn-option-item .progress-bar-wrapper .progress-bar-detail .amount{font-size:.875rem;color:var(--color-secondary-mediumgray,#767676)}:host ::ng-deep sn-option-item .card-image{max-height:3rem;min-height:3rem;max-width:4.5rem;min-width:4.5rem;-ms-grid-row-align:center;align-self:center;position:relative}:host ::ng-deep sn-option-item .card-image img{width:100%;height:100%;z-index:1}:host ::ng-deep sn-option-item .card-image .locker-wrapper{z-index:2;position:absolute;left:0;right:0;top:0;bottom:0;background-color:rgba(255,255,255,.8);display:-webkit-box;display:flex}:host ::ng-deep sn-option-item .card-image .locker-wrapper sn-icon{margin:auto;font-size:1.5rem}:host ::ng-deep sn-option-item .account-item-container{padding-top:.5625rem;padding-bottom:.6875rem}:host ::ng-deep sn-option-item .account-item-container .account-item-name{color:var(--color-secondary-gray,#444);font-size:1rem;line-height:1.5rem;font-weight:400}:host ::ng-deep sn-option-item .account-item-container .account-item-number{font-size:.875rem;color:var(--color-secondary-mediumgray,#767676);line-height:1.3125;font-weight:lighter}:host ::ng-deep sn-option-item .account-item-container .account-item-number .disabled-card{font-size:1rem;color:var(--color-secondary-turquoise,#1bb3bc);font-weight:400}:host ::ng-deep sn-option-item .account-item-balance{padding-top:.5rem;font-size:1.125rem;line-height:1.625rem;letter-spacing:0;color:var(--color-secondary-gray,#444);font-weight:400;text-align:end}:host ::ng-deep sn-option-item .disabled-card{font-size:1rem;color:var(--color-secondary-turquoise,#1bb3bc);font-weight:700}:host ::ng-deep sn-option-item .account-end-date{font-size:.875rem;color:var(--color-secondary-mediumgray,#767676);line-height:1.3125;font-weight:lighter}\"]\n            }] }\n];\n/** @nocollapse */\nCommonListComponent.ctorParameters = () => [\n    { type: ConfigService },\n    { type: BridgeAnalyticService },\n    { type: GlobileNavigationService }\n];\nCommonListComponent.propDecorators = {\n    footerTitle: [{ type: Input, args: ['footerTitle',] }],\n    footerValue: [{ type: Input, args: ['footerValue',] }],\n    displayList: [{ type: Input, args: ['displayList',] }],\n    type: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/pension-plans/pension-plans.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PensionPlansComponent {\n    constructor() {\n        this.listTypes = ListTypes;\n        this.pensionsList = [];\n        this.isExpanded = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pensions(value) {\n        this.pensionsList = value;\n    }\n    /**\n     * @return {?}\n     */\n    get balance() {\n        return this._balance;\n    }\n    /**\n     * @param {?} balance\n     * @return {?}\n     */\n    set balance(balance) {\n        if (!!balance) {\n            this._balance = typeof balance === 'number' ? balance : balance.amount;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.balance = this.balance || this.getBalance();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getBalance() {\n        /** @type {?} */\n        let sum = 0;\n        if (Array.isArray(this.pensionsList)) {\n            this.pensionsList.forEach((/**\n             * @param {?} pension\n             * @return {?}\n             */\n            pension => {\n                sum += pension.currentValue.amount;\n            }));\n        }\n        return sum;\n    }\n}\nPensionPlansComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-pension-plans',\n                template: \"<sn-common-list [type]=\\\"listTypes.PENSIONPLANS\\\" [displayList]=\\\"pensionsList\\\" [footerTitle]=\\\"'Balance'\\\" [footerValue]=\\\"balance\\\"></sn-common-list>\\n\"\n            }] }\n];\nPensionPlansComponent.propDecorators = {\n    pensions: [{ type: Input, args: ['pensions',] }],\n    balance: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/edit/edit.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass EditComponent {\n    /**\n     * @param {?} configService\n     * @param {?} globalService\n     * @param {?} location\n     */\n    constructor(configService, globalService, location) {\n        this.configService = configService;\n        this.globalService = globalService;\n        this.location = location;\n        this.listTypes = ListTypes;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.globalService.getGlobalPositionInfo().subscribe((/**\n         * @param {?} res\n         * @return {?}\n         */\n        res => {\n            this.contracts = new GlobalPositionInfoResponse(res).contracts_balances;\n            this.initForm();\n            this.configService.getDisplayContent()\n                .then((/**\n             * @param {?} values\n             * @return {?}\n             */\n            (values) => {\n                if (values) {\n                    this.form.setValue(values);\n                    this.form.updateValueAndValidity();\n                    this.showReset = Boolean(hiddenItemsCounter(this.form.getRawValue()));\n                }\n                this.$formChanges = this.form.valueChanges.subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.configService.setDisplayContent(this.form.getRawValue());\n                    this.showReset = Boolean(hiddenItemsCounter(this.form.getRawValue()));\n                }));\n            }));\n        }));\n        this.configService.getAccordionPositions().then((/**\n         * @param {?} list\n         * @return {?}\n         */\n        (list) => this.list = list));\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    drop(event) {\n        moveItemInArray(this.list, event.previousIndex, event.currentIndex);\n        this.configService.setAccordionPosition(this.list);\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    getdata(type) {\n        switch (type) {\n            case ListTypes.ACCOUNTS:\n                return this.contracts && this.contracts.accounts && this.contracts.accounts.list;\n            case ListTypes.CARDS:\n                return this.contracts && this.contracts.cards && this.contracts.cards.list;\n            case ListTypes.LOANS:\n                return this.contracts && this.contracts.loans && this.contracts.loans.list;\n            case ListTypes.DEPOSITS:\n                return this.contracts && this.contracts.deposits && this.contracts.deposits.list;\n            case ListTypes.PENSIONPLANS:\n                return this.contracts && this.contracts.pensionPlans && this.contracts.pensionPlans.list;\n            case ListTypes.SHARES:\n                return this.contracts && this.contracts.shares && this.contracts.shares.list;\n            case ListTypes.FUNDS:\n                return this.contracts && this.contracts.funds && this.contracts.funds.list;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    initForm() {\n        Object.keys(ListTypes).forEach((/**\n         * @param {?} type\n         * @return {?}\n         */\n        (type) => {\n            /** @type {?} */\n            const dataList = this.getdata(ListTypes[type]);\n            if (dataList) {\n                /** @type {?} */\n                const typeForm = new FormGroup({});\n                dataList.forEach((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (item) => {\n                    typeForm.addControl(item.getId(), new FormControl(true));\n                }));\n                if (this.form === undefined) {\n                    this.form = new FormGroup({});\n                }\n                this.form.addControl(type, typeForm);\n            }\n        }));\n        this._resetValue = this.form.getRawValue();\n    }\n    /**\n     * @return {?}\n     */\n    onMenuClick() {\n        this.location.back();\n    }\n    /**\n     * @return {?}\n     */\n    reset() {\n        this.form.reset(this._resetValue);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.$formChanges && !this.$formChanges.closed) {\n            this.$formChanges.unsubscribe();\n        }\n    }\n}\nEditComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-edit',\n                template: \"<!-- INFO START -->\\n<section class=\\\"info-wrapper\\\">\\n  <p>{{'GLOBALPOSITION.EDITINFO' | translate }}</p>\\n</section>\\n<!-- INFO END -->\\n<section class=\\\"display-all-wrapper\\\" *ngIf=\\\"showReset\\\">\\n  <div class=\\\"display-all-content\\\" (click)=\\\"reset()\\\">\\n    <sn-icon large icon=\\\"sn-FUNC123\\\"></sn-icon>\\n    <div class=\\\"label\\\">{{'GLOBALPOSITION.DISPLAYALLPRODUCTS' | translate}}</div>\\n  </div>\\n</section>\\n<!-- DRAG LIST STRAT -->\\n<form *ngIf=\\\"form\\\" [formGroup]=\\\"form\\\">\\n  <cdk-drop-list [cdkDropListOrientation]=\\\"'vertical'\\\" [cdkDropListLockAxis]=\\\"'y'\\\" id=\\\"gpEdit\\\"\\n    (cdkDropListDropped)=\\\"drop($event)\\\">\\n    <!-- COTAINER NGFOR LIST START -->\\n    <ng-container *ngFor=\\\"let type of list\\\">\\n      <!-- DRAG ITEM TEMPLATE START -->\\n      <div class='item-wrapper' cdkDrag>\\n        <div class=\\\"custom-placeholder\\\" *cdkDragPlaceholder></div>\\n        <div class=\\\"item-header-wrapper\\\">\\n          <p class=\\\"item-header-title\\\">{{ 'GLOBALPOSITION.' + type | translate }}</p>\\n          <button cdkDragHandle class=\\\"item-header-handle\\\">\\n            <sn-icon icon=\\\"sn-SYS015\\\"></sn-icon>\\n          </button>\\n        </div>\\n\\n        <div [formGroupName]=\\\"listTypes[type]\\\" class=\\\"content-wrapper\\\">\\n          <sn-option-list no-padding>\\n            <sn-option-item no-padding *ngFor=\\\"let element of getdata(type)\\\">\\n              <div class=\\\"content-wrapper\\\">\\n                <div item-start class=\\\"card-image\\\" *ngIf=\\\"element?.getImage()\\\">\\n                  <img [src]=\\\"element?.getImage()\\\" />\\n                  <div class=\\\"locker-wrapper\\\" *ngIf=\\\"element?.isDisabled()\\\">\\n                    <sn-icon icon=\\\"sn-FUNC057\\\"></sn-icon>\\n                  </div>\\n                </div>\\n                <div class=\\\"account-item-container\\\">\\n                  <div class=\\\"account-item-name\\\">{{element.getName()}}</div>\\n                  <div class=\\\"account-item-number\\\">{{element.getNumberDetail()}}</div>\\n                </div>\\n                <sn-slide-toggle [formControlName]=\\\"element?.getId()\\\"  item-end></sn-slide-toggle>\\n              </div>\\n            </sn-option-item>\\n          </sn-option-list>\\n        </div>\\n      </div>\\n      <!-- DRAG ITEM TEMPLATE END -->\\n    </ng-container>\\n    <!-- COTAINER NGFOR LIST END -->\\n  </cdk-drop-list>\\n  <!-- DRAG LIST END -->\\n</form>\",\n                styles: [\":host{overflow-x:hidden;overflow-y:auto;background-color:var(--color-secondary-purple,#f5f9fb)}.info-wrapper{width:100%;height:4.5rem;background-color:var(--color-primary-white,#fff)}.info-wrapper p{margin:.5rem 3.75rem 1rem}.display-all-wrapper{width:100%;height:4rem;background-color:var(--color-primary-white,#fff);color:var(--color-secondary-darkturquoise,#137e84);padding-left:1rem}.display-all-wrapper .display-all-content{cursor:pointer}.display-all-wrapper .display-all-content sn-icon{vertical-align:middle;display:inline-block}.display-all-wrapper .display-all-content .label{margin-left:.5rem;margin-top:1.3125rem;margin-bottom:1.3125rem;color:var(--color-secondary-darkturquoise,#137e84);display:inline-block}.custom-placeholder{background:#ccc;border:.1875rem dotted #999;min-height:3.75rem;-webkit-transition:-webkit-transform 250ms cubic-bezier(0,0,.2,1);transition:transform 250ms cubic-bezier(0,0,.2,1);transition:transform 250ms cubic-bezier(0,0,.2,1),-webkit-transform 250ms cubic-bezier(0,0,.2,1)}.cdk-drag-preview{box-sizing:border-box;box-shadow:0 .3125rem .3125rem -.1875rem rgba(0,0,0,.2),0 .5rem .625rem .0625rem rgba(0,0,0,.14),0 .1875rem .875rem .125rem rgba(0,0,0,.12)}.cdk-drag-animating{-webkit-transition:-webkit-transform 250ms cubic-bezier(0,0,.2,1);transition:transform 250ms cubic-bezier(0,0,.2,1);transition:transform 250ms cubic-bezier(0,0,.2,1),-webkit-transform 250ms cubic-bezier(0,0,.2,1)}::ng-deep sn-option-list[no-padding]{padding:0}::ng-deep sn-option-list[no-padding] .item-native{padding-left:initial!important;-webkit-padding-start:initial!important;padding-inline-start:initial!important}::ng-deep sn-option-list[no-padding] .item-native .item-inner{padding-right:initial!important;-webkit-padding-end:initial!important;padding-inline-end:initial!important}::ng-deep sn-option-list[no-padding] .item-native [item-end]{margin-right:initial}::ng-deep sn-option-item:last-child .item-native{border-bottom:none}::ng-deep sn-option-item .content-wrapper{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row}::ng-deep sn-option-item .content-wrapper .card-image{-ms-grid-row-align:center;align-self:center;-webkit-box-flex:0;flex:0 1 auto}::ng-deep sn-option-item .content-wrapper .account-item-container{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:start;justify-content:flex-start;-webkit-box-flex:2;flex-grow:2}::ng-deep sn-option-item .card-image{max-height:3rem;min-height:3rem;max-width:4.5rem;min-width:4.5rem;-ms-grid-row-align:center;align-self:center;position:relative}::ng-deep sn-option-item .card-image img{width:100%;height:100%;z-index:1}::ng-deep sn-option-item .card-image .locker-wrapper{z-index:2;position:absolute;left:0;right:0;top:0;bottom:0;background-color:#ffffffcc;display:-webkit-box;display:flex}::ng-deep sn-option-item .card-image .locker-wrapper sn-icon{margin:auto;font-size:1.5rem}::ng-deep sn-option-item .account-item-container{padding-top:.5625rem;padding-bottom:.6875rem}::ng-deep sn-option-item .account-item-container .account-item-name{color:var(--color-secondary-gray,#444);font-size:1rem;line-height:1.5rem;font-weight:400}::ng-deep sn-option-item .account-item-container .account-item-number{font-size:.875rem;color:var(--color-secondary-mediumgray,#767676);line-height:1.3125;font-weight:lighter}::ng-deep sn-option-item .disabled-card{font-size:1rem;color:var(--color-secondary-turquoise,#1bb3bc);font-weight:700}.item-wrapper{background-color:var(--color-primary-white,#fff);padding:0 1rem;box-shadow:0 .0625rem .125rem -.0625rem var(--color-primary-mediumsky,#cedee7);margin-bottom:.5rem}.item-wrapper .item-header-wrapper{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-pack:justify;justify-content:space-between;align-content:center;padding:1rem 0}.item-wrapper .item-header-wrapper .item-header-handle{line-height:1;-webkit-box-flex:0;flex:0;background:0 0;cursor:grab;cursor:-webkit-grab;cursor:-moz-grab}.item-wrapper .item-header-wrapper .item-header-handle:active{cursor:grabbing;cursor:-webkit-grabbing}.item-wrapper .item-header-wrapper .item-header-handle ::ng-deep sn-icon{font-size:1.5rem}.item-wrapper .item-header-wrapper .item-header-title{-webkit-box-flex:1;flex:1;font-size:1.125rem;color:var(--color-primary-santander,#ec0000);margin:0}.item-wrapper .content-wrapper{overflow:hidden}\"]\n            }] }\n];\n/** @nocollapse */\nEditComponent.ctorParameters = () => [\n    { type: ConfigService },\n    { type: GlobalPositionService },\n    { type: Location }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/shares/shares.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SharesComponent {\n    constructor() {\n        this.listTypes = ListTypes;\n        this.sharesList = [];\n        this.isExpanded = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set shares(value) {\n        this.sharesList = value;\n    }\n    /**\n     * @return {?}\n     */\n    get balance() {\n        return this._balance;\n    }\n    /**\n     * @param {?} balance\n     * @return {?}\n     */\n    set balance(balance) {\n        if (!!balance) {\n            this._balance = typeof balance === 'number' ? balance : balance.amount;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.balance = this.balance || this.getBalance();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getBalance() {\n        /** @type {?} */\n        let sum = 0;\n        if (Array.isArray(this.sharesList)) {\n            this.sharesList.forEach((/**\n             * @param {?} account\n             * @return {?}\n             */\n            account => {\n                sum += account.value.amount; // TODO: need to review to get the right attribute\n            }));\n        }\n        return sum;\n    }\n}\nSharesComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-shares',\n                template: \"<sn-common-list [type]=\\\"listTypes.SHARES\\\" [displayList]=\\\"sharesList\\\" [footerTitle]=\\\"'Balance'\\\" [footerValue]=\\\"balance\\\"></sn-common-list>\\n\"\n            }] }\n];\n/** @nocollapse */\nSharesComponent.ctorParameters = () => [];\nSharesComponent.propDecorators = {\n    shares: [{ type: Input, args: ['shares',] }],\n    balance: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/loans/loans.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LoansComponent {\n    constructor() {\n        this.listTypes = ListTypes;\n        this.loans = [];\n    }\n    /**\n     * @return {?}\n     */\n    get financing() {\n        return this._financing;\n    }\n    /**\n     * @param {?} financing\n     * @return {?}\n     */\n    set financing(financing) {\n        if (!!financing) {\n            this._financing = typeof financing === 'number' ? financing : financing.amount;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nLoansComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-loans',\n                template: \"\\n<sn-common-list [type]=\\\"listTypes.LOANS\\\" [displayList]=\\\"loans\\\" [footerTitle]=\\\"'GLOBALPOSITION.FINANCING' | translate\\\" [footerValue]=\\\"financing\\\"></sn-common-list>\\n\\n\"\n            }] }\n];\n/** @nocollapse */\nLoansComponent.ctorParameters = () => [];\nLoansComponent.propDecorators = {\n    loans: [{ type: Input, args: ['loans',] }],\n    financing: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/deposits/deposits.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DepositsComponent {\n    constructor() {\n        this.listTypes = ListTypes;\n        this.deposits = [];\n    }\n    /**\n     * @return {?}\n     */\n    get balance() {\n        return this._balance;\n    }\n    /**\n     * @param {?} balance\n     * @return {?}\n     */\n    set balance(balance) {\n        if (!!balance) {\n            this._balance = typeof balance === 'number' ? balance : balance.amount;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nDepositsComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-deposits',\n                template: \"\\n<sn-common-list [type]=\\\"listTypes.DEPOSITS\\\" [displayList]=\\\"deposits\\\" [footerTitle]=\\\"'GLOBALPOSITION.BALANCE' | translate\\\" [footerValue]=\\\"balance\\\"></sn-common-list>\\n\\n\"\n            }] }\n];\n/** @nocollapse */\nDepositsComponent.ctorParameters = () => [];\nDepositsComponent.propDecorators = {\n    deposits: [{ type: Input, args: ['deposits',] }],\n    balance: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/global-postion-routing.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nconst ɵ0 = {\n    header: { display: false },\n    footer: { display: true }\n}, ɵ1 = {\n    header: {\n        left: { icon: 'sn-SYS020', route: 'back' },\n        title: { label: 'Back to Global Position' }\n        // title: {label: 'GLOBALPOSITION.EDITINFO' | translate}\n    },\n    footer: {\n        display: false\n    }\n};\n/** @type {?} */\nconst routes = [\n    // { path: '', redirectTo: 'main'},\n    { path: '', component: GlobalPositionComponent,\n        data: ɵ0\n    },\n    { path: 'edit', component: EditComponent,\n        data: ɵ1\n    },\n    { path: '**', redirectTo: '' }\n];\nclass GlobalPositionRoutingModule {\n}\nGlobalPositionRoutingModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [RouterModule.forChild(routes)],\n                exports: [RouterModule]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/investment-funds/investment-funds.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FundsComponent {\n    constructor() {\n        this.listTypes = ListTypes;\n        this.fundList = [];\n        this.isExpanded = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set funds(value) {\n        this.fundList = value;\n    }\n    /**\n     * @return {?}\n     */\n    get balance() {\n        return this._balance;\n    }\n    /**\n     * @param {?} balance\n     * @return {?}\n     */\n    set balance(balance) {\n        if (!!balance) {\n            this._balance = typeof balance === 'number' ? balance : balance.amount;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.balance = this.balance || this.getBalance();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getBalance() {\n        /** @type {?} */\n        let sum = 0;\n        if (Array.isArray(this.fundList)) {\n            this.fundList.forEach((/**\n             * @param {?} fund\n             * @return {?}\n             */\n            fund => {\n                sum += fund.currentValue.amount;\n            }));\n        }\n        return sum;\n    }\n}\nFundsComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'sn-investment-funds',\n                template: \"<sn-common-list [type]=\\\"listTypes.FUNDS\\\" [displayList]=\\\"fundList\\\" [footerTitle]=\\\"'Balance'\\\" [footerValue]=\\\"balance\\\"></sn-common-list>\"\n            }] }\n];\nFundsComponent.propDecorators = {\n    funds: [{ type: Input, args: ['funds',] }],\n    balance: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/global-position.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} http\n * @param {?} path\n * @return {?}\n */\nfunction HttpLoaderFactory(http, path) {\n    return new TranslateHttpLoader(http, path.api.GlobalPosition['languages'], '.json');\n}\nclass GlobalPositionModule {\n}\nGlobalPositionModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    GlobalPositionComponent,\n                    AccountsComponent,\n                    CardsComponent,\n                    PensionPlansComponent,\n                    CommonListComponent,\n                    EditComponent,\n                    SharesComponent,\n                    LoansComponent,\n                    DepositsComponent,\n                    FundsComponent,\n                ],\n                providers: [\n                    HttpClientService,\n                    LocalStorageService,\n                ],\n                imports: [\n                    CommonModule,\n                    HttpClientModule,\n                    DragDropModule,\n                    AccordionModule,\n                    OptionListModule,\n                    MenuHeaderModule,\n                    IconModule,\n                    SlideToggleModule,\n                    SliderModule,\n                    CurrencyModule,\n                    TranslateModule.forChild({\n                        loader: {\n                            provide: TranslateLoader,\n                            useFactory: HttpLoaderFactory,\n                            deps: [HttpClient, EnviromentConfigService]\n                        }\n                    }),\n                    ProgressBarModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    GlobalPositionRoutingModule,\n                    MenuHeaderModule\n                ],\n                exports: [\n                    GlobalPositionComponent,\n                    EditComponent\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: globile-global-position.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { HttpLoaderFactory, GlobalPositionModule, AccountsComponent as ɵf, CardsComponent as ɵg, CommonListComponent as ɵi, DepositsComponent as ɵm, EditComponent as ɵj, GlobalPositionComponent as ɵa, FundsComponent as ɵn, LoansComponent as ɵl, PensionPlansComponent as ɵh, SharesComponent as ɵk, AccordionAnimations as ɵq, AccordionComponent as ɵp, AccordionModule as ɵo, GlobalPositionRoutingModule as ɵr, HttpClientService as ɵc, LocalStorageService as ɵe, ConfigService as ɵd, GlobalPositionService as ɵb };\n\n//# sourceMappingURL=globile-global-position.js.map"],"sourceRoot":""}